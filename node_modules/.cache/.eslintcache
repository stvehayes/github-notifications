[{"/Users/steve/Documents/repos/notifications/src/index.js":"1","/Users/steve/Documents/repos/notifications/src/App.js":"2","/Users/steve/Documents/repos/notifications/src/ColorModeSwitcher.js":"3","/Users/steve/Documents/repos/notifications/src/components/Notifications.js":"4","/Users/steve/Documents/repos/notifications/src/components/Command.js":"5","/Users/steve/Documents/repos/notifications/src/components/Keyboard.js":"6","/Users/steve/Documents/repos/notifications/src/components/pages/Issues.js":"7","/Users/steve/Documents/repos/notifications/src/components/context/PageContext.js":"8","/Users/steve/Documents/repos/notifications/src/components/Notification.js":"9","/Users/steve/Documents/repos/notifications/src/components/IssueHeader.js":"10","/Users/steve/Documents/repos/notifications/src/components/EmojiReact.js":"11","/Users/steve/Documents/repos/notifications/src/components/DialogMenu.js":"12","/Users/steve/Documents/repos/github-notifications/src/index.js":"13","/Users/steve/Documents/repos/github-notifications/src/App.js":"14","/Users/steve/Documents/repos/github-notifications/src/ColorModeSwitcher.js":"15","/Users/steve/Documents/repos/github-notifications/src/components/Notifications.js":"16","/Users/steve/Documents/repos/github-notifications/src/components/DialogMenu.js":"17","/Users/steve/Documents/repos/github-notifications/src/components/EmojiReact.js":"18","/Users/steve/Documents/repos/github-notifications/src/components/Command.js":"19","/Users/steve/Documents/repos/github-notifications/src/components/Notification.js":"20","/Users/steve/Documents/repos/github-notifications/src/components/Keyboard.js":"21","/Users/steve/Documents/repos/github-notifications/src/components/IssueHeader.js":"22"},{"size":224,"mtime":1659980473149,"results":"23","hashOfConfig":"24"},{"size":835,"mtime":1660062955759,"results":"25","hashOfConfig":"24"},{"size":2611,"mtime":1659620608000,"results":"26","hashOfConfig":"24"},{"size":9000,"mtime":1660061629646,"results":"27","hashOfConfig":"24"},{"size":2084,"mtime":1660062840848,"results":"28","hashOfConfig":"24"},{"size":724,"mtime":1659982263207,"results":"29","hashOfConfig":"24"},{"size":1037,"mtime":1659979840461,"results":"30","hashOfConfig":"24"},{"size":609,"mtime":1659981373779,"results":"31","hashOfConfig":"24"},{"size":1371,"mtime":1659989750135,"results":"32","hashOfConfig":"24"},{"size":1432,"mtime":1659989168858,"results":"33","hashOfConfig":"24"},{"size":814,"mtime":1659989062485,"results":"34","hashOfConfig":"24"},{"size":991,"mtime":1660061499736,"results":"35","hashOfConfig":"24"},{"size":224,"mtime":1659980473149,"results":"36","hashOfConfig":"37"},{"size":835,"mtime":1660062955759,"results":"38","hashOfConfig":"37"},{"size":2611,"mtime":1659620608000,"results":"39","hashOfConfig":"37"},{"size":11383,"mtime":1660075749647,"results":"40","hashOfConfig":"37"},{"size":991,"mtime":1660061499736,"results":"41","hashOfConfig":"37"},{"size":814,"mtime":1659989062485,"results":"42","hashOfConfig":"37"},{"size":2132,"mtime":1660073106636,"results":"43","hashOfConfig":"37"},{"size":1775,"mtime":1660076060994,"results":"44","hashOfConfig":"37"},{"size":724,"mtime":1659982263207,"results":"45","hashOfConfig":"37"},{"size":1432,"mtime":1659989168858,"results":"46","hashOfConfig":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"5j1lf8",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"63"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ht0pek",{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steve/Documents/repos/notifications/src/index.js",[],[],[],"/Users/steve/Documents/repos/notifications/src/App.js",["126","127"],[],"import { createContext } from 'react'\nimport {  BaseStyles, Box, ThemeProvider } from '@primer/react'\nimport ColorModeSwitcher from './ColorModeSwitcher'\nimport Notifications from './components/Notifications'\nimport DialogMenu from './components/DialogMenu'\n\nfunction App() {\n    return (\n        <ThemeProvider colorMode=\"auto\">\n            <BaseStyles>\n                <Box\n                    bg=\"canvas.default\"\n                    width=\"100%\"\n                    minHeight=\"100vh\"\n                    p={4}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                >\n                    <Notifications />\n                    {/* <DialogMenu /> */}\n                    <ColorModeSwitcher />\n                </Box>\n            </BaseStyles>\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","/Users/steve/Documents/repos/notifications/src/ColorModeSwitcher.js",[],[],[],"/Users/steve/Documents/repos/notifications/src/components/Notifications.js",["128","129"],[],"import {\n    useContext,\n    useEffect,\n    useState\n} from 'react'\nimport { motion } from 'framer-motion'\nimport {\n    Avatar,\n    Box,\n    Breadcrumbs,\n    Button,\n    StyledOcticon,\n    Text,\n    Textarea,\n    TextInput,\n} from '@primer/react'\nimport styled from 'styled-components'\nimport {\n    MarkGithubIcon,\n    SearchIcon,\n    BellIcon,\n    IssueOpenedIcon,\n    GitPullRequestIcon\n} from '@primer/octicons-react'\nimport Command from './Command'\nimport Notification from './Notification'\nimport IssueHeader from './IssueHeader'\nimport EmojiReact from './EmojiReact'\n\nconst commands = [\n    {\n        name: \"Notifications dashboard\",\n        icon: BellIcon,\n        command: \"âŒ˜N\",\n        value: \"home\"\n    },\n    {\n        name: \"Issues\",\n        icon: IssueOpenedIcon,\n        command: \"âŒ˜I\",\n        value: \"issues\"\n    },\n    {\n        name: \"Pull requests\",\n        icon: GitPullRequestIcon,\n        command: \"âŒ˜P\",\n        value: \"prs\"\n    },\n];\n\nconst issues = [\n    {\n        name: \"Assigned\",\n        emoji: \"ðŸŽ¯\",\n        command: \"âŒ˜A\",\n        value: \"issues\"\n    },\n    {\n        name: \"Participating\",\n        emoji: \"ðŸ’¬\",\n        command: \"âŒ˜P\",\n        value: \"issues\"\n    },\n    {\n        name: \"Mentioned\",\n        emoji: \"âœ‹\",\n        command: \"âŒ˜M\",\n        value: \"issues\"\n    },\n    {\n        name: \"Team mentioned\",\n        emoji: \"ðŸ™Œ\",\n        command: \"âŒ˜T\",\n        value: \"issues\"\n    },\n    {\n        name: \"Review requested\",\n        emoji: \"ðŸ‘€\",\n        command: \"âŒ˜R\",\n        value: \"issues\"\n    },\n];\n\nconst mentions = [\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n        new: true\n    },\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n    },\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n    },\n]\n\nconst Notifications = (props) => {\n    const [ page, setPage ] = useState(\"home\");\n    const [ key, setKey ] = useState(\"\");\n\n    const handleKeyDown = (event) => {\n        setKey(event.keyCode)\n        \n        if(event.keyCode === 73) {\n            setPage(\"issues\");\n            \n        };\n\n        if(event.keyCode === 77) {\n            setPage(\"mentioned\")\n        }\n\n        if(event.keyCode === 27) {\n            setPage(\"home\")\n        };\n\n        if(event.keyCode === 49) {\n            setPage(\"issue\")\n        };\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        \n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n\n    const spacing = 4;\n\n    return(\n        <Box height=\"max-content\" width=\"100%\" boxShadow=\"shadow.large\" bg=\"canvas.default\" border=\"1px solid\" borderRadius={12} borderColor=\"border.muted\" maxWidth={\"500px\"}>\n            <Box position=\"absolute\" bottom=\"1rem\" left=\"1rem\" display=\"flex\">\n                <Box mr=\"2rem\">\n                    <Text color=\"fg.muted\">Key</Text>\n                    <Text as=\"h1\">{key}</Text>\n                </Box>\n\n                <Box>\n                    <Text color=\"fg.muted\">Location</Text>\n                    <Text as=\"h1\">{page}</Text>\n                </Box>\n            </Box>\n            <Box display=\"flex\" borderColor=\"border.muted\" px={4} py={3}>\n                <Box mr={3}>\n                    <MarkGithubIcon size={24} />\n                </Box>\n                <h4>Notifications</h4>\n            </Box>\n\n            <Box height=\"44px\" p={spacing} display=\"flex\" borderBottom=\"1px solid\" borderTop=\"1px solid\" borderColor=\"border.muted\" alignItems=\"center\" backgroundColor=\"canvas.inset\" justifyItems=\"center\" py={1}>\n                {page === \"home\" ?\n                    <>\n                        <SearchIcon />\n                        <SearchBar placeholder=\"Search\" backgroundColor=\"transparent\" />\n                    </>\n                    :\n                    <Breadcrumbs>\n                        <Breadcrumbs.Item href=\"/\">\n                            <StyledOcticon color=\"fg.muted\" icon={IssueOpenedIcon} />\n                            <Text color=\"fg.muted\" ml={'12px'}>\n                                Issues\n                            </Text>\n                        </Breadcrumbs.Item>\n                        <Breadcrumbs.Item href=\"/\" selected={page === \"mentioned\"}>\n                            <Text color={page === \"mentioned\" ? \"fg.default\" : \"fg.muted\"}>{page === \"issues\" ? \"\" : \"Mentioned\"}</Text>\n                        </Breadcrumbs.Item>\n                        {page === \"issue\" &&\n                            <Breadcrumbs.Item href=\"/\" selected>\n                                <Text color={page === \"issue\" ? \"fg.default\" : \"fg.muted\"}>Add a new section to...</Text>\n                            </Breadcrumbs.Item>\n                        }   \n                    </Breadcrumbs>\n                }\n            </Box>\n            <Box px={spacing - 2} py={2}>\n                {page === \"home\" &&\n                    commands.map((command, index) => {\n                        return(\n                                <Command\n                                    name={command.name}\n                                    icon={command.icon}\n                                    command={command.command}\n                                    onClick={() => setPage(command.value)}\n                                    delay={index * 0.1}\n                                />\n                        )\n                    })\n                }\n                {page === \"issues\" &&\n                    issues.map((command, index) => {\n                        return(\n                            <Command\n                                name={command.name}\n                                emoji={command.emoji}\n                                command={command.command}\n                                onClick={() => setPage(\"mentioned\")}\n                                delay={index * 0.1}\n                            />\n                        )\n                    })\n                }\n                {page === \"mentioned\" &&\n                    mentions.map((mention, index) => {\n                        return(\n                            <Notification\n                                repo={mention.repo}\n                                title={mention.title}\n                                delay={index * 0.1}\n                                last={index === mentions.length - 1}\n                                new={mention.new}\n                                onClick={() => setPage(\"issue\")}\n                                command={index + 1}\n                            />\n                        )\n                    })\n                }\n\n                {page === \"issue\" &&\n                <motion.div\n                    initial={{\n                        opacity: 0,\n                        y: 20\n                    }}\n                    animate={{\n                        opacity: 1,\n                        y: 0\n                    }}\n                    transition={{\n                        type: 'spring',\n                        duration: 0.75,\n                        delay: props.delay,\n                    }}\n                >\n                    <Box p={spacing}>\n                        <Box pb={3} mb={3} borderBottom=\"1px solid\" borderColor=\"border.muted\">\n                            <IssueHeader title={\"Add a new section to Primer\"} noCommand noAvatar new={true} />\n                        </Box>\n                        <Box display=\"flex\" justifyContent=\"space-between\">\n                            <Box display=\"flex\" alignItems=\"center\">\n                                <Avatar size={24} src=\"https://avatars.githubusercontent.com/mona\" />\n                                <Text fontSize=\"12px\" style={{ cursor: \"pointer\" }} ml={2} fontWeight=\"bold\">ghmona</Text>\n                                <Text fontSize=\"12px\" ml = {1} color=\"fg.muted\">commented 1 hour ago</Text>\n                            </Box>\n                            <Button size=\"small\">View issue</Button>\n                        </Box>\n                        <Box my={3}>\n                            <Text>\n                                Since we are adopting this new pattern - should be consistent and use it on mobile too?\n                            </Text>\n                        </Box>\n                        <Box>\n                            <EmojiReact />\n                        </Box>\n                        \n                    </Box>\n                    </motion.div>\n                }\n            </Box>\n        </Box>\n    )\n}\n\nexport default Notifications;\n\nconst SearchBar = styled(TextInput)`\n    background-color: transparent;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    width: 100%;\n\n    &:focus-within {\n        border: none;\n        outline: none;\n        box-shadow: none;\n    }\n`;",[],"/Users/steve/Documents/repos/notifications/src/components/Command.js",["130"],[],"import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { Box, Text, StyledOcticon, Button } from '@primer/react'\nimport Keyboard from './Keyboard'\nimport keydown from 'react-keydown'\n\nconst Command = (props) => {\n    return(\n        <motion.div\n            initial={{\n                opacity: 0,\n                y: 20\n            }}\n            animate={{\n                opacity: 1,\n                y: 0\n            }}\n            transition={{\n                type: 'spring',\n                duration: 0.75,\n                delay: props.delay,\n            }}\n        >\n            <CommandButton onClick={props.onClick}>\n                <Box py={2} display=\"flex\" alignItems=\"center\" alignContent=\"center\" justifyContent=\"space-between\">\n                    <Box display=\"inline-flex\" alignItems=\"center\">\n                        {props.icon ? <StyledOcticon icon={props.icon || 'IssueOpenedIcon'} color=\"neutral.emphasis\" /> : <Box width=\"16px\" justifyContent=\"center\" display=\"block\">{props.emoji}</Box>}\n                        <Text color=\"fg.default\" ml={'12px'}>{props.name || \"Command name\"}</Text>\n                    </Box>\n                    <Keyboard command={props.command} />\n                </Box>\n            </CommandButton>\n        </motion.div>\n\n    )\n}\n\nexport default Command;\n\nconst CommandButton = styled(Button)`\n    display: block;\n    width: 100%;\n    border: none;\n    background-color: transparent;\n    padding: 0.125rem 1rem;\n    border-radius: 6px;\n    box-shadow: none;\n    font-weight: normal;\n    position: relative;\n    margin-left: 0.125rem;\n\n    &:focus-visible {\n        outline: none;\n        outline: none !important;\n        background: #f6f8fa;\n\n        &:after {\n            content: \"\";\n            font-family: \"SF Mono\", \"Roboto Mono\", monospace;\n            height: 50%;\n            position: absolute;\n            left: -14px;\n            background: #24292F;\n            width: 4px;\n            top: 50%;\n            transform: translateY(-50%);\n            border-radius: 6px 0 0 6px;\n        }\n    }\n`;","/Users/steve/Documents/repos/notifications/src/components/Keyboard.js",[],[],"/Users/steve/Documents/repos/notifications/src/components/pages/Issues.js",["131"],[],"import Command from '../Command'\n\nconst issues = [\n    {\n        name: \"Assigned\",\n        emoji: \"ðŸŽ¯\",\n        command: \"âŒ˜A\",\n        value: \"issues\"\n    },\n    {\n        name: \"Participating\",\n        emoji: \"ðŸ’¬\",\n        command: \"âŒ˜P\",\n        value: \"issues\"\n    },\n    {\n        name: \"Mentioned\",\n        emoji: \"âœ‹\",\n        command: \"âŒ˜M\",\n        value: \"issues\"\n    },\n    {\n        name: \"Team mentioned\",\n        emoji: \"ðŸ™Œ\",\n        command: \"âŒ˜T\",\n        value: \"issues\"\n    },\n    {\n        name: \"Review requested\",\n        emoji: \"ðŸ‘€\",\n        command: \"âŒ˜R\",\n        value: \"issues\"\n    },\n];\n\nconst Issues = (props) => {\n    return(\n        issues.map((command, index) => {\n            return(\n                <Command\n                    name={command.name}\n                    emoji={command.emoji}\n                    command={command.command}\n                    // onClick={() => setValue(command.value)}\n                    delay={index * 0.1}\n                />\n            )\n        })\n    )\n}","/Users/steve/Documents/repos/notifications/src/components/context/PageContext.js",[],[],"/Users/steve/Documents/repos/notifications/src/components/Notification.js",["132","133","134","135"],[],"import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n    Avatar,\n    Button,\n    Box,\n    Text,\n} from \"@primer/react\"\nimport Keyboard from \"./Keyboard\";\nimport IssueHeader from \"./IssueHeader\";\n\nconst spacing = 4;\n\nconst Notification = (props) => {\n    return (\n        <motion.div\n            initial={{\n                opacity: 0,\n                y: 20\n            }}\n            animate={{\n                opacity: 1,\n                y: 0\n            }}\n            transition={{\n                type: 'spring',\n                duration: 0.75,\n                delay: props.delay,\n            }}\n        >\n            <Box display=\"flex\" flexDirection=\"column\" mx={3} borderBottom={props.last ? \"\" : \"1px solid\"} borderColor=\"border.muted\">\n                <NotificationButton onClick={props.onClick}>\n                    <IssueHeader title={props.title} new={props.new} command={props.command} />\n                </NotificationButton>\n            </Box>\n        </motion.div>\n    )\n}\n\nexport default Notification;\n\nconst NotificationButton = styled(Button)`\n    display: block;\n    width: 100%;\n    border: none;\n    background-color: transparent;\n    padding: 12px;\n    border-radius: 6px;\n    box-shadow: none;\n    font-weight: normal;\n    margin: 8px 0;\n\n    &:hover {\n        background-color: transparent !important;\n    }\n`;\n","/Users/steve/Documents/repos/notifications/src/components/IssueHeader.js",[],[],"/Users/steve/Documents/repos/notifications/src/components/EmojiReact.js",[],[],"/Users/steve/Documents/repos/notifications/src/components/DialogMenu.js",["136"],[],"import styled from \"styled-components\";\nimport { useRef, useState } from \"react\";\nimport { Box, Button, Dialog, Text } from '@primer/react';\nimport Notifications from \"./Notifications\";\nimport Keyboard from \"./Keyboard\";\n\nconst DialogMenu = (props) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const returnFocusRef = useRef(null)\n\n    return(\n        <>\n            <Box>\n                <Button ref={returnFocusRef} onClick={() => setIsOpen(true)}>\n                    <Box display=\"flex\">\n                        <Keyboard command=\"/\" />\n                    </Box>\n                </Button>\n            </Box>\n            <Menu\n                returnFocusRef={returnFocusRef}\n                isOpen={isOpen}\n                onDismiss={() => setIsOpen(false)}\n                aria-labelledby=\"header-id\"\n            >\n                <Notifications />\n            </Menu>\n        </>\n    )\n}\n\nexport default DialogMenu;\n\nconst Menu = styled(Dialog)`\n    border-radius: 1rem;\n`;","/Users/steve/Documents/repos/github-notifications/src/index.js",[],[],"/Users/steve/Documents/repos/github-notifications/src/App.js",["137","138"],[],"/Users/steve/Documents/repos/github-notifications/src/ColorModeSwitcher.js",[],[],"/Users/steve/Documents/repos/github-notifications/src/components/Notifications.js",["139","140","141"],[],"import {\n    useContext,\n    useEffect,\n    useState\n} from 'react'\nimport { motion } from 'framer-motion'\nimport {\n    Avatar,\n    Box,\n    Breadcrumbs,\n    Button,\n    StyledOcticon,\n    Text,\n    Textarea,\n    TextInput,\n} from '@primer/react'\nimport styled from 'styled-components'\nimport {\n    MarkGithubIcon,\n    SearchIcon,\n    BellIcon,\n    IssueOpenedIcon,\n    GitPullRequestIcon\n} from '@primer/octicons-react'\nimport Command from './Command'\nimport Notification from './Notification'\nimport IssueHeader from './IssueHeader'\nimport EmojiReact from './EmojiReact'\n\nconst commands = [\n    {\n        name: \"Notifications dashboard\",\n        icon: BellIcon,\n        command: \"N\",\n        value: \"home\"\n    },\n    {\n        name: \"Issues\",\n        icon: IssueOpenedIcon,\n        command: \"I\",\n        value: \"issues\"\n    },\n    {\n        name: \"Pull requests\",\n        icon: GitPullRequestIcon,\n        command: \"P\",\n        value: \"prs\"\n    },\n];\n\nconst issues = [\n    {\n        name: \"Assigned\",\n        emoji: \"ðŸŽ¯\",\n        command: \"A\",\n        value: \"issues\"\n    },\n    {\n        name: \"Participating\",\n        emoji: \"ðŸ’¬\",\n        command: \"P\",\n        value: \"issues\"\n    },\n    {\n        name: \"Mentioned\",\n        emoji: \"âœ‹\",\n        command: \"M\",\n        value: \"issues\"\n    },\n    {\n        name: \"Team mentioned\",\n        emoji: \"ðŸ™Œ\",\n        command: \"T\",\n        value: \"issues\"\n    },\n    {\n        name: \"Review requested\",\n        emoji: \"ðŸ‘€\",\n        command: \"R\",\n        value: \"issues\"\n    },\n];\n\nconst mentions = [\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n        new: true\n    },\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n    },\n    {\n        repo: \"primer/primer\",\n        title: \"Add a new section to the Primer\",\n        time: \"1 hour ago\",\n    },\n]\n\nconst Notifications = (props) => {\n    const [ page, setPage ] = useState(\"home\");\n    const [ key, setKey ] = useState(\"\");\n    const [ open, setOpen ] = useState(true);\n\n    const handleKeyDown = (event) => {\n        setKey(event.keyCode)\n        \n        if(event.keyCode === 73) {\n            setPage(\"issues\");\n        };\n\n        if(event.keyCode === 77) {\n            setPage(\"mentioned\")\n        }\n\n        if(event.keyCode === 27) {\n            setPage(\"home\")\n            setOpen(false)\n        };\n\n        if(event.keyCode === 49) {\n            setPage(\"issue\")\n        };\n\n        if(event.keyCode === 91) {\n            setOpen(true)\n        };\n\n        if(event.keyCode === 93) {\n            setOpen(true)\n        };\n    };\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n        \n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, []);\n\n    const spacing = 4;\n\n    const variants = {\n        open: { opacity: 1, x: 0 },\n        closed: { opacity: 0, x: \"-75\" },\n    }\n\n    return(\n        <>\n            {open &&\n            <motion.div\n                style={{ width: \"100%\", display: \"block\" }}\n                initial={{ opacity: 0, y: 50 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5 }}\n            >\n                <Box height=\"max-content\" m=\"3rem auto\" width=\"100%\" boxShadow=\"shadow.large\" bg=\"canvas.default\" border=\"1px solid\" borderRadius={12} borderColor=\"border.muted\" maxWidth={\"500px\"}>\n                    \n                    <Box display=\"flex\" borderColor=\"border.muted\" px={4} py={3}>\n                        <Box mr={3}>\n                            <MarkGithubIcon size={24} />\n                        </Box>\n                        <h4>Notifications</h4>\n                    </Box>\n\n                    <Box height=\"44px\" p={spacing} display=\"flex\" borderBottom=\"1px solid\" borderTop=\"1px solid\" borderColor=\"border.muted\" alignItems=\"center\" backgroundColor=\"canvas.inset\" justifyItems=\"center\" py={1}>\n                        {page === \"home\" ?\n                            <>\n                                <SearchIcon />\n                                <SearchBar placeholder=\"Search\" backgroundColor=\"transparent\" />\n                            </>\n                            :\n                            <Breadcrumbs>\n                                <Breadcrumbs.Item href=\"/\">\n                                    <StyledOcticon color=\"fg.muted\" icon={IssueOpenedIcon} />\n                                    <Text color=\"fg.muted\" ml={'12px'}>\n                                        Issues\n                                    </Text>\n                                </Breadcrumbs.Item>\n\n                                {page !== \"home\" &&\n                                    <Breadcrumbs.Item href=\"/\" selected={page === \"issues\" ? true : false}>\n                                        <Text color={page === \"issues\" || page === \"mentioned\" ? \"fg.default\" : \"fg.muted\"}>{page === \"issues\" ? \"Home\" : \"Mentioned\"}</Text>\n                                    </Breadcrumbs.Item>\n                                }\n\n                                {page === \"issue\" &&\n                                    <Breadcrumbs.Item href=\"/\" selected={page === \"issue\"}>\n                                        <Text color={page === \"issue\" ? \"fg.default\" : \"fg.muted\"}>Add a new section to...</Text>\n                                    </Breadcrumbs.Item>\n                                }   \n                            </Breadcrumbs>\n                        }\n                    </Box>\n                    <Box px={spacing - 2} py={2}>\n                        {page === \"home\" &&\n                            commands.map((command, index) => {\n                                return(\n                                        <Command\n                                            name={command.name}\n                                            icon={command.icon}\n                                            command={command.command}\n                                            onClick={() => setPage(\"issues\")}\n                                            delay={index * 0.1}\n                                        />\n                                )\n                            })\n                        }\n                        {page === \"issues\" &&\n                            issues.map((command, index) => {\n                                return(\n                                    <Command\n                                        name={command.name}\n                                        emoji={command.emoji}\n                                        command={command.command}\n                                        onClick={() => setPage(\"mentioned\")}\n                                        delay={index * 0.1}\n                                    />\n                                )\n                            })\n                        }\n                        {page === \"mentioned\" &&\n                            mentions.map((mention, index) => {\n                                return(\n                                    <Notification\n                                        repo={mention.repo}\n                                        title={mention.title}\n                                        delay={index * 0.1}\n                                        last={index === mentions.length - 1}\n                                        new={mention.new}\n                                        onClick={() => setPage(\"issue\")}\n                                        command={index + 1}\n                                    />\n                                )\n                            })\n                        }\n\n                        {page === \"issue\" &&\n                        <motion.div\n                            initial={{\n                                opacity: 0,\n                                y: 20\n                            }}\n                            animate={{\n                                opacity: 1,\n                                y: 0\n                            }}\n                            transition={{\n                                type: 'spring',\n                                duration: 0.75,\n                                delay: props.delay,\n                            }}\n                        >\n                            <Box p={spacing}>\n                                <Box pb={3} mb={3} borderBottom=\"1px solid\" borderColor=\"border.muted\">\n                                    <IssueHeader title={\"Add a new section to Primer\"} noCommand noAvatar new={true} />\n                                </Box>\n                                <Box display=\"flex\" justifyContent=\"space-between\">\n                                    <Box display=\"flex\" alignItems=\"center\">\n                                        <Avatar size={24} src=\"https://avatars.githubusercontent.com/mona\" />\n                                        <Text fontSize=\"12px\" style={{ cursor: \"pointer\" }} ml={2} fontWeight=\"bold\">ghmona</Text>\n                                        <Text fontSize=\"12px\" ml = {1} color=\"fg.muted\">commented 1 hour ago</Text>\n                                    </Box>\n                                    <Button size=\"small\">View issue</Button>\n                                </Box>\n                                <Box my={3}>\n                                    <Text>\n                                        Since we are adopting this new pattern - should be consistent and use it on mobile too?\n                                    </Text>\n                                </Box>\n                                <Box>\n                                    <EmojiReact />\n                                </Box>\n                                \n                            </Box>\n                            </motion.div>\n                        }\n                    </Box>\n                </Box>\n            </motion.div>\n            }\n            <OpenText as=\"span\" open={open}>\n                âŒ˜\n                <Text display=\"block\" fontSize=\"1rem\" textAlign=\"center\">to open</Text>\n            </OpenText>\n            <Box opacity=\"0.2\" position=\"absolute\" bottom=\"1rem\" left=\"1rem\" display=\"flex\">\n                <Box mr=\"2rem\">\n                    <Text color=\"fg.muted\">Key</Text>\n                    <Text font as=\"h1\">{key}</Text>\n                </Box>\n\n                {/* <Box mr=\"2rem\">\n                    <Text color=\"fg.muted\">Location</Text>\n                    <Text as=\"h1\">{page}</Text>\n                </Box>\n\n                <Box>\n                    <Text color=\"fg.muted\">Open</Text>\n                    <Text as=\"h1\">{open ? \"true\" : \"false\"}</Text>\n                </Box> */}\n            </Box>\n        </>\n    )\n}\n\nexport default Notifications;\n\nconst SearchBar = styled(TextInput)`\n    background-color: transparent;\n    border: none;\n    outline: none;\n    box-shadow: none;\n    width: 100%;\n\n    &:focus-within {\n        border: none;\n        outline: none;\n        box-shadow: none;\n    }\n`;\n\nconst OpenText = styled(Text)`\n    display: block;\n    font-size: 2rem;\n    text-align: center;\n    opacity: 0.15;\n    font-weight: light;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    ${p => p.open && `display: none`}\n`;",[],"/Users/steve/Documents/repos/github-notifications/src/components/DialogMenu.js",["142"],[],"/Users/steve/Documents/repos/github-notifications/src/components/EmojiReact.js",[],[],"/Users/steve/Documents/repos/github-notifications/src/components/Command.js",["143"],[],"import styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport { Box, Text, StyledOcticon, Button } from '@primer/react'\nimport Keyboard from './Keyboard'\nimport keydown from 'react-keydown'\n\nconst Command = (props) => {\n    return(\n        <motion.div\n            initial={{\n                opacity: 0,\n                y: 20\n            }}\n            animate={{\n                opacity: 1,\n                y: 0\n            }}\n            transition={{\n                type: 'spring',\n                duration: 0.75,\n                delay: props.delay,\n            }}\n        >\n            <CommandButton onClick={props.onClick}>\n                <Box py={2} display=\"flex\" alignItems=\"center\" alignContent=\"center\" justifyContent=\"space-between\">\n                    <Box display=\"inline-flex\" alignItems=\"center\">\n                        {props.icon ? <StyledOcticon icon={props.icon || 'IssueOpenedIcon'} color=\"neutral.emphasis\" /> : <Box width=\"16px\" justifyContent=\"center\" display=\"block\">{props.emoji}</Box>}\n                        <Text color=\"fg.default\" ml={'12px'}>{props.name || \"Command name\"}</Text>\n                    </Box>\n                    <Keyboard command={props.command} />\n                </Box>\n            </CommandButton>\n        </motion.div>\n\n    )\n}\n\nexport default Command;\n\nconst CommandButton = styled(Button)`\n    display: block;\n    width: 100%;\n    border: none;\n    background-color: transparent;\n    padding: 0.125rem 1rem;\n    border-radius: 6px;\n    box-shadow: none;\n    font-weight: normal;\n    position: relative;\n    margin-left: 0.125rem;\n\n    &:focus-visible {\n        outline: none;\n        outline: none !important;\n        background: #f6f8fa;\n        border-radius: 0 6px 6px 0;\n\n        &:after {\n            content: \"\";\n            font-family: \"SF Mono\", \"Roboto Mono\", monospace;\n            height: calc(100% - 0px);\n            position: absolute;\n            left: -3px;\n            background: #24292F;\n            width: 3px;\n            top: 50%;\n            transform: translateY(-50%);\n            border-radius: 2px 0 0 2px;\n        }\n    }\n`;","/Users/steve/Documents/repos/github-notifications/src/components/Notification.js",["144","145","146","147"],[],"import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport {\n    Avatar,\n    Button,\n    Box,\n    Text,\n} from \"@primer/react\"\nimport Keyboard from \"./Keyboard\";\nimport IssueHeader from \"./IssueHeader\";\n\nconst spacing = 4;\n\nconst Notification = (props) => {\n    return (\n        <motion.div\n            initial={{\n                opacity: 0,\n                y: 20\n            }}\n            animate={{\n                opacity: 1,\n                y: 0\n            }}\n            transition={{\n                type: 'spring',\n                duration: 0.75,\n                delay: props.delay,\n            }}\n        >\n            <Box display=\"flex\" flexDirection=\"column\" mx={3} borderBottom={props.last ? \"\" : \"1px solid\"} borderColor=\"border.muted\">\n                <NotificationButton onClick={props.onClick}>\n                    <IssueHeader title={props.title} new={props.new} command={props.command} />\n                </NotificationButton>\n            </Box>\n        </motion.div>\n    )\n}\n\nexport default Notification;\n\nconst NotificationButton = styled(Button)`\n    display: block;\n    width: 100%;\n    border: none;\n    background-color: transparent;\n    padding: 12px;\n    border-radius: 6px;\n    box-shadow: none;\n    font-weight: normal;\n    margin: 8px 0;\n    position: relative;\n\n    &:focus {\n        outline: none;\n        outline: none !important;\n        background: #f6f8fa;\n        border-radius: 0 6px 6px 0;\n\n        &:after {\n            content: \"\";\n            height: calc(100% - 0px);\n            position: absolute;\n            left: -3px;\n            background: #24292F;\n            width: 3px;\n            top: 50%;\n            transform: translateY(-50%);\n            border-radius: 2px 0 0 2px;\n        }\n    }\n`;\n","/Users/steve/Documents/repos/github-notifications/src/components/Keyboard.js",[],[],"/Users/steve/Documents/repos/github-notifications/src/components/IssueHeader.js",[],[],{"ruleId":"148","severity":1,"message":"149","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":23},{"ruleId":"148","severity":1,"message":"152","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":2,"column":5,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"154","line":14,"column":5,"nodeType":"150","messageId":"151","endLine":14,"endColumn":13},{"ruleId":"148","severity":1,"message":"155","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"156","line":36,"column":7,"nodeType":"150","messageId":"151","endLine":36,"endColumn":13},{"ruleId":"148","severity":1,"message":"157","line":4,"column":5,"nodeType":"150","messageId":"151","endLine":4,"endColumn":11},{"ruleId":"148","severity":1,"message":"158","line":7,"column":5,"nodeType":"150","messageId":"151","endLine":7,"endColumn":9},{"ruleId":"148","severity":1,"message":"159","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":16},{"ruleId":"148","severity":1,"message":"160","line":12,"column":7,"nodeType":"150","messageId":"151","endLine":12,"endColumn":14},{"ruleId":"148","severity":1,"message":"158","line":3,"column":31,"nodeType":"150","messageId":"151","endLine":3,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":1,"column":10,"nodeType":"150","messageId":"151","endLine":1,"endColumn":23},{"ruleId":"148","severity":1,"message":"152","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":18},{"ruleId":"148","severity":1,"message":"153","line":2,"column":5,"nodeType":"150","messageId":"151","endLine":2,"endColumn":15},{"ruleId":"148","severity":1,"message":"154","line":14,"column":5,"nodeType":"150","messageId":"151","endLine":14,"endColumn":13},{"ruleId":"148","severity":1,"message":"161","line":147,"column":11,"nodeType":"150","messageId":"151","endLine":147,"endColumn":19},{"ruleId":"148","severity":1,"message":"158","line":3,"column":31,"nodeType":"150","messageId":"151","endLine":3,"endColumn":35},{"ruleId":"148","severity":1,"message":"155","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":15},{"ruleId":"148","severity":1,"message":"157","line":4,"column":5,"nodeType":"150","messageId":"151","endLine":4,"endColumn":11},{"ruleId":"148","severity":1,"message":"158","line":7,"column":5,"nodeType":"150","messageId":"151","endLine":7,"endColumn":9},{"ruleId":"148","severity":1,"message":"159","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":16},{"ruleId":"148","severity":1,"message":"160","line":12,"column":7,"nodeType":"150","messageId":"151","endLine":12,"endColumn":14},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'DialogMenu' is defined but never used.","'useContext' is defined but never used.","'Textarea' is defined but never used.","'keydown' is defined but never used.","'Issues' is assigned a value but never used.","'Avatar' is defined but never used.","'Text' is defined but never used.","'Keyboard' is defined but never used.","'spacing' is assigned a value but never used.","'variants' is assigned a value but never used."]