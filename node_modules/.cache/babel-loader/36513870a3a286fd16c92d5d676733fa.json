{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport sx from './sx';\nimport { RadioGroupContext } from './RadioGroup';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst StyledRadio = styled.input.withConfig({\n  displayName: \"Radio__StyledRadio\",\n  componentId: \"sc-1o8nmd2-0\"\n})([\"cursor:pointer;\", \" \", \";\", \"\"], props => props.disabled && `cursor: not-allowed;`, getGlobalFocusStyles(0), sx);\n/**\n * An accessible, native radio component for selecting one option from a list.\n */\n\nconst Radio = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    checked,\n    disabled,\n    name: nameProp,\n    onChange,\n    sx: sxProp,\n    required,\n    validationStatus,\n    value,\n    ...rest\n  } = _ref;\n  const radioGroupContext = useContext(RadioGroupContext);\n\n  const handleOnChange = e => {\n    (radioGroupContext === null || radioGroupContext === void 0 ? void 0 : radioGroupContext.onChange) && radioGroupContext.onChange(e);\n    onChange && onChange(e);\n  };\n\n  const name = nameProp || (radioGroupContext === null || radioGroupContext === void 0 ? void 0 : radioGroupContext.name);\n\n  if (!name) {\n    // eslint-disable-next-line no-console\n    console.warn('A radio input must have a `name` attribute. Pass `name` as a prop directly to each Radio, or nest them in a `RadioGroup` component with a `name` prop');\n  }\n\n  return /*#__PURE__*/React.createElement(StyledRadio, _extends({\n    type: \"radio\",\n    value: value,\n    name: name,\n    ref: ref,\n    disabled: disabled,\n    \"aria-disabled\": disabled ? 'true' : 'false',\n    checked: checked,\n    \"aria-checked\": checked ? 'true' : 'false',\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    sx: sxProp,\n    onChange: handleOnChange\n  }, rest));\n});\nRadio.displayName = 'Radio';\nexport default Radio;","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Radio.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","styled","React","useContext","sx","RadioGroupContext","getGlobalFocusStyles","StyledRadio","input","withConfig","displayName","componentId","props","disabled","Radio","forwardRef","ref","checked","name","nameProp","onChange","sxProp","required","validationStatus","value","rest","radioGroupContext","handleOnChange","e","console","warn","createElement","type"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled from 'styled-components';\nimport React, { useContext } from 'react';\nimport sx from './sx';\nimport { RadioGroupContext } from './RadioGroup';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst StyledRadio = styled.input.withConfig({\n  displayName: \"Radio__StyledRadio\",\n  componentId: \"sc-1o8nmd2-0\"\n})([\"cursor:pointer;\", \" \", \";\", \"\"], props => props.disabled && `cursor: not-allowed;`, getGlobalFocusStyles(0), sx);\n/**\n * An accessible, native radio component for selecting one option from a list.\n */\n\nconst Radio = /*#__PURE__*/React.forwardRef(({\n  checked,\n  disabled,\n  name: nameProp,\n  onChange,\n  sx: sxProp,\n  required,\n  validationStatus,\n  value,\n  ...rest\n}, ref) => {\n  const radioGroupContext = useContext(RadioGroupContext);\n\n  const handleOnChange = e => {\n    (radioGroupContext === null || radioGroupContext === void 0 ? void 0 : radioGroupContext.onChange) && radioGroupContext.onChange(e);\n    onChange && onChange(e);\n  };\n\n  const name = nameProp || (radioGroupContext === null || radioGroupContext === void 0 ? void 0 : radioGroupContext.name);\n\n  if (!name) {\n    // eslint-disable-next-line no-console\n    console.warn('A radio input must have a `name` attribute. Pass `name` as a prop directly to each Radio, or nest them in a `RadioGroup` component with a `name` prop');\n  }\n\n  return /*#__PURE__*/React.createElement(StyledRadio, _extends({\n    type: \"radio\",\n    value: value,\n    name: name,\n    ref: ref,\n    disabled: disabled,\n    \"aria-disabled\": disabled ? 'true' : 'false',\n    checked: checked,\n    \"aria-checked\": checked ? 'true' : 'false',\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    sx: sxProp,\n    onChange: handleOnChange\n  }, rest));\n});\nRadio.displayName = 'Radio';\nexport default Radio;"]},"metadata":{},"sourceType":"module"}