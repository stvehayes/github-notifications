{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport Box from '../Box';\nimport { ThemeProvider, useTheme } from '../ThemeProvider';\nimport { FocusKeys } from '@primer/behaviors';\nimport { get } from '../constants';\nimport { Dialog } from '../Dialog/Dialog';\nimport { useFocusZone } from '../hooks/useFocusZone';\n/**\n * Props to customize the ConfirmationDialog.\n */\n\nconst StyledConfirmationHeader = styled.header.withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationHeader\",\n  componentId: \"sc-vurs1e-0\"\n})([\"padding:\", \";display:flex;flex-direction:row;\"], get('space.2'));\nconst StyledTitle = styled(Box).attrs({\n  as: 'h1'\n}).withConfig({\n  displayName: \"ConfirmationDialog__StyledTitle\",\n  componentId: \"sc-vurs1e-1\"\n})([\"font-size:\", \";font-weight:\", \";padding:6px \", \";flex-grow:1;margin:0;\"], get('fontSizes.3'), get('fontWeights.bold'), get('space.2'));\n\nconst ConfirmationHeader = _ref => {\n  let {\n    title,\n    onClose,\n    dialogLabelId\n  } = _ref;\n  const onCloseClick = useCallback(() => {\n    onClose('close-button');\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(StyledConfirmationHeader, null, /*#__PURE__*/React.createElement(StyledTitle, {\n    id: dialogLabelId\n  }, title), /*#__PURE__*/React.createElement(Dialog.CloseButton, {\n    onClose: onCloseClick\n  }));\n};\n\nConfirmationHeader.displayName = \"ConfirmationHeader\";\nconst StyledConfirmationBody = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationBody\",\n  componentId: \"sc-vurs1e-2\"\n})([\"font-size:\", \";padding:0 \", \" \", \" \", \";color:\", \";flex-grow:1;\"], get('fontSizes.1'), get('space.3'), get('space.3'), get('space.3'), get('colors.fg.muted'));\n\nconst ConfirmationBody = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  return /*#__PURE__*/React.createElement(StyledConfirmationBody, null, children);\n};\n\nConfirmationBody.displayName = \"ConfirmationBody\";\nconst StyledConfirmationFooter = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationFooter\",\n  componentId: \"sc-vurs1e-3\"\n})([\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;grid-gap:\", \";align-items:end;justify-content:end;padding:\", \" \", \" \", \";\"], get('space.2'), get('space.1'), get('space.3'), get('space.3'));\n\nconst ConfirmationFooter = _ref3 => {\n  let {\n    footerButtons\n  } = _ref3;\n  const {\n    containerRef: footerRef\n  } = useFocusZone({\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.Tab,\n    focusInStrategy: 'closest'\n  }); // Must have exactly 2 buttons!\n\n  return /*#__PURE__*/React.createElement(StyledConfirmationFooter, {\n    ref: footerRef\n  }, /*#__PURE__*/React.createElement(Dialog.Buttons, {\n    buttons: footerButtons !== null && footerButtons !== void 0 ? footerButtons : []\n  }));\n};\n\nConfirmationFooter.displayName = \"ConfirmationFooter\";\n/**\n * A ConfirmationDialog is a special kind of dialog with more rigid behavior. It\n * is used to confirm a user action. ConfirmationDialogs always have exactly\n * two buttons: one to cancel the action and one to confirm it. No custom\n * rendering capabilities are provided for ConfirmationDialog.\n */\n\nexport const ConfirmationDialog = props => {\n  const {\n    onClose,\n    title,\n    cancelButtonContent = 'Cancel',\n    confirmButtonContent = 'OK',\n    confirmButtonType = 'normal',\n    children\n  } = props;\n  const onCancelButtonClick = useCallback(() => {\n    onClose('cancel');\n  }, [onClose]);\n  const onConfirmButtonClick = useCallback(() => {\n    onClose('confirm');\n  }, [onClose]);\n  const cancelButton = {\n    content: cancelButtonContent,\n    onClick: onCancelButtonClick\n  };\n  const confirmButton = {\n    content: confirmButtonContent,\n    buttonType: confirmButtonType,\n    onClick: onConfirmButtonClick,\n    autoFocus: true\n  };\n  const footerButtons = [cancelButton, confirmButton];\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onClose,\n    title: title,\n    footerButtons: footerButtons,\n    role: \"alertdialog\",\n    width: \"medium\",\n    renderHeader: ConfirmationHeader,\n    renderBody: ConfirmationBody,\n    renderFooter: ConfirmationFooter\n  }, children);\n};\nConfirmationDialog.displayName = \"ConfirmationDialog\";\n\nasync function confirm(themeProps, options) {\n  const {\n    content,\n    ...confirmationDialogProps\n  } = options;\n  return new Promise(resolve => {\n    const hostElement = document.createElement('div');\n\n    const onClose = gesture => {\n      ReactDOM.unmountComponentAtNode(hostElement);\n\n      if (gesture === 'confirm') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    };\n\n    ReactDOM.render( /*#__PURE__*/React.createElement(ThemeProvider, themeProps, /*#__PURE__*/React.createElement(ConfirmationDialog, _extends({}, confirmationDialogProps, {\n      onClose: onClose\n    }), content)), hostElement);\n  });\n}\n/**\n * This hook takes no parameters and returns an `async` function, `confirm`. When `confirm`\n * is called, it shows the confirmation dialog. When the dialog is dismissed, a promise is\n * resolved with `true` or `false` depending on whether or not the confirm button was used.\n */\n\n\nexport function useConfirm() {\n  const {\n    theme,\n    colorMode,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n  const result = useCallback(options => {\n    const themeProps = {\n      theme,\n      colorMode,\n      dayScheme,\n      nightScheme\n    };\n    return confirm(themeProps, options);\n  }, [theme, colorMode, dayScheme, nightScheme]);\n  return result;\n}","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Dialog/ConfirmationDialog.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useCallback","ReactDOM","styled","Box","ThemeProvider","useTheme","FocusKeys","get","Dialog","useFocusZone","StyledConfirmationHeader","header","withConfig","displayName","componentId","StyledTitle","attrs","as","ConfirmationHeader","title","onClose","dialogLabelId","onCloseClick","createElement","id","CloseButton","StyledConfirmationBody","ConfirmationBody","children","StyledConfirmationFooter","ConfirmationFooter","footerButtons","containerRef","footerRef","bindKeys","ArrowHorizontal","Tab","focusInStrategy","ref","Buttons","buttons","ConfirmationDialog","props","cancelButtonContent","confirmButtonContent","confirmButtonType","onCancelButtonClick","onConfirmButtonClick","cancelButton","content","onClick","confirmButton","buttonType","autoFocus","role","width","renderHeader","renderBody","renderFooter","confirm","themeProps","options","confirmationDialogProps","Promise","resolve","hostElement","document","gesture","unmountComponentAtNode","render","useConfirm","theme","colorMode","dayScheme","nightScheme","result"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA;AACA;AACA;;AAEA,MAAMC,wBAAwB,GAAGR,MAAM,CAACS,MAAP,CAAcC,UAAd,CAAyB;AACxDC,EAAAA,WAAW,EAAE,8CAD2C;AAExDC,EAAAA,WAAW,EAAE;AAF2C,CAAzB,EAG9B,CAAC,UAAD,EAAa,mCAAb,CAH8B,EAGqBP,GAAG,CAAC,SAAD,CAHxB,CAAjC;AAIA,MAAMQ,WAAW,GAAGb,MAAM,CAACC,GAAD,CAAN,CAAYa,KAAZ,CAAkB;AACpCC,EAAAA,EAAE,EAAE;AADgC,CAAlB,EAEjBL,UAFiB,CAEN;AACZC,EAAAA,WAAW,EAAE,iCADD;AAEZC,EAAAA,WAAW,EAAE;AAFD,CAFM,EAKjB,CAAC,YAAD,EAAe,eAAf,EAAgC,eAAhC,EAAiD,wBAAjD,CALiB,EAK2DP,GAAG,CAAC,aAAD,CAL9D,EAK+EA,GAAG,CAAC,kBAAD,CALlF,EAKwGA,GAAG,CAAC,SAAD,CAL3G,CAApB;;AAOA,MAAMW,kBAAkB,GAAG,QAIrB;AAAA,MAJsB;AAC1BC,IAAAA,KAD0B;AAE1BC,IAAAA,OAF0B;AAG1BC,IAAAA;AAH0B,GAItB;AACJ,QAAMC,YAAY,GAAGtB,WAAW,CAAC,MAAM;AACrCoB,IAAAA,OAAO,CAAC,cAAD,CAAP;AACD,GAF+B,EAE7B,CAACA,OAAD,CAF6B,CAAhC;AAGA,SAAO,aAAarB,KAAK,CAACwB,aAAN,CAAoBb,wBAApB,EAA8C,IAA9C,EAAoD,aAAaX,KAAK,CAACwB,aAAN,CAAoBR,WAApB,EAAiC;AACpHS,IAAAA,EAAE,EAAEH;AADgH,GAAjC,EAElFF,KAFkF,CAAjE,EAET,aAAapB,KAAK,CAACwB,aAAN,CAAoBf,MAAM,CAACiB,WAA3B,EAAwC;AAC9DL,IAAAA,OAAO,EAAEE;AADqD,GAAxC,CAFJ,CAApB;AAKD,CAbD;;AAeAJ,kBAAkB,CAACL,WAAnB,GAAiC,oBAAjC;AACA,MAAMa,sBAAsB,GAAGxB,MAAM,CAACC,GAAD,CAAN,CAAYS,UAAZ,CAAuB;AACpDC,EAAAA,WAAW,EAAE,4CADuC;AAEpDC,EAAAA,WAAW,EAAE;AAFuC,CAAvB,EAG5B,CAAC,YAAD,EAAe,aAAf,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,SAAxC,EAAmD,eAAnD,CAH4B,EAGyCP,GAAG,CAAC,aAAD,CAH5C,EAG6DA,GAAG,CAAC,SAAD,CAHhE,EAG6EA,GAAG,CAAC,SAAD,CAHhF,EAG6FA,GAAG,CAAC,SAAD,CAHhG,EAG6GA,GAAG,CAAC,iBAAD,CAHhH,CAA/B;;AAKA,MAAMoB,gBAAgB,GAAG,SAEnB;AAAA,MAFoB;AACxBC,IAAAA;AADwB,GAEpB;AACJ,SAAO,aAAa7B,KAAK,CAACwB,aAAN,CAAoBG,sBAApB,EAA4C,IAA5C,EAAkDE,QAAlD,CAApB;AACD,CAJD;;AAMAD,gBAAgB,CAACd,WAAjB,GAA+B,kBAA/B;AACA,MAAMgB,wBAAwB,GAAG3B,MAAM,CAACC,GAAD,CAAN,CAAYS,UAAZ,CAAuB;AACtDC,EAAAA,WAAW,EAAE,8CADyC;AAEtDC,EAAAA,WAAW,EAAE;AAFyC,CAAvB,EAG9B,CAAC,4EAAD,EAA+E,+CAA/E,EAAgI,GAAhI,EAAqI,GAArI,EAA0I,GAA1I,CAH8B,EAGkHP,GAAG,CAAC,SAAD,CAHrH,EAGkIA,GAAG,CAAC,SAAD,CAHrI,EAGkJA,GAAG,CAAC,SAAD,CAHrJ,EAGkKA,GAAG,CAAC,SAAD,CAHrK,CAAjC;;AAKA,MAAMuB,kBAAkB,GAAG,SAErB;AAAA,MAFsB;AAC1BC,IAAAA;AAD0B,GAEtB;AACJ,QAAM;AACJC,IAAAA,YAAY,EAAEC;AADV,MAEFxB,YAAY,CAAC;AACfyB,IAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,eAAV,GAA4B7B,SAAS,CAAC8B,GADjC;AAEfC,IAAAA,eAAe,EAAE;AAFF,GAAD,CAFhB,CADI,CAMA;;AAEJ,SAAO,aAAatC,KAAK,CAACwB,aAAN,CAAoBM,wBAApB,EAA8C;AAChES,IAAAA,GAAG,EAAEL;AAD2D,GAA9C,EAEjB,aAAalC,KAAK,CAACwB,aAAN,CAAoBf,MAAM,CAAC+B,OAA3B,EAAoC;AAClDC,IAAAA,OAAO,EAAET,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqDA,aAArD,GAAqE;AAD5B,GAApC,CAFI,CAApB;AAKD,CAfD;;AAiBAD,kBAAkB,CAACjB,WAAnB,GAAiC,oBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAM4B,kBAAkB,GAAGC,KAAK,IAAI;AACzC,QAAM;AACJtB,IAAAA,OADI;AAEJD,IAAAA,KAFI;AAGJwB,IAAAA,mBAAmB,GAAG,QAHlB;AAIJC,IAAAA,oBAAoB,GAAG,IAJnB;AAKJC,IAAAA,iBAAiB,GAAG,QALhB;AAMJjB,IAAAA;AANI,MAOFc,KAPJ;AAQA,QAAMI,mBAAmB,GAAG9C,WAAW,CAAC,MAAM;AAC5CoB,IAAAA,OAAO,CAAC,QAAD,CAAP;AACD,GAFsC,EAEpC,CAACA,OAAD,CAFoC,CAAvC;AAGA,QAAM2B,oBAAoB,GAAG/C,WAAW,CAAC,MAAM;AAC7CoB,IAAAA,OAAO,CAAC,SAAD,CAAP;AACD,GAFuC,EAErC,CAACA,OAAD,CAFqC,CAAxC;AAGA,QAAM4B,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAEN,mBADU;AAEnBO,IAAAA,OAAO,EAAEJ;AAFU,GAArB;AAIA,QAAMK,aAAa,GAAG;AACpBF,IAAAA,OAAO,EAAEL,oBADW;AAEpBQ,IAAAA,UAAU,EAAEP,iBAFQ;AAGpBK,IAAAA,OAAO,EAAEH,oBAHW;AAIpBM,IAAAA,SAAS,EAAE;AAJS,GAAtB;AAMA,QAAMtB,aAAa,GAAG,CAACiB,YAAD,EAAeG,aAAf,CAAtB;AACA,SAAO,aAAapD,KAAK,CAACwB,aAAN,CAAoBf,MAApB,EAA4B;AAC9CY,IAAAA,OAAO,EAAEA,OADqC;AAE9CD,IAAAA,KAAK,EAAEA,KAFuC;AAG9CY,IAAAA,aAAa,EAAEA,aAH+B;AAI9CuB,IAAAA,IAAI,EAAE,aAJwC;AAK9CC,IAAAA,KAAK,EAAE,QALuC;AAM9CC,IAAAA,YAAY,EAAEtC,kBANgC;AAO9CuC,IAAAA,UAAU,EAAE9B,gBAPkC;AAQ9C+B,IAAAA,YAAY,EAAE5B;AARgC,GAA5B,EASjBF,QATiB,CAApB;AAUD,CApCM;AAqCPa,kBAAkB,CAAC5B,WAAnB,GAAiC,oBAAjC;;AAEA,eAAe8C,OAAf,CAAuBC,UAAvB,EAAmCC,OAAnC,EAA4C;AAC1C,QAAM;AACJZ,IAAAA,OADI;AAEJ,OAAGa;AAFC,MAGFD,OAHJ;AAIA,SAAO,IAAIE,OAAJ,CAAYC,OAAO,IAAI;AAC5B,UAAMC,WAAW,GAAGC,QAAQ,CAAC3C,aAAT,CAAuB,KAAvB,CAApB;;AAEA,UAAMH,OAAO,GAAG+C,OAAO,IAAI;AACzBlE,MAAAA,QAAQ,CAACmE,sBAAT,CAAgCH,WAAhC;;AAEA,UAAIE,OAAO,KAAK,SAAhB,EAA2B;AACzBH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAFD,MAEO;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARD;;AAUA/D,IAAAA,QAAQ,CAACoE,MAAT,EAAiB,aAAatE,KAAK,CAACwB,aAAN,CAAoBnB,aAApB,EAAmCwD,UAAnC,EAA+C,aAAa7D,KAAK,CAACwB,aAAN,CAAoBkB,kBAApB,EAAwCvD,QAAQ,CAAC,EAAD,EAAK4E,uBAAL,EAA8B;AACtK1C,MAAAA,OAAO,EAAEA;AAD6J,KAA9B,CAAhD,EAEtF6B,OAFsF,CAA5D,CAA9B,EAEegB,WAFf;AAGD,GAhBM,CAAP;AAiBD;AACD;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASK,UAAT,GAAsB;AAC3B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFrE,QAAQ,EALZ;AAMA,QAAMsE,MAAM,GAAG3E,WAAW,CAAC6D,OAAO,IAAI;AACpC,UAAMD,UAAU,GAAG;AACjBW,MAAAA,KADiB;AAEjBC,MAAAA,SAFiB;AAGjBC,MAAAA,SAHiB;AAIjBC,MAAAA;AAJiB,KAAnB;AAMA,WAAOf,OAAO,CAACC,UAAD,EAAaC,OAAb,CAAd;AACD,GARyB,EAQvB,CAACU,KAAD,EAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,WAA9B,CARuB,CAA1B;AASA,SAAOC,MAAP;AACD","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport Box from '../Box';\nimport { ThemeProvider, useTheme } from '../ThemeProvider';\nimport { FocusKeys } from '@primer/behaviors';\nimport { get } from '../constants';\nimport { Dialog } from '../Dialog/Dialog';\nimport { useFocusZone } from '../hooks/useFocusZone';\n/**\n * Props to customize the ConfirmationDialog.\n */\n\nconst StyledConfirmationHeader = styled.header.withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationHeader\",\n  componentId: \"sc-vurs1e-0\"\n})([\"padding:\", \";display:flex;flex-direction:row;\"], get('space.2'));\nconst StyledTitle = styled(Box).attrs({\n  as: 'h1'\n}).withConfig({\n  displayName: \"ConfirmationDialog__StyledTitle\",\n  componentId: \"sc-vurs1e-1\"\n})([\"font-size:\", \";font-weight:\", \";padding:6px \", \";flex-grow:1;margin:0;\"], get('fontSizes.3'), get('fontWeights.bold'), get('space.2'));\n\nconst ConfirmationHeader = ({\n  title,\n  onClose,\n  dialogLabelId\n}) => {\n  const onCloseClick = useCallback(() => {\n    onClose('close-button');\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(StyledConfirmationHeader, null, /*#__PURE__*/React.createElement(StyledTitle, {\n    id: dialogLabelId\n  }, title), /*#__PURE__*/React.createElement(Dialog.CloseButton, {\n    onClose: onCloseClick\n  }));\n};\n\nConfirmationHeader.displayName = \"ConfirmationHeader\";\nconst StyledConfirmationBody = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationBody\",\n  componentId: \"sc-vurs1e-2\"\n})([\"font-size:\", \";padding:0 \", \" \", \" \", \";color:\", \";flex-grow:1;\"], get('fontSizes.1'), get('space.3'), get('space.3'), get('space.3'), get('colors.fg.muted'));\n\nconst ConfirmationBody = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StyledConfirmationBody, null, children);\n};\n\nConfirmationBody.displayName = \"ConfirmationBody\";\nconst StyledConfirmationFooter = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationFooter\",\n  componentId: \"sc-vurs1e-3\"\n})([\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;grid-gap:\", \";align-items:end;justify-content:end;padding:\", \" \", \" \", \";\"], get('space.2'), get('space.1'), get('space.3'), get('space.3'));\n\nconst ConfirmationFooter = ({\n  footerButtons\n}) => {\n  const {\n    containerRef: footerRef\n  } = useFocusZone({\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.Tab,\n    focusInStrategy: 'closest'\n  }); // Must have exactly 2 buttons!\n\n  return /*#__PURE__*/React.createElement(StyledConfirmationFooter, {\n    ref: footerRef\n  }, /*#__PURE__*/React.createElement(Dialog.Buttons, {\n    buttons: footerButtons !== null && footerButtons !== void 0 ? footerButtons : []\n  }));\n};\n\nConfirmationFooter.displayName = \"ConfirmationFooter\";\n\n/**\n * A ConfirmationDialog is a special kind of dialog with more rigid behavior. It\n * is used to confirm a user action. ConfirmationDialogs always have exactly\n * two buttons: one to cancel the action and one to confirm it. No custom\n * rendering capabilities are provided for ConfirmationDialog.\n */\nexport const ConfirmationDialog = props => {\n  const {\n    onClose,\n    title,\n    cancelButtonContent = 'Cancel',\n    confirmButtonContent = 'OK',\n    confirmButtonType = 'normal',\n    children\n  } = props;\n  const onCancelButtonClick = useCallback(() => {\n    onClose('cancel');\n  }, [onClose]);\n  const onConfirmButtonClick = useCallback(() => {\n    onClose('confirm');\n  }, [onClose]);\n  const cancelButton = {\n    content: cancelButtonContent,\n    onClick: onCancelButtonClick\n  };\n  const confirmButton = {\n    content: confirmButtonContent,\n    buttonType: confirmButtonType,\n    onClick: onConfirmButtonClick,\n    autoFocus: true\n  };\n  const footerButtons = [cancelButton, confirmButton];\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onClose,\n    title: title,\n    footerButtons: footerButtons,\n    role: \"alertdialog\",\n    width: \"medium\",\n    renderHeader: ConfirmationHeader,\n    renderBody: ConfirmationBody,\n    renderFooter: ConfirmationFooter\n  }, children);\n};\nConfirmationDialog.displayName = \"ConfirmationDialog\";\n\nasync function confirm(themeProps, options) {\n  const {\n    content,\n    ...confirmationDialogProps\n  } = options;\n  return new Promise(resolve => {\n    const hostElement = document.createElement('div');\n\n    const onClose = gesture => {\n      ReactDOM.unmountComponentAtNode(hostElement);\n\n      if (gesture === 'confirm') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    };\n\n    ReactDOM.render( /*#__PURE__*/React.createElement(ThemeProvider, themeProps, /*#__PURE__*/React.createElement(ConfirmationDialog, _extends({}, confirmationDialogProps, {\n      onClose: onClose\n    }), content)), hostElement);\n  });\n}\n/**\n * This hook takes no parameters and returns an `async` function, `confirm`. When `confirm`\n * is called, it shows the confirmation dialog. When the dialog is dismissed, a promise is\n * resolved with `true` or `false` depending on whether or not the confirm button was used.\n */\n\n\nexport function useConfirm() {\n  const {\n    theme,\n    colorMode,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n  const result = useCallback(options => {\n    const themeProps = {\n      theme,\n      colorMode,\n      dayScheme,\n      nightScheme\n    };\n    return confirm(themeProps, options);\n  }, [theme, colorMode, dayScheme, nightScheme]);\n  return result;\n}"]},"metadata":{},"sourceType":"module"}