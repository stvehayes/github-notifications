"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Breadcrumb = exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Box = _interopRequireDefault(require("./Box"));

var _constants = require("./constants");

var _sx = _interopRequireDefault(require("./sx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SELECTED_CLASS = 'selected';

const Wrapper = _styledComponents.default.li.withConfig({
  displayName: "Breadcrumbs__Wrapper",
  componentId: "sc-zwknu7-0"
})(["display:inline-block;white-space:nowrap;list-style:none;&::after{padding-right:0.5em;padding-left:0.5em;color:", ";font-size:", ";content:'/';}&:first-child{margin-left:0;}&:last-child{&::after{content:none;}}"], (0, _constants.get)('colors.fg.muted'), (0, _constants.get)('fontSizes.1'));

const BreadcrumbsBase = _styledComponents.default.nav.withConfig({
  displayName: "Breadcrumbs__BreadcrumbsBase",
  componentId: "sc-zwknu7-1"
})(["display:flex;justify-content:space-between;", ";"], _sx.default);

function Breadcrumbs({
  className,
  children,
  sx: sxProp
}) {
  const wrappedChildren = _react.default.Children.map(children, child => /*#__PURE__*/_react.default.createElement(Wrapper, null, child));

  return /*#__PURE__*/_react.default.createElement(BreadcrumbsBase, {
    className: className,
    "aria-label": "Breadcrumbs",
    sx: sxProp
  }, /*#__PURE__*/_react.default.createElement(_Box.default, {
    as: "ol",
    my: 0,
    pl: 0
  }, wrappedChildren));
}

Breadcrumbs.displayName = "Breadcrumbs";

const BreadcrumbsItem = _styledComponents.default.a.attrs(props => ({
  activeClassName: typeof props.to === 'string' ? 'selected' : '',
  className: (0, _classnames.default)(props.selected && SELECTED_CLASS, props.className),
  'aria-current': props.selected ? 'page' : null
})).withConfig({
  displayName: "Breadcrumbs__BreadcrumbsItem",
  componentId: "sc-zwknu7-2"
})(["color:", ";display:inline-block;font-size:", ";text-decoration:none;&:hover{text-decoration:underline;}&.selected{color:", ";pointer-events:none;}", ";"], (0, _constants.get)('colors.accent.fg'), (0, _constants.get)('fontSizes.1'), (0, _constants.get)('colors.fg.default'), _sx.default);

Breadcrumbs.displayName = 'Breadcrumbs';
BreadcrumbsItem.displayName = 'Breadcrumbs.Item';

var _default = Object.assign(Breadcrumbs, {
  Item: BreadcrumbsItem
});
/**
 * @deprecated Use the `Breadcrumbs` component instead (i.e. `<Breadcrumb>` â†’ `<Breadcrumbs>`)
 */


exports.default = _default;
const Breadcrumb = Object.assign(Breadcrumbs, {
  Item: BreadcrumbsItem
});
/**
 * @deprecated Use the `BreadcrumbsProps` type instead
 */

exports.Breadcrumb = Breadcrumb;