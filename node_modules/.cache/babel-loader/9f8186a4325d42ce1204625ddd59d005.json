{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { createContext } from 'react';\nimport CheckboxOrRadioGroup from './_CheckboxOrRadioGroup';\nimport CheckboxOrRadioGroupCaption from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupCaption';\nimport CheckboxOrRadioGroupLabel from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupLabel';\nimport CheckboxOrRadioGroupValidation from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupValidation';\nimport { useRenderForcingRef } from './hooks';\nexport const RadioGroupContext = /*#__PURE__*/createContext(null);\n\nconst RadioGroup = _ref => {\n  let {\n    children,\n    disabled,\n    onChange,\n    name,\n    ...rest\n  } = _ref;\n  const [selectedRadioValue, setSelectedRadioValue] = useRenderForcingRef(null);\n\n  const updateSelectedCheckboxes = e => {\n    const {\n      value,\n      checked\n    } = e.currentTarget;\n\n    if (checked) {\n      setSelectedRadioValue(value);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      disabled,\n      name,\n      onChange: e => {\n        if (onChange) {\n          updateSelectedCheckboxes(e);\n          onChange(selectedRadioValue.current, e);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxOrRadioGroup, _extends({\n    disabled: disabled\n  }, rest), children));\n};\n\nRadioGroup.displayName = \"RadioGroup\";\nexport default Object.assign(RadioGroup, {\n  Caption: CheckboxOrRadioGroupCaption,\n  Label: CheckboxOrRadioGroupLabel,\n  Validation: CheckboxOrRadioGroupValidation\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/RadioGroup.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","createContext","CheckboxOrRadioGroup","CheckboxOrRadioGroupCaption","CheckboxOrRadioGroupLabel","CheckboxOrRadioGroupValidation","useRenderForcingRef","RadioGroupContext","RadioGroup","children","disabled","onChange","name","rest","selectedRadioValue","setSelectedRadioValue","updateSelectedCheckboxes","e","value","checked","currentTarget","createElement","Provider","current","displayName","Caption","Label","Validation"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,2BAAP,MAAwC,sDAAxC;AACA,OAAOC,yBAAP,MAAsC,oDAAtC;AACA,OAAOC,8BAAP,MAA2C,yDAA3C;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,OAAO,MAAMC,iBAAiB,GAAG,aAAaN,aAAa,CAAC,IAAD,CAApD;;AAEP,MAAMO,UAAU,GAAG,QAMb;AAAA,MANc;AAClBC,IAAAA,QADkB;AAElBC,IAAAA,QAFkB;AAGlBC,IAAAA,QAHkB;AAIlBC,IAAAA,IAJkB;AAKlB,OAAGC;AALe,GAMd;AACJ,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CT,mBAAmB,CAAC,IAAD,CAAvE;;AAEA,QAAMU,wBAAwB,GAAGC,CAAC,IAAI;AACpC,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA;AAFI,QAGFF,CAAC,CAACG,aAHN;;AAKA,QAAID,OAAJ,EAAa;AACXJ,MAAAA,qBAAqB,CAACG,KAAD,CAArB;AACA;AACD;AACF,GAVD;;AAYA,SAAO,aAAalB,KAAK,CAACqB,aAAN,CAAoBd,iBAAiB,CAACe,QAAtC,EAAgD;AAClEJ,IAAAA,KAAK,EAAE;AACLR,MAAAA,QADK;AAELE,MAAAA,IAFK;AAGLD,MAAAA,QAAQ,EAAEM,CAAC,IAAI;AACb,YAAIN,QAAJ,EAAc;AACZK,UAAAA,wBAAwB,CAACC,CAAD,CAAxB;AACAN,UAAAA,QAAQ,CAACG,kBAAkB,CAACS,OAApB,EAA6BN,CAA7B,CAAR;AACD;AACF;AARI;AAD2D,GAAhD,EAWjB,aAAajB,KAAK,CAACqB,aAAN,CAAoBnB,oBAApB,EAA0Cf,QAAQ,CAAC;AACjEuB,IAAAA,QAAQ,EAAEA;AADuD,GAAD,EAE/DG,IAF+D,CAAlD,EAENJ,QAFM,CAXI,CAApB;AAcD,CAnCD;;AAqCAD,UAAU,CAACgB,WAAX,GAAyB,YAAzB;AACA,eAAepC,MAAM,CAACC,MAAP,CAAcmB,UAAd,EAA0B;AACvCiB,EAAAA,OAAO,EAAEtB,2BAD8B;AAEvCuB,EAAAA,KAAK,EAAEtB,yBAFgC;AAGvCuB,EAAAA,UAAU,EAAEtB;AAH2B,CAA1B,CAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { createContext } from 'react';\nimport CheckboxOrRadioGroup from './_CheckboxOrRadioGroup';\nimport CheckboxOrRadioGroupCaption from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupCaption';\nimport CheckboxOrRadioGroupLabel from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupLabel';\nimport CheckboxOrRadioGroupValidation from './_CheckboxOrRadioGroup/_CheckboxOrRadioGroupValidation';\nimport { useRenderForcingRef } from './hooks';\nexport const RadioGroupContext = /*#__PURE__*/createContext(null);\n\nconst RadioGroup = ({\n  children,\n  disabled,\n  onChange,\n  name,\n  ...rest\n}) => {\n  const [selectedRadioValue, setSelectedRadioValue] = useRenderForcingRef(null);\n\n  const updateSelectedCheckboxes = e => {\n    const {\n      value,\n      checked\n    } = e.currentTarget;\n\n    if (checked) {\n      setSelectedRadioValue(value);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      disabled,\n      name,\n      onChange: e => {\n        if (onChange) {\n          updateSelectedCheckboxes(e);\n          onChange(selectedRadioValue.current, e);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxOrRadioGroup, _extends({\n    disabled: disabled\n  }, rest), children));\n};\n\nRadioGroup.displayName = \"RadioGroup\";\nexport default Object.assign(RadioGroup, {\n  Caption: CheckboxOrRadioGroupCaption,\n  Label: CheckboxOrRadioGroupLabel,\n  Validation: CheckboxOrRadioGroupValidation\n});"]},"metadata":{},"sourceType":"module"}