{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, useRef } from 'react';\nimport styled from 'styled-components';\nimport ButtonClose from './deprecated/Button/ButtonClose';\nimport { get } from './constants';\nimport Box from './Box';\nimport useDialog from './hooks/useDialog';\nimport sx from './sx';\nimport Text from './Text';\nimport { useCombinedRefs } from './hooks/useCombinedRefs';\n\nconst noop = () => null;\n\nconst DialogBase = styled.div.withConfig({\n  displayName: \"Dialog__DialogBase\",\n  componentId: \"sc-13rdxb7-0\"\n})([\"box-shadow:\", \";border-radius:\", \";position:fixed;top:0;left:50%;transform:translateX(-50%);max-height:80vh;z-index:999;margin:10vh auto;background-color:\", \";width:\", \";outline:none;@media screen and (max-width:750px){width:100vw;margin:0;border-radius:0;height:100vh;}\", \";\"], get('shadows.shadow.large'), get('radii.2'), get('colors.canvas.default'), props => props.narrow ? '320px' : props.wide ? '640px' : '440px', sx);\nconst DialogHeaderBase = styled(Box).withConfig({\n  displayName: \"Dialog__DialogHeaderBase\",\n  componentId: \"sc-13rdxb7-1\"\n})([\"border-radius:\", \" \", \" 0px 0px;border-bottom:1px solid \", \";display:flex;@media screen and (max-width:750px){border-radius:0px;}\", \";\"], get('radii.2'), get('radii.2'), get('colors.border.default'), sx);\n\nfunction DialogHeader(_ref) {\n  let {\n    theme,\n    children,\n    backgroundColor = 'gray.1',\n    ...rest\n  } = _ref;\n\n  if (React.Children.toArray(children).every(ch => typeof ch === 'string')) {\n    children = /*#__PURE__*/React.createElement(Text, {\n      theme: theme,\n      color: \"fg.default\",\n      fontSize: 1,\n      fontWeight: \"bold\",\n      fontFamily: \"sans-serif\"\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(DialogHeaderBase, _extends({\n    theme: theme,\n    p: 3,\n    backgroundColor: backgroundColor\n  }, rest), children);\n}\n\nDialogHeader.displayName = \"DialogHeader\";\nconst Overlay = styled.span.withConfig({\n  displayName: \"Dialog__Overlay\",\n  componentId: \"sc-13rdxb7-2\"\n})([\"&:before{position:fixed;top:0;right:0;bottom:0;left:0;display:block;cursor:default;content:' ';background:transparent;z-index:99;background:\", \";}\"], get('colors.primer.canvas.backdrop'));\nconst Dialog = /*#__PURE__*/forwardRef((_ref2, forwardedRef) => {\n  let {\n    children,\n    onDismiss = noop,\n    isOpen,\n    initialFocusRef,\n    returnFocusRef,\n    ...props\n  } = _ref2;\n  const overlayRef = useRef(null);\n  const modalRef = useCombinedRefs(forwardedRef);\n  const closeButtonRef = useRef(null);\n\n  const onCloseClick = () => {\n    onDismiss();\n\n    if (returnFocusRef && returnFocusRef.current) {\n      returnFocusRef.current.focus();\n    }\n  };\n\n  const {\n    getDialogProps\n  } = useDialog({\n    modalRef,\n    onDismiss: onCloseClick,\n    isOpen,\n    initialFocusRef,\n    closeButtonRef,\n    returnFocusRef,\n    overlayRef\n  });\n  return isOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Overlay, {\n    ref: overlayRef\n  }), /*#__PURE__*/React.createElement(DialogBase, _extends({\n    tabIndex: -1,\n    ref: modalRef,\n    role: \"dialog\",\n    \"aria-modal\": \"true\"\n  }, props, getDialogProps()), /*#__PURE__*/React.createElement(ButtonClose, {\n    ref: closeButtonRef,\n    onClick: onCloseClick,\n    sx: {\n      position: 'absolute',\n      top: '16px',\n      right: '16px'\n    }\n  }), children)) : null;\n});\nDialogHeader.defaultProps = {\n  backgroundColor: 'canvas.subtle'\n};\nDialogHeader.propTypes = { ...Box.propTypes\n};\nDialogHeader.displayName = 'Dialog.Header';\nDialog.displayName = 'Dialog';\nexport default Object.assign(Dialog, {\n  Header: DialogHeader\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Dialog.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","useRef","styled","ButtonClose","get","Box","useDialog","sx","Text","useCombinedRefs","noop","DialogBase","div","withConfig","displayName","componentId","props","narrow","wide","DialogHeaderBase","DialogHeader","theme","children","backgroundColor","rest","Children","toArray","every","ch","createElement","color","fontSize","fontWeight","fontFamily","p","Overlay","span","Dialog","forwardedRef","onDismiss","isOpen","initialFocusRef","returnFocusRef","overlayRef","modalRef","closeButtonRef","onCloseClick","current","focus","getDialogProps","Fragment","ref","tabIndex","role","onClick","position","top","right","defaultProps","propTypes","Header"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,yBAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM,IAAnB;;AAEA,MAAMC,UAAU,GAAGT,MAAM,CAACU,GAAP,CAAWC,UAAX,CAAsB;AACvCC,EAAAA,WAAW,EAAE,oBAD0B;AAEvCC,EAAAA,WAAW,EAAE;AAF0B,CAAtB,EAGhB,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,0HAAnC,EAA+J,SAA/J,EAA0K,uGAA1K,EAAmR,GAAnR,CAHgB,EAGyQX,GAAG,CAAC,sBAAD,CAH5Q,EAGsSA,GAAG,CAAC,SAAD,CAHzS,EAGsTA,GAAG,CAAC,uBAAD,CAHzT,EAGoVY,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,OAAf,GAAyBD,KAAK,CAACE,IAAN,GAAa,OAAb,GAAuB,OAH7Y,EAGsZX,EAHtZ,CAAnB;AAIA,MAAMY,gBAAgB,GAAGjB,MAAM,CAACG,GAAD,CAAN,CAAYQ,UAAZ,CAAuB;AAC9CC,EAAAA,WAAW,EAAE,0BADiC;AAE9CC,EAAAA,WAAW,EAAE;AAFiC,CAAvB,EAGtB,CAAC,gBAAD,EAAmB,GAAnB,EAAwB,mCAAxB,EAA6D,uEAA7D,EAAsI,GAAtI,CAHsB,EAGsHX,GAAG,CAAC,SAAD,CAHzH,EAGsIA,GAAG,CAAC,SAAD,CAHzI,EAGsJA,GAAG,CAAC,uBAAD,CAHzJ,EAGoLG,EAHpL,CAAzB;;AAKA,SAASa,YAAT,OAKG;AAAA,MALmB;AACpBC,IAAAA,KADoB;AAEpBC,IAAAA,QAFoB;AAGpBC,IAAAA,eAAe,GAAG,QAHE;AAIpB,OAAGC;AAJiB,GAKnB;;AACD,MAAIzB,KAAK,CAAC0B,QAAN,CAAeC,OAAf,CAAuBJ,QAAvB,EAAiCK,KAAjC,CAAuCC,EAAE,IAAI,OAAOA,EAAP,KAAc,QAA3D,CAAJ,EAA0E;AACxEN,IAAAA,QAAQ,GAAG,aAAavB,KAAK,CAAC8B,aAAN,CAAoBrB,IAApB,EAA0B;AAChDa,MAAAA,KAAK,EAAEA,KADyC;AAEhDS,MAAAA,KAAK,EAAE,YAFyC;AAGhDC,MAAAA,QAAQ,EAAE,CAHsC;AAIhDC,MAAAA,UAAU,EAAE,MAJoC;AAKhDC,MAAAA,UAAU,EAAE;AALoC,KAA1B,EAMrBX,QANqB,CAAxB;AAOD;;AAED,SAAO,aAAavB,KAAK,CAAC8B,aAAN,CAAoBV,gBAApB,EAAsCjC,QAAQ,CAAC;AACjEmC,IAAAA,KAAK,EAAEA,KAD0D;AAEjEa,IAAAA,CAAC,EAAE,CAF8D;AAGjEX,IAAAA,eAAe,EAAEA;AAHgD,GAAD,EAI/DC,IAJ+D,CAA9C,EAIVF,QAJU,CAApB;AAKD;;AAEDF,YAAY,CAACN,WAAb,GAA2B,cAA3B;AACA,MAAMqB,OAAO,GAAGjC,MAAM,CAACkC,IAAP,CAAYvB,UAAZ,CAAuB;AACrCC,EAAAA,WAAW,EAAE,iBADwB;AAErCC,EAAAA,WAAW,EAAE;AAFwB,CAAvB,EAGb,CAAC,8IAAD,EAAiJ,IAAjJ,CAHa,EAG2IX,GAAG,CAAC,+BAAD,CAH9I,CAAhB;AAIA,MAAMiC,MAAM,GAAG,aAAarC,UAAU,CAAC,QAOpCsC,YAPoC,KAOnB;AAAA,MAPoB;AACtChB,IAAAA,QADsC;AAEtCiB,IAAAA,SAAS,GAAG7B,IAF0B;AAGtC8B,IAAAA,MAHsC;AAItCC,IAAAA,eAJsC;AAKtCC,IAAAA,cALsC;AAMtC,OAAG1B;AANmC,GAOpB;AAClB,QAAM2B,UAAU,GAAG1C,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM2C,QAAQ,GAAGnC,eAAe,CAAC6B,YAAD,CAAhC;AACA,QAAMO,cAAc,GAAG5C,MAAM,CAAC,IAAD,CAA7B;;AAEA,QAAM6C,YAAY,GAAG,MAAM;AACzBP,IAAAA,SAAS;;AAET,QAAIG,cAAc,IAAIA,cAAc,CAACK,OAArC,EAA8C;AAC5CL,MAAAA,cAAc,CAACK,OAAf,CAAuBC,KAAvB;AACD;AACF,GAND;;AAQA,QAAM;AACJC,IAAAA;AADI,MAEF3C,SAAS,CAAC;AACZsC,IAAAA,QADY;AAEZL,IAAAA,SAAS,EAAEO,YAFC;AAGZN,IAAAA,MAHY;AAIZC,IAAAA,eAJY;AAKZI,IAAAA,cALY;AAMZH,IAAAA,cANY;AAOZC,IAAAA;AAPY,GAAD,CAFb;AAWA,SAAOH,MAAM,GAAG,aAAazC,KAAK,CAAC8B,aAAN,CAAoB9B,KAAK,CAACmD,QAA1B,EAAoC,IAApC,EAA0C,aAAanD,KAAK,CAAC8B,aAAN,CAAoBM,OAApB,EAA6B;AAC/GgB,IAAAA,GAAG,EAAER;AAD0G,GAA7B,CAAvD,EAEzB,aAAa5C,KAAK,CAAC8B,aAAN,CAAoBlB,UAApB,EAAgCzB,QAAQ,CAAC;AACxDkE,IAAAA,QAAQ,EAAE,CAAC,CAD6C;AAExDD,IAAAA,GAAG,EAAEP,QAFmD;AAGxDS,IAAAA,IAAI,EAAE,QAHkD;AAIxD,kBAAc;AAJ0C,GAAD,EAKtDrC,KALsD,EAK/CiC,cAAc,EALiC,CAAxC,EAKY,aAAalD,KAAK,CAAC8B,aAAN,CAAoB1B,WAApB,EAAiC;AACzEgD,IAAAA,GAAG,EAAEN,cADoE;AAEzES,IAAAA,OAAO,EAAER,YAFgE;AAGzEvC,IAAAA,EAAE,EAAE;AACFgD,MAAAA,QAAQ,EAAE,UADR;AAEFC,MAAAA,GAAG,EAAE,MAFH;AAGFC,MAAAA,KAAK,EAAE;AAHL;AAHqE,GAAjC,CALzB,EAabnC,QAba,CAFY,CAAhB,GAeI,IAfjB;AAgBD,CA/CqC,CAAtC;AAgDAF,YAAY,CAACsC,YAAb,GAA4B;AAC1BnC,EAAAA,eAAe,EAAE;AADS,CAA5B;AAGAH,YAAY,CAACuC,SAAb,GAAyB,EAAE,GAAGtD,GAAG,CAACsD;AAAT,CAAzB;AAEAvC,YAAY,CAACN,WAAb,GAA2B,eAA3B;AACAuB,MAAM,CAACvB,WAAP,GAAqB,QAArB;AACA,eAAe3B,MAAM,CAACC,MAAP,CAAciD,MAAd,EAAsB;AACnCuB,EAAAA,MAAM,EAAExC;AAD2B,CAAtB,CAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef, useRef } from 'react';\nimport styled from 'styled-components';\nimport ButtonClose from './deprecated/Button/ButtonClose';\nimport { get } from './constants';\nimport Box from './Box';\nimport useDialog from './hooks/useDialog';\nimport sx from './sx';\nimport Text from './Text';\nimport { useCombinedRefs } from './hooks/useCombinedRefs';\n\nconst noop = () => null;\n\nconst DialogBase = styled.div.withConfig({\n  displayName: \"Dialog__DialogBase\",\n  componentId: \"sc-13rdxb7-0\"\n})([\"box-shadow:\", \";border-radius:\", \";position:fixed;top:0;left:50%;transform:translateX(-50%);max-height:80vh;z-index:999;margin:10vh auto;background-color:\", \";width:\", \";outline:none;@media screen and (max-width:750px){width:100vw;margin:0;border-radius:0;height:100vh;}\", \";\"], get('shadows.shadow.large'), get('radii.2'), get('colors.canvas.default'), props => props.narrow ? '320px' : props.wide ? '640px' : '440px', sx);\nconst DialogHeaderBase = styled(Box).withConfig({\n  displayName: \"Dialog__DialogHeaderBase\",\n  componentId: \"sc-13rdxb7-1\"\n})([\"border-radius:\", \" \", \" 0px 0px;border-bottom:1px solid \", \";display:flex;@media screen and (max-width:750px){border-radius:0px;}\", \";\"], get('radii.2'), get('radii.2'), get('colors.border.default'), sx);\n\nfunction DialogHeader({\n  theme,\n  children,\n  backgroundColor = 'gray.1',\n  ...rest\n}) {\n  if (React.Children.toArray(children).every(ch => typeof ch === 'string')) {\n    children = /*#__PURE__*/React.createElement(Text, {\n      theme: theme,\n      color: \"fg.default\",\n      fontSize: 1,\n      fontWeight: \"bold\",\n      fontFamily: \"sans-serif\"\n    }, children);\n  }\n\n  return /*#__PURE__*/React.createElement(DialogHeaderBase, _extends({\n    theme: theme,\n    p: 3,\n    backgroundColor: backgroundColor\n  }, rest), children);\n}\n\nDialogHeader.displayName = \"DialogHeader\";\nconst Overlay = styled.span.withConfig({\n  displayName: \"Dialog__Overlay\",\n  componentId: \"sc-13rdxb7-2\"\n})([\"&:before{position:fixed;top:0;right:0;bottom:0;left:0;display:block;cursor:default;content:' ';background:transparent;z-index:99;background:\", \";}\"], get('colors.primer.canvas.backdrop'));\nconst Dialog = /*#__PURE__*/forwardRef(({\n  children,\n  onDismiss = noop,\n  isOpen,\n  initialFocusRef,\n  returnFocusRef,\n  ...props\n}, forwardedRef) => {\n  const overlayRef = useRef(null);\n  const modalRef = useCombinedRefs(forwardedRef);\n  const closeButtonRef = useRef(null);\n\n  const onCloseClick = () => {\n    onDismiss();\n\n    if (returnFocusRef && returnFocusRef.current) {\n      returnFocusRef.current.focus();\n    }\n  };\n\n  const {\n    getDialogProps\n  } = useDialog({\n    modalRef,\n    onDismiss: onCloseClick,\n    isOpen,\n    initialFocusRef,\n    closeButtonRef,\n    returnFocusRef,\n    overlayRef\n  });\n  return isOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Overlay, {\n    ref: overlayRef\n  }), /*#__PURE__*/React.createElement(DialogBase, _extends({\n    tabIndex: -1,\n    ref: modalRef,\n    role: \"dialog\",\n    \"aria-modal\": \"true\"\n  }, props, getDialogProps()), /*#__PURE__*/React.createElement(ButtonClose, {\n    ref: closeButtonRef,\n    onClick: onCloseClick,\n    sx: {\n      position: 'absolute',\n      top: '16px',\n      right: '16px'\n    }\n  }), children)) : null;\n});\nDialogHeader.defaultProps = {\n  backgroundColor: 'canvas.subtle'\n};\nDialogHeader.propTypes = { ...Box.propTypes\n};\nDialogHeader.displayName = 'Dialog.Header';\nDialog.displayName = 'Dialog';\nexport default Object.assign(Dialog, {\n  Header: DialogHeader\n});"]},"metadata":{},"sourceType":"module"}