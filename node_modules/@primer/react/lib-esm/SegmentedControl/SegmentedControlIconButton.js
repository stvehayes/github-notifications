function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled from 'styled-components';
import sx, { merge } from '../sx';
import getSegmentedControlButtonStyles from './getSegmentedControlStyles';
const SegmentedControlIconButtonStyled = styled.button.withConfig({
  displayName: "SegmentedControlIconButton__SegmentedControlIconButtonStyled",
  componentId: "sc-oxh6a9-0"
})(["", ";"], sx); // TODO: get tooltips working:
// - by default, the tooltip shows the `ariaLabel` content
// - allow users to pass custom tooltip text

export const SegmentedControlIconButton = ({
  icon: Icon,
  selected,
  sx: sxProp = {},
  ...rest
}) => {
  const mergedSx = merge(getSegmentedControlButtonStyles({
    selected,
    isIconOnly: true
  }), sxProp);
  return /*#__PURE__*/React.createElement(SegmentedControlIconButtonStyled, _extends({
    "aria-pressed": selected,
    sx: mergedSx
  }, rest), /*#__PURE__*/React.createElement("span", {
    className: "segmentedControl-content"
  }, /*#__PURE__*/React.createElement(Icon, null)));
};
SegmentedControlIconButton.displayName = "SegmentedControlIconButton";
export default SegmentedControlIconButton;