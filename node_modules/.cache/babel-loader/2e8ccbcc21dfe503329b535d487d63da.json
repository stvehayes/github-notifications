{"ast":null,"code":"import sync, { cancelSync } from 'framesync';\nimport { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\nfunction useAnimationFrame(callback) {\n  var initialTimestamp = useRef(0);\n  var isStatic = useContext(MotionConfigContext).isStatic;\n  useEffect(function () {\n    if (isStatic) return;\n\n    var provideTimeSinceStart = function (_a) {\n      var timestamp = _a.timestamp;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current);\n    };\n\n    sync.update(provideTimeSinceStart, true);\n    return function () {\n      return cancelSync.update(provideTimeSinceStart);\n    };\n  }, [callback]);\n}\n\nexport { useAnimationFrame };","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/framer-motion/dist/es/utils/use-animation-frame.mjs"],"names":["sync","cancelSync","useRef","useContext","useEffect","MotionConfigContext","useAnimationFrame","callback","initialTimestamp","isStatic","provideTimeSinceStart","_a","timestamp","current","update"],"mappings":"AAAA,OAAOA,IAAP,IAAeC,UAAf,QAAiC,WAAjC;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,mBAAT,QAAoC,oCAApC;;AAEA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,MAAIC,gBAAgB,GAAGN,MAAM,CAAC,CAAD,CAA7B;AACA,MAAIO,QAAQ,GAAGN,UAAU,CAACE,mBAAD,CAAV,CAAgCI,QAA/C;AACAL,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIK,QAAJ,EACI;;AACJ,QAAIC,qBAAqB,GAAG,UAAUC,EAAV,EAAc;AACtC,UAAIC,SAAS,GAAGD,EAAE,CAACC,SAAnB;AACA,UAAI,CAACJ,gBAAgB,CAACK,OAAtB,EACIL,gBAAgB,CAACK,OAAjB,GAA2BD,SAA3B;AACJL,MAAAA,QAAQ,CAACK,SAAS,GAAGJ,gBAAgB,CAACK,OAA9B,CAAR;AACH,KALD;;AAMAb,IAAAA,IAAI,CAACc,MAAL,CAAYJ,qBAAZ,EAAmC,IAAnC;AACA,WAAO,YAAY;AAAE,aAAOT,UAAU,CAACa,MAAX,CAAkBJ,qBAAlB,CAAP;AAAkD,KAAvE;AACH,GAXQ,EAWN,CAACH,QAAD,CAXM,CAAT;AAYH;;AAED,SAASD,iBAAT","sourcesContent":["import sync, { cancelSync } from 'framesync';\nimport { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\nfunction useAnimationFrame(callback) {\n    var initialTimestamp = useRef(0);\n    var isStatic = useContext(MotionConfigContext).isStatic;\n    useEffect(function () {\n        if (isStatic)\n            return;\n        var provideTimeSinceStart = function (_a) {\n            var timestamp = _a.timestamp;\n            if (!initialTimestamp.current)\n                initialTimestamp.current = timestamp;\n            callback(timestamp - initialTimestamp.current);\n        };\n        sync.update(provideTimeSinceStart, true);\n        return function () { return cancelSync.update(provideTimeSinceStart); };\n    }, [callback]);\n}\n\nexport { useAnimationFrame };\n"]},"metadata":{},"sourceType":"module"}