import React from 'react';
import { BaseStyles, Box, Text, ThemeProvider } from '../';
import { SegmentedControl } from '.';
export default {
  title: 'SegmentedControl/fixtures',
  component: SegmentedControl,
  decorators: [Story => {
    return /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(Story, null)));
  }]
}; // TODO: make it possible to use FormControl
// - FormControl.Label needs to accept `id` prop
// - FormControl.Label needs to accept a prop that lets it render an element that isn't a `<label>`

export const AssociatedWithALabelAndCaption = () => /*#__PURE__*/React.createElement(Box, {
  display: "flex"
}, /*#__PURE__*/React.createElement(Box, {
  flexGrow: 1
}, /*#__PURE__*/React.createElement(Text, {
  fontSize: 2,
  fontWeight: "bold",
  id: "scLabel-vert",
  display: "block"
}, "File view"), /*#__PURE__*/React.createElement(Text, {
  color: "fg.subtle",
  fontSize: 1,
  id: "scCaption-vert",
  display: "block"
}, "Change the way the file is viewed")), /*#__PURE__*/React.createElement(SegmentedControl, {
  "aria-labelledby": "scLabel-vert",
  "aria-describedby": "scCaption-vert"
}, /*#__PURE__*/React.createElement(SegmentedControl.Button, {
  selected: true
}, "Preview"), /*#__PURE__*/React.createElement(SegmentedControl.Button, null, "Raw"), /*#__PURE__*/React.createElement(SegmentedControl.Button, null, "Blame")));
AssociatedWithALabelAndCaption.displayName = "AssociatedWithALabelAndCaption";
export const FullWidth = () => /*#__PURE__*/React.createElement(SegmentedControl, {
  "aria-label": "File view",
  fullWidth: true
}, /*#__PURE__*/React.createElement(SegmentedControl.Button, {
  selected: true
}, "Preview"), /*#__PURE__*/React.createElement(SegmentedControl.Button, null, "Raw"), /*#__PURE__*/React.createElement(SegmentedControl.Button, null, "Blame"));
FullWidth.displayName = "FullWidth";