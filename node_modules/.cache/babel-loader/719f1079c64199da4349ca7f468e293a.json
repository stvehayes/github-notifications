{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport Box from '../Box';\nimport { ListContext } from './List';\nexport const GroupContext = /*#__PURE__*/React.createContext({});\nexport const Group = _ref => {\n  let {\n    title,\n    variant = 'subtle',\n    auxiliaryText,\n    selectionVariant,\n    role,\n    sx = {},\n    ...props\n  } = _ref;\n  const labelId = useSSRSafeId();\n  const {\n    role: listRole\n  } = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    as: \"li\",\n    role: listRole ? 'none' : undefined,\n    sx: {\n      '&:not(:first-child)': {\n        marginTop: 2\n      },\n      listStyle: 'none',\n      // hide the ::marker inserted by browser's stylesheet\n      ...sx\n    }\n  }, props), title && /*#__PURE__*/React.createElement(Header, {\n    title: title,\n    variant: variant,\n    auxiliaryText: auxiliaryText,\n    labelId: labelId\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: {\n      selectionVariant\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"ul\",\n    sx: {\n      paddingInlineStart: 0\n    },\n    \"aria-labelledby\": title ? labelId : undefined,\n    role: role || listRole && 'group'\n  }, props.children)));\n};\nGroup.displayName = \"Group\";\n/**\n * Displays the name and description of a `Group`.\n *\n * For visual presentation only. It's hidden from screen readers.\n */\n\nconst Header = _ref2 => {\n  let {\n    variant,\n    title,\n    auxiliaryText,\n    labelId,\n    ...props\n  } = _ref2;\n  const {\n    variant: listVariant\n  } = React.useContext(ListContext);\n  const styles = {\n    paddingY: '6px',\n    paddingX: listVariant === 'full' ? 2 : 3,\n    fontSize: 0,\n    fontWeight: 'bold',\n    color: 'fg.muted',\n    ...(variant === 'filled' && {\n      backgroundColor: 'canvas.subtle',\n      marginX: 0,\n      marginBottom: 2,\n      borderTop: '1px solid',\n      borderBottom: '1px solid',\n      borderColor: 'neutral.muted'\n    })\n  };\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    sx: styles,\n    role: \"presentation\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    id: labelId\n  }, title), auxiliaryText && /*#__PURE__*/React.createElement(\"span\", null, auxiliaryText));\n};\n\nHeader.displayName = \"Header\";","map":{"version":3,"sources":["/Users/steve/Documents/repos/notifications/node_modules/@primer/react/lib-esm/ActionList/Group.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useSSRSafeId","Box","ListContext","GroupContext","createContext","Group","title","variant","auxiliaryText","selectionVariant","role","sx","props","labelId","listRole","useContext","createElement","as","undefined","marginTop","listStyle","Header","Provider","value","paddingInlineStart","children","displayName","listVariant","styles","paddingY","paddingX","fontSize","fontWeight","color","backgroundColor","marginX","marginBottom","borderTop","borderBottom","borderColor","id"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport Box from '../Box';\nimport { ListContext } from './List';\nexport const GroupContext = /*#__PURE__*/React.createContext({});\nexport const Group = ({\n  title,\n  variant = 'subtle',\n  auxiliaryText,\n  selectionVariant,\n  role,\n  sx = {},\n  ...props\n}) => {\n  const labelId = useSSRSafeId();\n  const {\n    role: listRole\n  } = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    as: \"li\",\n    role: listRole ? 'none' : undefined,\n    sx: {\n      '&:not(:first-child)': {\n        marginTop: 2\n      },\n      listStyle: 'none',\n      // hide the ::marker inserted by browser's stylesheet\n      ...sx\n    }\n  }, props), title && /*#__PURE__*/React.createElement(Header, {\n    title: title,\n    variant: variant,\n    auxiliaryText: auxiliaryText,\n    labelId: labelId\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: {\n      selectionVariant\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"ul\",\n    sx: {\n      paddingInlineStart: 0\n    },\n    \"aria-labelledby\": title ? labelId : undefined,\n    role: role || listRole && 'group'\n  }, props.children)));\n};\nGroup.displayName = \"Group\";\n\n/**\n * Displays the name and description of a `Group`.\n *\n * For visual presentation only. It's hidden from screen readers.\n */\nconst Header = ({\n  variant,\n  title,\n  auxiliaryText,\n  labelId,\n  ...props\n}) => {\n  const {\n    variant: listVariant\n  } = React.useContext(ListContext);\n  const styles = {\n    paddingY: '6px',\n    paddingX: listVariant === 'full' ? 2 : 3,\n    fontSize: 0,\n    fontWeight: 'bold',\n    color: 'fg.muted',\n    ...(variant === 'filled' && {\n      backgroundColor: 'canvas.subtle',\n      marginX: 0,\n      marginBottom: 2,\n      borderTop: '1px solid',\n      borderBottom: '1px solid',\n      borderColor: 'neutral.muted'\n    })\n  };\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    sx: styles,\n    role: \"presentation\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"span\", {\n    id: labelId\n  }, title), auxiliaryText && /*#__PURE__*/React.createElement(\"span\", null, auxiliaryText));\n};\n\nHeader.displayName = \"Header\";"]},"metadata":{},"sourceType":"module"}