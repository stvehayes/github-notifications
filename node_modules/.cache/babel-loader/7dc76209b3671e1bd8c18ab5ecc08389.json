{"ast":null,"code":"import { getFocusableChild, isTabbable } from './utils/iterate-focusable-elements.js';\nimport { polyfill as eventListenerSignalPolyfill } from './polyfills/event-listener-signal.js';\neventListenerSignalPolyfill();\nconst suspendedTrapStack = [];\nlet activeTrap = undefined;\n\nfunction tryReactivate() {\n  const trapToReactivate = suspendedTrapStack.pop();\n\n  if (trapToReactivate) {\n    focusTrap(trapToReactivate.container, trapToReactivate.initialFocus, trapToReactivate.originalSignal);\n  }\n}\n\nfunction followSignal(signal) {\n  const controller = new AbortController();\n  signal.addEventListener('abort', () => {\n    controller.abort();\n  });\n  return controller;\n}\n\nexport function focusTrap(container, initialFocus, abortSignal) {\n  const controller = new AbortController();\n  const signal = abortSignal !== null && abortSignal !== void 0 ? abortSignal : controller.signal;\n  container.setAttribute('data-focus-trap', 'active');\n  const sentinelStart = document.createElement('span');\n  sentinelStart.setAttribute('class', 'sentinel');\n  sentinelStart.setAttribute('tabindex', '0');\n  sentinelStart.setAttribute('aria-hidden', 'true');\n\n  sentinelStart.onfocus = () => {\n    const lastFocusableChild = getFocusableChild(container, true);\n    lastFocusableChild === null || lastFocusableChild === void 0 ? void 0 : lastFocusableChild.focus();\n  };\n\n  const sentinelEnd = document.createElement('span');\n  sentinelEnd.setAttribute('class', 'sentinel');\n  sentinelEnd.setAttribute('tabindex', '0');\n  sentinelEnd.setAttribute('aria-hidden', 'true');\n\n  sentinelEnd.onfocus = () => {\n    const firstFocusableChild = getFocusableChild(container);\n    firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n  };\n\n  container.prepend(sentinelStart);\n  container.append(sentinelEnd);\n  let lastFocusedChild = undefined;\n\n  function ensureTrapZoneHasFocus(focusedElement) {\n    if (focusedElement instanceof HTMLElement && document.contains(container)) {\n      if (container.contains(focusedElement)) {\n        lastFocusedChild = focusedElement;\n        return;\n      } else {\n        if (lastFocusedChild && isTabbable(lastFocusedChild) && container.contains(lastFocusedChild)) {\n          lastFocusedChild.focus();\n          return;\n        } else if (initialFocus && container.contains(initialFocus)) {\n          initialFocus.focus();\n          return;\n        } else {\n          const firstFocusableChild = getFocusableChild(container);\n          firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n          return;\n        }\n      }\n    }\n  }\n\n  const wrappingController = followSignal(signal);\n\n  if (activeTrap) {\n    const suspendedTrap = activeTrap;\n    activeTrap.container.setAttribute('data-focus-trap', 'suspended');\n    activeTrap.controller.abort();\n    suspendedTrapStack.push(suspendedTrap);\n  }\n\n  wrappingController.signal.addEventListener('abort', () => {\n    activeTrap = undefined;\n  });\n  signal.addEventListener('abort', () => {\n    container.removeAttribute('data-focus-trap');\n    const sentinels = container.getElementsByClassName('sentinel');\n\n    while (sentinels.length > 0) sentinels[0].remove();\n\n    const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n\n    if (suspendedTrapIndex >= 0) {\n      suspendedTrapStack.splice(suspendedTrapIndex, 1);\n    }\n\n    tryReactivate();\n  });\n  document.addEventListener('focus', event => {\n    ensureTrapZoneHasFocus(event.target);\n  }, {\n    signal: wrappingController.signal,\n    capture: true\n  });\n  ensureTrapZoneHasFocus(document.activeElement);\n  activeTrap = {\n    container,\n    controller: wrappingController,\n    initialFocus,\n    originalSignal: signal\n  };\n  const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n\n  if (suspendedTrapIndex >= 0) {\n    suspendedTrapStack.splice(suspendedTrapIndex, 1);\n  }\n\n  if (!abortSignal) {\n    return controller;\n  }\n}","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/behaviors/dist/esm/focus-trap.js"],"names":["getFocusableChild","isTabbable","polyfill","eventListenerSignalPolyfill","suspendedTrapStack","activeTrap","undefined","tryReactivate","trapToReactivate","pop","focusTrap","container","initialFocus","originalSignal","followSignal","signal","controller","AbortController","addEventListener","abort","abortSignal","setAttribute","sentinelStart","document","createElement","onfocus","lastFocusableChild","focus","sentinelEnd","firstFocusableChild","prepend","append","lastFocusedChild","ensureTrapZoneHasFocus","focusedElement","HTMLElement","contains","wrappingController","suspendedTrap","push","removeAttribute","sentinels","getElementsByClassName","length","remove","suspendedTrapIndex","findIndex","t","splice","event","target","capture","activeElement"],"mappings":"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","sourcesContent":["import { getFocusableChild, isTabbable } from './utils/iterate-focusable-elements.js';\nimport { polyfill as eventListenerSignalPolyfill } from './polyfills/event-listener-signal.js';\neventListenerSignalPolyfill();\nconst suspendedTrapStack = [];\nlet activeTrap = undefined;\nfunction tryReactivate() {\n    const trapToReactivate = suspendedTrapStack.pop();\n    if (trapToReactivate) {\n        focusTrap(trapToReactivate.container, trapToReactivate.initialFocus, trapToReactivate.originalSignal);\n    }\n}\nfunction followSignal(signal) {\n    const controller = new AbortController();\n    signal.addEventListener('abort', () => {\n        controller.abort();\n    });\n    return controller;\n}\nexport function focusTrap(container, initialFocus, abortSignal) {\n    const controller = new AbortController();\n    const signal = abortSignal !== null && abortSignal !== void 0 ? abortSignal : controller.signal;\n    container.setAttribute('data-focus-trap', 'active');\n    const sentinelStart = document.createElement('span');\n    sentinelStart.setAttribute('class', 'sentinel');\n    sentinelStart.setAttribute('tabindex', '0');\n    sentinelStart.setAttribute('aria-hidden', 'true');\n    sentinelStart.onfocus = () => {\n        const lastFocusableChild = getFocusableChild(container, true);\n        lastFocusableChild === null || lastFocusableChild === void 0 ? void 0 : lastFocusableChild.focus();\n    };\n    const sentinelEnd = document.createElement('span');\n    sentinelEnd.setAttribute('class', 'sentinel');\n    sentinelEnd.setAttribute('tabindex', '0');\n    sentinelEnd.setAttribute('aria-hidden', 'true');\n    sentinelEnd.onfocus = () => {\n        const firstFocusableChild = getFocusableChild(container);\n        firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n    };\n    container.prepend(sentinelStart);\n    container.append(sentinelEnd);\n    let lastFocusedChild = undefined;\n    function ensureTrapZoneHasFocus(focusedElement) {\n        if (focusedElement instanceof HTMLElement && document.contains(container)) {\n            if (container.contains(focusedElement)) {\n                lastFocusedChild = focusedElement;\n                return;\n            }\n            else {\n                if (lastFocusedChild && isTabbable(lastFocusedChild) && container.contains(lastFocusedChild)) {\n                    lastFocusedChild.focus();\n                    return;\n                }\n                else if (initialFocus && container.contains(initialFocus)) {\n                    initialFocus.focus();\n                    return;\n                }\n                else {\n                    const firstFocusableChild = getFocusableChild(container);\n                    firstFocusableChild === null || firstFocusableChild === void 0 ? void 0 : firstFocusableChild.focus();\n                    return;\n                }\n            }\n        }\n    }\n    const wrappingController = followSignal(signal);\n    if (activeTrap) {\n        const suspendedTrap = activeTrap;\n        activeTrap.container.setAttribute('data-focus-trap', 'suspended');\n        activeTrap.controller.abort();\n        suspendedTrapStack.push(suspendedTrap);\n    }\n    wrappingController.signal.addEventListener('abort', () => {\n        activeTrap = undefined;\n    });\n    signal.addEventListener('abort', () => {\n        container.removeAttribute('data-focus-trap');\n        const sentinels = container.getElementsByClassName('sentinel');\n        while (sentinels.length > 0)\n            sentinels[0].remove();\n        const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n        if (suspendedTrapIndex >= 0) {\n            suspendedTrapStack.splice(suspendedTrapIndex, 1);\n        }\n        tryReactivate();\n    });\n    document.addEventListener('focus', event => {\n        ensureTrapZoneHasFocus(event.target);\n    }, { signal: wrappingController.signal, capture: true });\n    ensureTrapZoneHasFocus(document.activeElement);\n    activeTrap = {\n        container,\n        controller: wrappingController,\n        initialFocus,\n        originalSignal: signal\n    };\n    const suspendedTrapIndex = suspendedTrapStack.findIndex(t => t.container === container);\n    if (suspendedTrapIndex >= 0) {\n        suspendedTrapStack.splice(suspendedTrapIndex, 1);\n    }\n    if (!abortSignal) {\n        return controller;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}