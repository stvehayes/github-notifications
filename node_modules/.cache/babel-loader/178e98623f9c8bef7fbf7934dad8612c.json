{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport styled from 'styled-components';\nimport { useProvidedRefOrCreate } from './hooks';\nimport React, { useContext } from 'react';\nimport sx from './sx';\nimport useLayoutEffect from './utils/useIsomorphicLayoutEffect';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst StyledCheckbox = styled.input.withConfig({\n  displayName: \"Checkbox__StyledCheckbox\",\n  componentId: \"sc-akhawd-0\"\n})([\"cursor:pointer;\", \" \", \";\", \"\"], props => props.disabled && `cursor: not-allowed;`, getGlobalFocusStyles(0), sx);\n/**\n * An accessible, native checkbox component\n */\n\nconst Checkbox = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    checked,\n    indeterminate,\n    disabled,\n    onChange,\n    sx: sxProp,\n    required,\n    validationStatus,\n    value,\n    ...rest\n  } = _ref;\n  const checkboxRef = useProvidedRefOrCreate(ref);\n  const checkboxGroupContext = useContext(CheckboxGroupContext);\n\n  const handleOnChange = e => {\n    checkboxGroupContext.onChange && checkboxGroupContext.onChange(e);\n    onChange && onChange(e);\n  };\n\n  useLayoutEffect(() => {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = indeterminate || false;\n    }\n  }, [indeterminate, checked, checkboxRef]);\n  return /*#__PURE__*/React.createElement(StyledCheckbox, _extends({\n    type: \"checkbox\",\n    disabled: disabled,\n    \"aria-disabled\": disabled ? 'true' : 'false',\n    ref: ref || checkboxRef,\n    checked: indeterminate ? false : checked,\n    \"aria-checked\": indeterminate ? 'mixed' : checked ? 'true' : 'false',\n    sx: sxProp,\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    onChange: handleOnChange,\n    value: value,\n    name: value\n  }, rest));\n});\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Checkbox.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","styled","useProvidedRefOrCreate","React","useContext","sx","useLayoutEffect","CheckboxGroupContext","getGlobalFocusStyles","StyledCheckbox","input","withConfig","displayName","componentId","props","disabled","Checkbox","forwardRef","ref","checked","indeterminate","onChange","sxProp","required","validationStatus","value","rest","checkboxRef","checkboxGroupContext","handleOnChange","e","current","createElement","type","name"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled from 'styled-components';\nimport { useProvidedRefOrCreate } from './hooks';\nimport React, { useContext } from 'react';\nimport sx from './sx';\nimport useLayoutEffect from './utils/useIsomorphicLayoutEffect';\nimport { CheckboxGroupContext } from './CheckboxGroup';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst StyledCheckbox = styled.input.withConfig({\n  displayName: \"Checkbox__StyledCheckbox\",\n  componentId: \"sc-akhawd-0\"\n})([\"cursor:pointer;\", \" \", \";\", \"\"], props => props.disabled && `cursor: not-allowed;`, getGlobalFocusStyles(0), sx);\n/**\n * An accessible, native checkbox component\n */\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(({\n  checked,\n  indeterminate,\n  disabled,\n  onChange,\n  sx: sxProp,\n  required,\n  validationStatus,\n  value,\n  ...rest\n}, ref) => {\n  const checkboxRef = useProvidedRefOrCreate(ref);\n  const checkboxGroupContext = useContext(CheckboxGroupContext);\n\n  const handleOnChange = e => {\n    checkboxGroupContext.onChange && checkboxGroupContext.onChange(e);\n    onChange && onChange(e);\n  };\n\n  useLayoutEffect(() => {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = indeterminate || false;\n    }\n  }, [indeterminate, checked, checkboxRef]);\n  return /*#__PURE__*/React.createElement(StyledCheckbox, _extends({\n    type: \"checkbox\",\n    disabled: disabled,\n    \"aria-disabled\": disabled ? 'true' : 'false',\n    ref: ref || checkboxRef,\n    checked: indeterminate ? false : checked,\n    \"aria-checked\": indeterminate ? 'mixed' : checked ? 'true' : 'false',\n    sx: sxProp,\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    onChange: handleOnChange,\n    value: value,\n    name: value\n  }, rest));\n});\nCheckbox.displayName = 'Checkbox';\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}