{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport styled, { css } from 'styled-components';\nimport React from 'react';\nimport { TextInputBaseWrapper } from './_TextInputWrapper';\nimport sx from './sx';\nconst StyledTextarea = styled.textarea.withConfig({\n  displayName: \"Textarea__StyledTextarea\",\n  componentId: \"sc-wz5skc-0\"\n})([\"border:0;font-size:inherit;font-family:inherit;background-color:transparent;-webkit-appearance:none;color:inherit;width:100%;resize:both;&:focus{outline:0;}\", \" \", \" \", \";\"], props => props.resize && css([\"resize:\", \";\"], props.resize), props => props.disabled && css([\"resize:none;\"]), sx);\n/**\n * An accessible, native textarea component that supports validation states.\n * This component accepts all native HTML <textarea> attributes as props.\n */\n\nconst Textarea = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    value,\n    disabled,\n    sx: sxProp,\n    required,\n    validationStatus,\n    rows = 7,\n    cols = 30,\n    resize = 'both',\n    block,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(TextInputBaseWrapper, {\n    sx: sxProp,\n    validationStatus: validationStatus,\n    disabled: disabled,\n    block: block\n  }, /*#__PURE__*/React.createElement(StyledTextarea, _extends({\n    value: value,\n    resize: resize,\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    ref: ref,\n    disabled: disabled,\n    rows: rows,\n    cols: cols\n  }, rest)));\n});\nTextarea.displayName = 'Textarea';\nexport default Textarea;","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Textarea.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","styled","css","React","TextInputBaseWrapper","sx","StyledTextarea","textarea","withConfig","displayName","componentId","props","resize","disabled","Textarea","forwardRef","ref","value","sxProp","required","validationStatus","rows","cols","block","rest","createElement"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,MAAMC,cAAc,GAAGL,MAAM,CAACM,QAAP,CAAgBC,UAAhB,CAA2B;AAChDC,EAAAA,WAAW,EAAE,0BADmC;AAEhDC,EAAAA,WAAW,EAAE;AAFmC,CAA3B,EAGpB,CAAC,8JAAD,EAAiK,GAAjK,EAAsK,GAAtK,EAA2K,GAA3K,CAHoB,EAG6JC,KAAK,IAAIA,KAAK,CAACC,MAAN,IAAgBV,GAAG,CAAC,CAAC,SAAD,EAAY,GAAZ,CAAD,EAAmBS,KAAK,CAACC,MAAzB,CAHzL,EAG2ND,KAAK,IAAIA,KAAK,CAACE,QAAN,IAAkBX,GAAG,CAAC,CAAC,cAAD,CAAD,CAHzP,EAG6QG,EAH7Q,CAAvB;AAIA;AACA;AACA;AACA;;AAEA,MAAMS,QAAQ,GAAG,aAAaX,KAAK,CAACY,UAAN,CAAiB,OAW5CC,GAX4C,KAWpC;AAAA,MAXqC;AAC9CC,IAAAA,KAD8C;AAE9CJ,IAAAA,QAF8C;AAG9CR,IAAAA,EAAE,EAAEa,MAH0C;AAI9CC,IAAAA,QAJ8C;AAK9CC,IAAAA,gBAL8C;AAM9CC,IAAAA,IAAI,GAAG,CANuC;AAO9CC,IAAAA,IAAI,GAAG,EAPuC;AAQ9CV,IAAAA,MAAM,GAAG,MARqC;AAS9CW,IAAAA,KAT8C;AAU9C,OAAGC;AAV2C,GAWrC;AACT,SAAO,aAAarB,KAAK,CAACsB,aAAN,CAAoBrB,oBAApB,EAA0C;AAC5DC,IAAAA,EAAE,EAAEa,MADwD;AAE5DE,IAAAA,gBAAgB,EAAEA,gBAF0C;AAG5DP,IAAAA,QAAQ,EAAEA,QAHkD;AAI5DU,IAAAA,KAAK,EAAEA;AAJqD,GAA1C,EAKjB,aAAapB,KAAK,CAACsB,aAAN,CAAoBnB,cAApB,EAAoClB,QAAQ,CAAC;AAC3D6B,IAAAA,KAAK,EAAEA,KADoD;AAE3DL,IAAAA,MAAM,EAAEA,MAFmD;AAG3DO,IAAAA,QAAQ,EAAEA,QAHiD;AAI3D,qBAAiBA,QAAQ,GAAG,MAAH,GAAY,OAJsB;AAK3D,oBAAgBC,gBAAgB,KAAK,OAArB,GAA+B,MAA/B,GAAwC,OALG;AAM3DJ,IAAAA,GAAG,EAAEA,GANsD;AAO3DH,IAAAA,QAAQ,EAAEA,QAPiD;AAQ3DQ,IAAAA,IAAI,EAAEA,IARqD;AAS3DC,IAAAA,IAAI,EAAEA;AATqD,GAAD,EAUzDE,IAVyD,CAA5C,CALI,CAApB;AAgBD,CA5B6B,CAA9B;AA6BAV,QAAQ,CAACL,WAAT,GAAuB,UAAvB;AACA,eAAeK,QAAf","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled, { css } from 'styled-components';\nimport React from 'react';\nimport { TextInputBaseWrapper } from './_TextInputWrapper';\nimport sx from './sx';\nconst StyledTextarea = styled.textarea.withConfig({\n  displayName: \"Textarea__StyledTextarea\",\n  componentId: \"sc-wz5skc-0\"\n})([\"border:0;font-size:inherit;font-family:inherit;background-color:transparent;-webkit-appearance:none;color:inherit;width:100%;resize:both;&:focus{outline:0;}\", \" \", \" \", \";\"], props => props.resize && css([\"resize:\", \";\"], props.resize), props => props.disabled && css([\"resize:none;\"]), sx);\n/**\n * An accessible, native textarea component that supports validation states.\n * This component accepts all native HTML <textarea> attributes as props.\n */\n\nconst Textarea = /*#__PURE__*/React.forwardRef(({\n  value,\n  disabled,\n  sx: sxProp,\n  required,\n  validationStatus,\n  rows = 7,\n  cols = 30,\n  resize = 'both',\n  block,\n  ...rest\n}, ref) => {\n  return /*#__PURE__*/React.createElement(TextInputBaseWrapper, {\n    sx: sxProp,\n    validationStatus: validationStatus,\n    disabled: disabled,\n    block: block\n  }, /*#__PURE__*/React.createElement(StyledTextarea, _extends({\n    value: value,\n    resize: resize,\n    required: required,\n    \"aria-required\": required ? 'true' : 'false',\n    \"aria-invalid\": validationStatus === 'error' ? 'true' : 'false',\n    ref: ref,\n    disabled: disabled,\n    rows: rows,\n    cols: cols\n  }, rest)));\n});\nTextarea.displayName = 'Textarea';\nexport default Textarea;"]},"metadata":{},"sourceType":"module"}