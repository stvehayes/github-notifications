{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { ChevronDownIcon } from '@primer/octicons-react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport React, { isValidElement } from 'react';\nimport styled from 'styled-components';\nimport { ActionList } from '../ActionList';\nimport Box from '../Box';\nimport StyledOcticon from '../StyledOcticon';\nimport sx, { merge } from '../sx'; // ----------------------------------------------------------------------------\n// NavList\n\nconst NavBox = styled.nav.withConfig({\n  displayName: \"NavList__NavBox\",\n  componentId: \"sc-1c8ygf7-0\"\n})(sx);\nconst Root = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(NavBox, _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(ActionList, null, children));\n});\nRoot.displayName = 'NavList'; // ----------------------------------------------------------------------------\n// NavList.Item\n\nconst Item = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    'aria-current': ariaCurrent,\n    children,\n    sx: sxProp = {},\n    ...props\n  } = _ref2;\n  const {\n    depth\n  } = React.useContext(SubNavContext); // Get SubNav from children\n\n  const subNav = React.Children.toArray(children).find(child => /*#__PURE__*/isValidElement(child) && child.type === SubNav); // Get children without SubNav\n\n  const childrenWithoutSubNav = React.Children.toArray(children).filter(child => /*#__PURE__*/isValidElement(child) ? child.type !== SubNav : true); // Render ItemWithSubNav if SubNav is present\n\n  if (subNav && /*#__PURE__*/isValidElement(subNav) && depth < 1) {\n    return /*#__PURE__*/React.createElement(ItemWithSubNav, {\n      subNav: subNav,\n      sx: sxProp\n    }, childrenWithoutSubNav);\n  }\n\n  return /*#__PURE__*/React.createElement(ActionList.LinkItem, _extends({\n    ref: ref,\n    \"aria-current\": ariaCurrent,\n    active: Boolean(ariaCurrent) && ariaCurrent !== 'false',\n    sx: merge({\n      paddingLeft: depth > 0 ? 5 : null,\n      // Indent sub-items\n      fontSize: depth > 0 ? 0 : null,\n      // Reduce font size of sub-items\n      fontWeight: depth > 0 ? 'normal' : null // Sub-items don't get bolded\n\n    }, sxProp)\n  }, props), children);\n});\nItem.displayName = 'NavList.Item'; // ----------------------------------------------------------------------------\n// ItemWithSubNav (internal)\n\nconst ItemWithSubNavContext = /*#__PURE__*/React.createContext({\n  buttonId: '',\n  subNavId: '',\n  isOpen: false\n}); // TODO: ref prop\n// TODO: Animate open/close transition\n\nfunction ItemWithSubNav(_ref3) {\n  let {\n    children,\n    subNav,\n    sx: sxProp = {}\n  } = _ref3;\n  const buttonId = useSSRSafeId();\n  const subNavId = useSSRSafeId();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const subNavRef = React.useRef(null);\n  const [containsCurrentItem, setContainsCurrentItem] = React.useState(false);\n  React.useLayoutEffect(() => {\n    if (subNavRef.current) {\n      // Check if SubNav contains current item\n      const currentItem = subNavRef.current.querySelector('[aria-current]');\n\n      if (currentItem && currentItem.getAttribute('aria-current') !== 'false') {\n        setContainsCurrentItem(true);\n        setIsOpen(true);\n      }\n    }\n  }, [subNav]);\n  return /*#__PURE__*/React.createElement(ItemWithSubNavContext.Provider, {\n    value: {\n      buttonId,\n      subNavId,\n      isOpen\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"li\",\n    \"aria-labelledby\": buttonId,\n    sx: {\n      listStyle: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(ActionList.Item, {\n    as: \"button\",\n    id: buttonId,\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": subNavId // When the subNav is closed, how should we indicated that the subNav contains the current item?\n    ,\n    active: !isOpen && containsCurrentItem,\n    onClick: () => setIsOpen(open => !open),\n    sx: merge({\n      fontWeight: containsCurrentItem ? 'bold' : null // Parent item is bold if any of it's sub-items are current\n\n    }, sxProp)\n  }, children, /*#__PURE__*/React.createElement(ActionList.TrailingVisual, null, /*#__PURE__*/React.createElement(StyledOcticon, {\n    icon: ChevronDownIcon,\n    sx: {\n      transform: isOpen ? 'rotate(180deg)' : 'rotate(0deg)'\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: subNavRef\n  }, subNav)));\n}\n\nItemWithSubNav.displayName = \"ItemWithSubNav\";\nconst SubNavContext = /*#__PURE__*/React.createContext({\n  depth: 0\n}); // TODO: ref prop\n// NOTE: SubNav must be a direct child of an Item\n\nconst SubNav = _ref4 => {\n  let {\n    children,\n    sx: sxProp = {}\n  } = _ref4;\n  const {\n    buttonId,\n    subNavId,\n    isOpen\n  } = React.useContext(ItemWithSubNavContext);\n  const {\n    depth\n  } = React.useContext(SubNavContext);\n\n  if (!buttonId || !subNavId) {\n    // eslint-disable-next-line no-console\n    console.error('NavList.SubNav must be a child of a NavList.Item');\n  }\n\n  if (depth > 0) {\n    // eslint-disable-next-line no-console\n    console.error('NavList.SubNav only supports one level of nesting');\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(SubNavContext.Provider, {\n    value: {\n      depth: depth + 1\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"ul\",\n    id: subNavId,\n    \"aria-labelledby\": buttonId,\n    sx: merge({\n      padding: 0,\n      margin: 0,\n      display: isOpen ? 'block' : 'none'\n    }, sxProp)\n  }, children));\n};\n\nSubNav.displayName = \"SubNav\";\nSubNav.displayName = 'NavList.SubNav'; // ----------------------------------------------------------------------------\n// NavList.LeadingVisual\n\nconst LeadingVisual = ActionList.LeadingVisual;\nLeadingVisual.displayName = 'NavList.LeadingVisual'; // ----------------------------------------------------------------------------\n// NavList.TrailingVisual\n\nconst TrailingVisual = ActionList.TrailingVisual;\nTrailingVisual.displayName = 'NavList.TrailingVisual'; // ----------------------------------------------------------------------------\n// NavList.Divider\n\nconst Divider = ActionList.Divider;\nDivider.displayName = 'NavList.Divider'; // ----------------------------------------------------------------------------\n// NavList.Group\n\nconst defaultSx = {}; // TODO: ref prop\n\nconst Group = _ref5 => {\n  let {\n    title,\n    children,\n    sx: sxProp = defaultSx,\n    ...props\n  } = _ref5;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionList.Divider, {\n    sx: {\n      '&:first-child': {\n        display: 'none'\n      }\n    }\n  }), /*#__PURE__*/React.createElement(ActionList.Group, _extends({}, props, {\n    title: title,\n    sx: sxProp\n  }), children));\n};\n\nGroup.displayName = 'NavList.Group'; // ----------------------------------------------------------------------------\n// Export\n\nexport const NavList = Object.assign(Root, {\n  Item,\n  SubNav,\n  LeadingVisual,\n  TrailingVisual,\n  Divider,\n  Group\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/NavList/NavList.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ChevronDownIcon","useSSRSafeId","React","isValidElement","styled","ActionList","Box","StyledOcticon","sx","merge","NavBox","nav","withConfig","displayName","componentId","Root","forwardRef","ref","children","props","createElement","Item","ariaCurrent","sxProp","depth","useContext","SubNavContext","subNav","Children","toArray","find","child","type","SubNav","childrenWithoutSubNav","filter","ItemWithSubNav","LinkItem","active","Boolean","paddingLeft","fontSize","fontWeight","ItemWithSubNavContext","createContext","buttonId","subNavId","isOpen","setIsOpen","useState","subNavRef","useRef","containsCurrentItem","setContainsCurrentItem","useLayoutEffect","current","currentItem","querySelector","getAttribute","Provider","value","as","listStyle","id","onClick","open","TrailingVisual","icon","transform","console","error","padding","margin","display","LeadingVisual","Divider","defaultSx","Group","title","Fragment","NavList"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ChevronDownIcon } from '@primer/octicons-react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport React, { isValidElement } from 'react';\nimport styled from 'styled-components';\nimport { ActionList } from '../ActionList';\nimport Box from '../Box';\nimport StyledOcticon from '../StyledOcticon';\nimport sx, { merge } from '../sx'; // ----------------------------------------------------------------------------\n// NavList\n\nconst NavBox = styled.nav.withConfig({\n  displayName: \"NavList__NavBox\",\n  componentId: \"sc-1c8ygf7-0\"\n})(sx);\nconst Root = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(NavBox, _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(ActionList, null, children));\n});\nRoot.displayName = 'NavList'; // ----------------------------------------------------------------------------\n// NavList.Item\n\nconst Item = /*#__PURE__*/React.forwardRef(({\n  'aria-current': ariaCurrent,\n  children,\n  sx: sxProp = {},\n  ...props\n}, ref) => {\n  const {\n    depth\n  } = React.useContext(SubNavContext); // Get SubNav from children\n\n  const subNav = React.Children.toArray(children).find(child => /*#__PURE__*/isValidElement(child) && child.type === SubNav); // Get children without SubNav\n\n  const childrenWithoutSubNav = React.Children.toArray(children).filter(child => /*#__PURE__*/isValidElement(child) ? child.type !== SubNav : true); // Render ItemWithSubNav if SubNav is present\n\n  if (subNav && /*#__PURE__*/isValidElement(subNav) && depth < 1) {\n    return /*#__PURE__*/React.createElement(ItemWithSubNav, {\n      subNav: subNav,\n      sx: sxProp\n    }, childrenWithoutSubNav);\n  }\n\n  return /*#__PURE__*/React.createElement(ActionList.LinkItem, _extends({\n    ref: ref,\n    \"aria-current\": ariaCurrent,\n    active: Boolean(ariaCurrent) && ariaCurrent !== 'false',\n    sx: merge({\n      paddingLeft: depth > 0 ? 5 : null,\n      // Indent sub-items\n      fontSize: depth > 0 ? 0 : null,\n      // Reduce font size of sub-items\n      fontWeight: depth > 0 ? 'normal' : null // Sub-items don't get bolded\n\n    }, sxProp)\n  }, props), children);\n});\nItem.displayName = 'NavList.Item'; // ----------------------------------------------------------------------------\n// ItemWithSubNav (internal)\n\nconst ItemWithSubNavContext = /*#__PURE__*/React.createContext({\n  buttonId: '',\n  subNavId: '',\n  isOpen: false\n}); // TODO: ref prop\n// TODO: Animate open/close transition\n\nfunction ItemWithSubNav({\n  children,\n  subNav,\n  sx: sxProp = {}\n}) {\n  const buttonId = useSSRSafeId();\n  const subNavId = useSSRSafeId();\n  const [isOpen, setIsOpen] = React.useState(false);\n  const subNavRef = React.useRef(null);\n  const [containsCurrentItem, setContainsCurrentItem] = React.useState(false);\n  React.useLayoutEffect(() => {\n    if (subNavRef.current) {\n      // Check if SubNav contains current item\n      const currentItem = subNavRef.current.querySelector('[aria-current]');\n\n      if (currentItem && currentItem.getAttribute('aria-current') !== 'false') {\n        setContainsCurrentItem(true);\n        setIsOpen(true);\n      }\n    }\n  }, [subNav]);\n  return /*#__PURE__*/React.createElement(ItemWithSubNavContext.Provider, {\n    value: {\n      buttonId,\n      subNavId,\n      isOpen\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"li\",\n    \"aria-labelledby\": buttonId,\n    sx: {\n      listStyle: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(ActionList.Item, {\n    as: \"button\",\n    id: buttonId,\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": subNavId // When the subNav is closed, how should we indicated that the subNav contains the current item?\n    ,\n    active: !isOpen && containsCurrentItem,\n    onClick: () => setIsOpen(open => !open),\n    sx: merge({\n      fontWeight: containsCurrentItem ? 'bold' : null // Parent item is bold if any of it's sub-items are current\n\n    }, sxProp)\n  }, children, /*#__PURE__*/React.createElement(ActionList.TrailingVisual, null, /*#__PURE__*/React.createElement(StyledOcticon, {\n    icon: ChevronDownIcon,\n    sx: {\n      transform: isOpen ? 'rotate(180deg)' : 'rotate(0deg)'\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: subNavRef\n  }, subNav)));\n}\n\nItemWithSubNav.displayName = \"ItemWithSubNav\";\nconst SubNavContext = /*#__PURE__*/React.createContext({\n  depth: 0\n}); // TODO: ref prop\n// NOTE: SubNav must be a direct child of an Item\n\nconst SubNav = ({\n  children,\n  sx: sxProp = {}\n}) => {\n  const {\n    buttonId,\n    subNavId,\n    isOpen\n  } = React.useContext(ItemWithSubNavContext);\n  const {\n    depth\n  } = React.useContext(SubNavContext);\n\n  if (!buttonId || !subNavId) {\n    // eslint-disable-next-line no-console\n    console.error('NavList.SubNav must be a child of a NavList.Item');\n  }\n\n  if (depth > 0) {\n    // eslint-disable-next-line no-console\n    console.error('NavList.SubNav only supports one level of nesting');\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(SubNavContext.Provider, {\n    value: {\n      depth: depth + 1\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"ul\",\n    id: subNavId,\n    \"aria-labelledby\": buttonId,\n    sx: merge({\n      padding: 0,\n      margin: 0,\n      display: isOpen ? 'block' : 'none'\n    }, sxProp)\n  }, children));\n};\n\nSubNav.displayName = \"SubNav\";\nSubNav.displayName = 'NavList.SubNav'; // ----------------------------------------------------------------------------\n// NavList.LeadingVisual\n\nconst LeadingVisual = ActionList.LeadingVisual;\nLeadingVisual.displayName = 'NavList.LeadingVisual'; // ----------------------------------------------------------------------------\n// NavList.TrailingVisual\n\nconst TrailingVisual = ActionList.TrailingVisual;\nTrailingVisual.displayName = 'NavList.TrailingVisual'; // ----------------------------------------------------------------------------\n// NavList.Divider\n\nconst Divider = ActionList.Divider;\nDivider.displayName = 'NavList.Divider'; // ----------------------------------------------------------------------------\n// NavList.Group\n\nconst defaultSx = {}; // TODO: ref prop\n\nconst Group = ({\n  title,\n  children,\n  sx: sxProp = defaultSx,\n  ...props\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActionList.Divider, {\n    sx: {\n      '&:first-child': {\n        display: 'none'\n      }\n    }\n  }), /*#__PURE__*/React.createElement(ActionList.Group, _extends({}, props, {\n    title: title,\n    sx: sxProp\n  }), children));\n};\n\nGroup.displayName = 'NavList.Group'; // ----------------------------------------------------------------------------\n// Export\n\nexport const NavList = Object.assign(Root, {\n  Item,\n  SubNav,\n  LeadingVisual,\n  TrailingVisual,\n  Divider,\n  Group\n});"]},"metadata":{},"sourceType":"module"}