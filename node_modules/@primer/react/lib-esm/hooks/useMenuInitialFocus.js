import React from 'react';
import { iterateFocusableElements } from '@primer/behaviors/utils';
import { useProvidedRefOrCreate } from './useProvidedRefOrCreate';
export const useMenuInitialFocus = (open, onOpen, providedRef) => {
  const containerRef = useProvidedRefOrCreate(providedRef);
  const [openingKey, setOpeningKey] = React.useState(undefined);

  const openWithFocus = (gesture, event) => {
    if (gesture === 'anchor-key-press' && event) setOpeningKey(event.code);else setOpeningKey(undefined);
    if (typeof onOpen === 'function') onOpen(gesture, event);
  };
  /**
   * Pick the first element to focus based on the key used to open the Menu
   * ArrowDown | Space | Enter: first element
   * ArrowUp: last element
   */


  React.useEffect(() => {
    if (!open) return;
    if (!openingKey || !containerRef.current) return;
    const iterable = iterateFocusableElements(containerRef.current);

    if (['ArrowDown', 'Space', 'Enter'].includes(openingKey)) {
      const firstElement = iterable.next().value;
      /** We push imperative focus to the next tick to prevent React's batching */

      setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());
    } else if (['ArrowUp'].includes(openingKey)) {
      const elements = [...iterable];
      const lastElement = elements[elements.length - 1];
      setTimeout(() => lastElement.focus());
    }
  }, [open, openingKey, containerRef]);
  return {
    containerRef,
    openWithFocus
  };
};