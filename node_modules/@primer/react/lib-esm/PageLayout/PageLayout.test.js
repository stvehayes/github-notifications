import { render } from '@testing-library/react';
import React from 'react';
import { ThemeProvider } from '..';
import { PageLayout } from './PageLayout';
describe('PageLayout', () => {
  it('renders default layout', () => {
    const {
      container
    } = render( /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(PageLayout, null, /*#__PURE__*/React.createElement(PageLayout.Header, null, "Header"), /*#__PURE__*/React.createElement(PageLayout.Content, null, "Content"), /*#__PURE__*/React.createElement(PageLayout.Pane, null, "Pane"), /*#__PURE__*/React.createElement(PageLayout.Footer, null, "Footer"))));
    expect(container).toMatchSnapshot();
  });
  it('renders condensed layout', () => {
    const {
      container
    } = render( /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(PageLayout, {
      padding: "condensed",
      rowGap: "condensed",
      columnGap: "condensed"
    }, /*#__PURE__*/React.createElement(PageLayout.Header, null, "Header"), /*#__PURE__*/React.createElement(PageLayout.Content, null, "Content"), /*#__PURE__*/React.createElement(PageLayout.Pane, null, "Pane"), /*#__PURE__*/React.createElement(PageLayout.Footer, null, "Footer"))));
    expect(container).toMatchSnapshot();
  });
  it('renders with dividers', () => {
    const {
      container
    } = render( /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(PageLayout, null, /*#__PURE__*/React.createElement(PageLayout.Header, {
      divider: "line",
      dividerWhenNarrow: "filled"
    }, "Header"), /*#__PURE__*/React.createElement(PageLayout.Content, null, "Content"), /*#__PURE__*/React.createElement(PageLayout.Pane, {
      position: "start",
      divider: "line",
      dividerWhenNarrow: "filled"
    }, "Pane"), /*#__PURE__*/React.createElement(PageLayout.Footer, {
      dividerWhenNarrow: "line"
    }, "Footer"))));
    expect(container).toMatchSnapshot();
  });
  it('renders pane in different position when narrow', () => {
    const {
      container
    } = render( /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(PageLayout, null, /*#__PURE__*/React.createElement(PageLayout.Header, null, "Header"), /*#__PURE__*/React.createElement(PageLayout.Content, null, "Content"), /*#__PURE__*/React.createElement(PageLayout.Pane, {
      positionWhenNarrow: "start"
    }, "Pane"), /*#__PURE__*/React.createElement(PageLayout.Footer, null, "Footer"))));
    expect(container).toMatchSnapshot();
  });
});