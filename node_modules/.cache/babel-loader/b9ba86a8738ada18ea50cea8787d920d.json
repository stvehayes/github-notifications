{"ast":null,"code":"import React, { useContext } from 'react';\nimport { Autocomplete, Box, Checkbox, Radio, Select, Textarea, TextInput, TextInputWithTokens, useSSRSafeId } from '..';\nimport FormControlCaption from './_FormControlCaption';\nimport FormControlLabel from './_FormControlLabel';\nimport FormControlValidation from './_FormControlValidation';\nimport { Slots } from './slots';\nimport ValidationAnimationContainer from '../_ValidationAnimationContainer';\nimport { get } from '../constants';\nimport FormControlLeadingVisual from './_FormControlLeadingVisual';\nimport CheckboxOrRadioGroupContext from '../_CheckboxOrRadioGroup/_CheckboxOrRadioGroupContext';\nconst FormControl = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    children,\n    disabled: disabledProp,\n    layout,\n    id: idProp,\n    required,\n    sx\n  } = _ref;\n  const expectedInputComponents = [Autocomplete, Checkbox, Radio, Select, TextInput, TextInputWithTokens, Textarea];\n  const choiceGroupContext = useContext(CheckboxOrRadioGroupContext);\n  const disabled = (choiceGroupContext === null || choiceGroupContext === void 0 ? void 0 : choiceGroupContext.disabled) || disabledProp;\n  const id = useSSRSafeId(idProp);\n  const validationChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlValidation ? child : null);\n  const captionChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlCaption ? child : null);\n  const labelChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlLabel);\n  const validationMessageId = validationChild && `${id}-validationMessage`;\n  const captionId = captionChild && `${id}-caption`;\n  const validationStatus = /*#__PURE__*/React.isValidElement(validationChild) && validationChild.props.variant;\n  const InputComponent = React.Children.toArray(children).find(child => expectedInputComponents.some(inputComponent => /*#__PURE__*/React.isValidElement(child) && child.type === inputComponent));\n  const inputProps = /*#__PURE__*/React.isValidElement(InputComponent) && InputComponent.props;\n  const isChoiceInput = /*#__PURE__*/React.isValidElement(InputComponent) && (InputComponent.type === Checkbox || InputComponent.type === Radio);\n\n  if (InputComponent) {\n    if (inputProps !== null && inputProps !== void 0 && inputProps.id) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'id' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.disabled) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'disabled' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.required) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'required' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n  }\n\n  if (!labelChild) {\n    // eslint-disable-next-line no-console\n    console.error(`The input field with the id ${id} MUST have a FormControl.Label child.\\n\\nIf you want to hide the label, pass the 'visuallyHidden' prop to the FormControl.Label component.`);\n  }\n\n  if (isChoiceInput) {\n    if (validationChild) {\n      // eslint-disable-next-line no-console\n      console.warn('Validation messages are not rendered for an individual checkbox or radio. The validation message should be shown for all options.');\n    }\n\n    if (React.Children.toArray(children).find(child => {\n      var _child$props;\n\n      return /*#__PURE__*/React.isValidElement(child) && ((_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.required);\n    })) {\n      // eslint-disable-next-line no-console\n      console.warn('An individual checkbox or radio cannot be a required field.');\n    }\n  } else {\n    if (React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlLeadingVisual)) {\n      // eslint-disable-next-line no-console\n      console.warn('A leading visual is only rendered for a checkbox or radio form control. If you want to render a leading visual inside of your input, check if your input supports a leading visual.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Slots, {\n    context: {\n      captionId,\n      disabled,\n      id,\n      required,\n      validationMessageId\n    }\n  }, slots => {\n    const isLabelHidden = /*#__PURE__*/React.isValidElement(slots.Label) && slots.Label.props.visuallyHidden;\n    return isChoiceInput || layout === 'horizontal' ? /*#__PURE__*/React.createElement(Box, {\n      ref: ref,\n      display: \"flex\",\n      alignItems: slots.LeadingVisual ? 'center' : undefined,\n      sx: sx\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        '> input': {\n          marginLeft: 0,\n          marginRight: 0\n        }\n      }\n    }, /*#__PURE__*/React.isValidElement(InputComponent) && /*#__PURE__*/React.cloneElement(InputComponent, {\n      id,\n      disabled,\n      ['aria-describedby']: captionId\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && ![Checkbox, Radio].some(inputComponent => child.type === inputComponent))), slots.LeadingVisual && /*#__PURE__*/React.createElement(Box, {\n      color: disabled ? 'fg.muted' : 'fg.default',\n      sx: {\n        '> *': {\n          minWidth: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          minHeight: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          fill: 'currentColor'\n        }\n      },\n      ml: 2\n    }, slots.LeadingVisual), /*#__PURE__*/React.isValidElement(slots.Label) && !slots.Label.props.visuallyHidden || slots.Caption ? /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      ml: 2\n    }, slots.Label, slots.Caption) : /*#__PURE__*/React.createElement(React.Fragment, null, slots.Label, slots.Caption)) : /*#__PURE__*/React.createElement(Box, {\n      ref: ref,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      sx: { ...(isLabelHidden ? {\n          '> *:not(label) + *': {\n            marginTop: 1\n          }\n        } : {\n          '> * + *': {\n            marginTop: 1\n          }\n        }),\n        ...sx\n      }\n    }, slots.Label, /*#__PURE__*/React.isValidElement(InputComponent) && /*#__PURE__*/React.cloneElement(InputComponent, {\n      id,\n      required,\n      disabled,\n      validationStatus,\n      ['aria-describedby']: [validationMessageId, captionId].filter(Boolean).join(' '),\n      ...InputComponent.props\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && !expectedInputComponents.some(inputComponent => child.type === inputComponent)), validationChild && /*#__PURE__*/React.createElement(ValidationAnimationContainer, {\n      show: true\n    }, slots.Validation), slots.Caption);\n  });\n});\nFormControl.defaultProps = {\n  layout: 'vertical'\n};\nexport default Object.assign(FormControl, {\n  Caption: FormControlCaption,\n  Label: FormControlLabel,\n  LeadingVisual: FormControlLeadingVisual,\n  Validation: FormControlValidation\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/FormControl/FormControl.js"],"names":["React","useContext","Autocomplete","Box","Checkbox","Radio","Select","Textarea","TextInput","TextInputWithTokens","useSSRSafeId","FormControlCaption","FormControlLabel","FormControlValidation","Slots","ValidationAnimationContainer","get","FormControlLeadingVisual","CheckboxOrRadioGroupContext","FormControl","forwardRef","ref","children","disabled","disabledProp","layout","id","idProp","required","sx","expectedInputComponents","choiceGroupContext","validationChild","Children","toArray","find","child","isValidElement","type","captionChild","labelChild","validationMessageId","captionId","validationStatus","props","variant","InputComponent","some","inputComponent","inputProps","isChoiceInput","console","warn","error","_child$props","createElement","context","slots","isLabelHidden","Label","visuallyHidden","display","alignItems","LeadingVisual","undefined","marginLeft","marginRight","cloneElement","filter","color","minWidth","Caption","minHeight","fill","ml","flexDirection","Fragment","marginTop","Boolean","join","show","Validation","defaultProps","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqDC,QAArD,EAA+DC,SAA/D,EAA0EC,mBAA1E,EAA+FC,YAA/F,QAAmH,IAAnH;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAOC,4BAAP,MAAyC,kCAAzC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,wBAAP,MAAqC,6BAArC;AACA,OAAOC,2BAAP,MAAwC,uDAAxC;AACA,MAAMC,WAAW,GAAG,aAAanB,KAAK,CAACoB,UAAN,CAAiB,OAO/CC,GAP+C,KAOvC;AAAA,MAPwC;AACjDC,IAAAA,QADiD;AAEjDC,IAAAA,QAAQ,EAAEC,YAFuC;AAGjDC,IAAAA,MAHiD;AAIjDC,IAAAA,EAAE,EAAEC,MAJ6C;AAKjDC,IAAAA,QALiD;AAMjDC,IAAAA;AANiD,GAOxC;AACT,QAAMC,uBAAuB,GAAG,CAAC5B,YAAD,EAAeE,QAAf,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCE,SAAxC,EAAmDC,mBAAnD,EAAwEF,QAAxE,CAAhC;AACA,QAAMwB,kBAAkB,GAAG9B,UAAU,CAACiB,2BAAD,CAArC;AACA,QAAMK,QAAQ,GAAG,CAACQ,kBAAkB,KAAK,IAAvB,IAA+BA,kBAAkB,KAAK,KAAK,CAA3D,GAA+D,KAAK,CAApE,GAAwEA,kBAAkB,CAACR,QAA5F,KAAyGC,YAA1H;AACA,QAAME,EAAE,GAAGhB,YAAY,CAACiB,MAAD,CAAvB;AACA,QAAMK,eAAe,GAAGhC,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+BA,KAAK,CAACE,IAAN,KAAezB,qBAA9C,GAAsEuB,KAAtE,GAA8E,IAA1I,CAAxB;AACA,QAAMG,YAAY,GAAGvC,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+BA,KAAK,CAACE,IAAN,KAAe3B,kBAA9C,GAAmEyB,KAAnE,GAA2E,IAAvI,CAArB;AACA,QAAMI,UAAU,GAAGxC,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+BA,KAAK,CAACE,IAAN,KAAe1B,gBAA1G,CAAnB;AACA,QAAM6B,mBAAmB,GAAGT,eAAe,IAAK,GAAEN,EAAG,oBAArD;AACA,QAAMgB,SAAS,GAAGH,YAAY,IAAK,GAAEb,EAAG,UAAxC;AACA,QAAMiB,gBAAgB,GAAG,aAAa3C,KAAK,CAACqC,cAAN,CAAqBL,eAArB,KAAyCA,eAAe,CAACY,KAAhB,CAAsBC,OAArG;AACA,QAAMC,cAAc,GAAG9C,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAIN,uBAAuB,CAACiB,IAAxB,CAA6BC,cAAc,IAAI,aAAahD,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+BA,KAAK,CAACE,IAAN,KAAeU,cAA1G,CAA/C,CAAvB;AACA,QAAMC,UAAU,GAAG,aAAajD,KAAK,CAACqC,cAAN,CAAqBS,cAArB,KAAwCA,cAAc,CAACF,KAAvF;AACA,QAAMM,aAAa,GAAG,aAAalD,KAAK,CAACqC,cAAN,CAAqBS,cAArB,MAAyCA,cAAc,CAACR,IAAf,KAAwBlC,QAAxB,IAAoC0C,cAAc,CAACR,IAAf,KAAwBjC,KAArG,CAAnC;;AAEA,MAAIyC,cAAJ,EAAoB;AAClB,QAAIG,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,IAAgDA,UAAU,CAACvB,EAA/D,EAAmE;AACjE;AACAyB,MAAAA,OAAO,CAACC,IAAR,CAAc,8HAAd;AACD;;AAED,QAAIH,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,IAAgDA,UAAU,CAAC1B,QAA/D,EAAyE;AACvE;AACA4B,MAAAA,OAAO,CAACC,IAAR,CAAc,oIAAd;AACD;;AAED,QAAIH,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,IAAgDA,UAAU,CAACrB,QAA/D,EAAyE;AACvE;AACAuB,MAAAA,OAAO,CAACC,IAAR,CAAc,oIAAd;AACD;AACF;;AAED,MAAI,CAACZ,UAAL,EAAiB;AACf;AACAW,IAAAA,OAAO,CAACE,KAAR,CAAe,+BAA8B3B,EAAG,4IAAhD;AACD;;AAED,MAAIwB,aAAJ,EAAmB;AACjB,QAAIlB,eAAJ,EAAqB;AACnB;AACAmB,MAAAA,OAAO,CAACC,IAAR,CAAa,mIAAb;AACD;;AAED,QAAIpD,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAI;AACjD,UAAIkB,YAAJ;;AAEA,aAAO,aAAatD,KAAK,CAACqC,cAAN,CAAqBD,KAArB,MAAgC,CAACkB,YAAY,GAAGlB,KAAK,CAACQ,KAAtB,MAAiC,IAAjC,IAAyCU,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAAC1B,QAAzH,CAApB;AACD,KAJG,CAAJ,EAII;AACF;AACAuB,MAAAA,OAAO,CAACC,IAAR,CAAa,6DAAb;AACD;AACF,GAdD,MAcO;AACL,QAAIpD,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiCa,IAAjC,CAAsCC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+BA,KAAK,CAACE,IAAN,KAAerB,wBAA1G,CAAJ,EAAyI;AACvI;AACAkC,MAAAA,OAAO,CAACC,IAAR,CAAa,qLAAb;AACD;AACF;;AAED,SAAO,aAAapD,KAAK,CAACuD,aAAN,CAAoBzC,KAApB,EAA2B;AAC7C0C,IAAAA,OAAO,EAAE;AACPd,MAAAA,SADO;AAEPnB,MAAAA,QAFO;AAGPG,MAAAA,EAHO;AAIPE,MAAAA,QAJO;AAKPa,MAAAA;AALO;AADoC,GAA3B,EAQjBgB,KAAK,IAAI;AACV,UAAMC,aAAa,GAAG,aAAa1D,KAAK,CAACqC,cAAN,CAAqBoB,KAAK,CAACE,KAA3B,KAAqCF,KAAK,CAACE,KAAN,CAAYf,KAAZ,CAAkBgB,cAA1F;AACA,WAAOV,aAAa,IAAIzB,MAAM,KAAK,YAA5B,GAA2C,aAAazB,KAAK,CAACuD,aAAN,CAAoBpD,GAApB,EAAyB;AACtFkB,MAAAA,GAAG,EAAEA,GADiF;AAEtFwC,MAAAA,OAAO,EAAE,MAF6E;AAGtFC,MAAAA,UAAU,EAAEL,KAAK,CAACM,aAAN,GAAsB,QAAtB,GAAiCC,SAHyC;AAItFnC,MAAAA,EAAE,EAAEA;AAJkF,KAAzB,EAK5D,aAAa7B,KAAK,CAACuD,aAAN,CAAoBpD,GAApB,EAAyB;AACvC0B,MAAAA,EAAE,EAAE;AACF,mBAAW;AACToC,UAAAA,UAAU,EAAE,CADH;AAETC,UAAAA,WAAW,EAAE;AAFJ;AADT;AADmC,KAAzB,EAOb,aAAalE,KAAK,CAACqC,cAAN,CAAqBS,cAArB,KAAwC,aAAa9C,KAAK,CAACmE,YAAN,CAAmBrB,cAAnB,EAAmC;AACtGpB,MAAAA,EADsG;AAEtGH,MAAAA,QAFsG;AAGtG,OAAC,kBAAD,GAAsBmB;AAHgF,KAAnC,CAPrD,EAWZ1C,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiC8C,MAAjC,CAAwChC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+B,CAAC,CAAChC,QAAD,EAAWC,KAAX,EAAkB0C,IAAlB,CAAuBC,cAAc,IAAIZ,KAAK,CAACE,IAAN,KAAeU,cAAxD,CAA9F,CAXY,CAL+C,EAgB8GS,KAAK,CAACM,aAAN,IAAuB,aAAa/D,KAAK,CAACuD,aAAN,CAAoBpD,GAApB,EAAyB;AACxOkE,MAAAA,KAAK,EAAE9C,QAAQ,GAAG,UAAH,GAAgB,YADyM;AAExOM,MAAAA,EAAE,EAAE;AACF,eAAO;AACLyC,UAAAA,QAAQ,EAAEb,KAAK,CAACc,OAAN,GAAgBvD,GAAG,CAAC,aAAD,CAAnB,GAAqCA,GAAG,CAAC,aAAD,CAD7C;AAELwD,UAAAA,SAAS,EAAEf,KAAK,CAACc,OAAN,GAAgBvD,GAAG,CAAC,aAAD,CAAnB,GAAqCA,GAAG,CAAC,aAAD,CAF9C;AAGLyD,UAAAA,IAAI,EAAE;AAHD;AADL,OAFoO;AASxOC,MAAAA,EAAE,EAAE;AAToO,KAAzB,EAU9MjB,KAAK,CAACM,aAVwM,CAhBlJ,EA0BtC,aAAa/D,KAAK,CAACqC,cAAN,CAAqBoB,KAAK,CAACE,KAA3B,KAAqC,CAACF,KAAK,CAACE,KAAN,CAAYf,KAAZ,CAAkBgB,cAAxD,IAA0EH,KAAK,CAACc,OAAhF,GAA0F,aAAavE,KAAK,CAACuD,aAAN,CAAoBpD,GAApB,EAAyB;AACpK0D,MAAAA,OAAO,EAAE,MAD2J;AAEpKc,MAAAA,aAAa,EAAE,QAFqJ;AAGpKD,MAAAA,EAAE,EAAE;AAHgK,KAAzB,EAI1IjB,KAAK,CAACE,KAJoI,EAI7HF,KAAK,CAACc,OAJuH,CAAvG,GAIL,aAAavE,KAAK,CAACuD,aAAN,CAAoBvD,KAAK,CAAC4E,QAA1B,EAAoC,IAApC,EAA0CnB,KAAK,CAACE,KAAhD,EAAuDF,KAAK,CAACc,OAA7D,CA9BiB,CAAxD,GA8BgH,aAAavE,KAAK,CAACuD,aAAN,CAAoBpD,GAApB,EAAyB;AAC3JkB,MAAAA,GAAG,EAAEA,GADsJ;AAE3JwC,MAAAA,OAAO,EAAE,MAFkJ;AAG3Jc,MAAAA,aAAa,EAAE,QAH4I;AAI3Jb,MAAAA,UAAU,EAAE,YAJ+I;AAK3JjC,MAAAA,EAAE,EAAE,EAAE,IAAI6B,aAAa,GAAG;AACtB,gCAAsB;AACpBmB,YAAAA,SAAS,EAAE;AADS;AADA,SAAH,GAIjB;AACF,qBAAW;AACTA,YAAAA,SAAS,EAAE;AADF;AADT,SAJA,CAAF;AASF,WAAGhD;AATD;AALuJ,KAAzB,EAgBjI4B,KAAK,CAACE,KAhB2H,EAgBpH,aAAa3D,KAAK,CAACqC,cAAN,CAAqBS,cAArB,KAAwC,aAAa9C,KAAK,CAACmE,YAAN,CAAmBrB,cAAnB,EAAmC;AACnHpB,MAAAA,EADmH;AAEnHE,MAAAA,QAFmH;AAGnHL,MAAAA,QAHmH;AAInHoB,MAAAA,gBAJmH;AAKnH,OAAC,kBAAD,GAAsB,CAACF,mBAAD,EAAsBC,SAAtB,EAAiC0B,MAAjC,CAAwCU,OAAxC,EAAiDC,IAAjD,CAAsD,GAAtD,CAL6F;AAMnH,SAAGjC,cAAc,CAACF;AANiG,KAAnC,CAhBkD,EAuBhI5C,KAAK,CAACiC,QAAN,CAAeC,OAAf,CAAuBZ,QAAvB,EAAiC8C,MAAjC,CAAwChC,KAAK,IAAI,aAAapC,KAAK,CAACqC,cAAN,CAAqBD,KAArB,KAA+B,CAACN,uBAAuB,CAACiB,IAAxB,CAA6BC,cAAc,IAAIZ,KAAK,CAACE,IAAN,KAAeU,cAA9D,CAA9F,CAvBgI,EAuB8ChB,eAAe,IAAI,aAAahC,KAAK,CAACuD,aAAN,CAAoBxC,4BAApB,EAAkD;AAClQiE,MAAAA,IAAI,EAAE;AAD4P,KAAlD,EAE/MvB,KAAK,CAACwB,UAFyM,CAvB9E,EAyB9GxB,KAAK,CAACc,OAzBwG,CA9BpI;AAwDD,GAlEmB,CAApB;AAmED,CApIgC,CAAjC;AAqIApD,WAAW,CAAC+D,YAAZ,GAA2B;AACzBzD,EAAAA,MAAM,EAAE;AADiB,CAA3B;AAGA,eAAe0D,MAAM,CAACC,MAAP,CAAcjE,WAAd,EAA2B;AACxCoD,EAAAA,OAAO,EAAE5D,kBAD+B;AAExCgD,EAAAA,KAAK,EAAE/C,gBAFiC;AAGxCmD,EAAAA,aAAa,EAAE9C,wBAHyB;AAIxCgE,EAAAA,UAAU,EAAEpE;AAJ4B,CAA3B,CAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Autocomplete, Box, Checkbox, Radio, Select, Textarea, TextInput, TextInputWithTokens, useSSRSafeId } from '..';\nimport FormControlCaption from './_FormControlCaption';\nimport FormControlLabel from './_FormControlLabel';\nimport FormControlValidation from './_FormControlValidation';\nimport { Slots } from './slots';\nimport ValidationAnimationContainer from '../_ValidationAnimationContainer';\nimport { get } from '../constants';\nimport FormControlLeadingVisual from './_FormControlLeadingVisual';\nimport CheckboxOrRadioGroupContext from '../_CheckboxOrRadioGroup/_CheckboxOrRadioGroupContext';\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  children,\n  disabled: disabledProp,\n  layout,\n  id: idProp,\n  required,\n  sx\n}, ref) => {\n  const expectedInputComponents = [Autocomplete, Checkbox, Radio, Select, TextInput, TextInputWithTokens, Textarea];\n  const choiceGroupContext = useContext(CheckboxOrRadioGroupContext);\n  const disabled = (choiceGroupContext === null || choiceGroupContext === void 0 ? void 0 : choiceGroupContext.disabled) || disabledProp;\n  const id = useSSRSafeId(idProp);\n  const validationChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlValidation ? child : null);\n  const captionChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlCaption ? child : null);\n  const labelChild = React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlLabel);\n  const validationMessageId = validationChild && `${id}-validationMessage`;\n  const captionId = captionChild && `${id}-caption`;\n  const validationStatus = /*#__PURE__*/React.isValidElement(validationChild) && validationChild.props.variant;\n  const InputComponent = React.Children.toArray(children).find(child => expectedInputComponents.some(inputComponent => /*#__PURE__*/React.isValidElement(child) && child.type === inputComponent));\n  const inputProps = /*#__PURE__*/React.isValidElement(InputComponent) && InputComponent.props;\n  const isChoiceInput = /*#__PURE__*/React.isValidElement(InputComponent) && (InputComponent.type === Checkbox || InputComponent.type === Radio);\n\n  if (InputComponent) {\n    if (inputProps !== null && inputProps !== void 0 && inputProps.id) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'id' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.disabled) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'disabled' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n\n    if (inputProps !== null && inputProps !== void 0 && inputProps.required) {\n      // eslint-disable-next-line no-console\n      console.warn(`instead of passing the 'required' prop directly to the input component, it should be passed to the parent component, <FormControl>`);\n    }\n  }\n\n  if (!labelChild) {\n    // eslint-disable-next-line no-console\n    console.error(`The input field with the id ${id} MUST have a FormControl.Label child.\\n\\nIf you want to hide the label, pass the 'visuallyHidden' prop to the FormControl.Label component.`);\n  }\n\n  if (isChoiceInput) {\n    if (validationChild) {\n      // eslint-disable-next-line no-console\n      console.warn('Validation messages are not rendered for an individual checkbox or radio. The validation message should be shown for all options.');\n    }\n\n    if (React.Children.toArray(children).find(child => {\n      var _child$props;\n\n      return /*#__PURE__*/React.isValidElement(child) && ((_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.required);\n    })) {\n      // eslint-disable-next-line no-console\n      console.warn('An individual checkbox or radio cannot be a required field.');\n    }\n  } else {\n    if (React.Children.toArray(children).find(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControlLeadingVisual)) {\n      // eslint-disable-next-line no-console\n      console.warn('A leading visual is only rendered for a checkbox or radio form control. If you want to render a leading visual inside of your input, check if your input supports a leading visual.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Slots, {\n    context: {\n      captionId,\n      disabled,\n      id,\n      required,\n      validationMessageId\n    }\n  }, slots => {\n    const isLabelHidden = /*#__PURE__*/React.isValidElement(slots.Label) && slots.Label.props.visuallyHidden;\n    return isChoiceInput || layout === 'horizontal' ? /*#__PURE__*/React.createElement(Box, {\n      ref: ref,\n      display: \"flex\",\n      alignItems: slots.LeadingVisual ? 'center' : undefined,\n      sx: sx\n    }, /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        '> input': {\n          marginLeft: 0,\n          marginRight: 0\n        }\n      }\n    }, /*#__PURE__*/React.isValidElement(InputComponent) && /*#__PURE__*/React.cloneElement(InputComponent, {\n      id,\n      disabled,\n      ['aria-describedby']: captionId\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && ![Checkbox, Radio].some(inputComponent => child.type === inputComponent))), slots.LeadingVisual && /*#__PURE__*/React.createElement(Box, {\n      color: disabled ? 'fg.muted' : 'fg.default',\n      sx: {\n        '> *': {\n          minWidth: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          minHeight: slots.Caption ? get('fontSizes.4') : get('fontSizes.2'),\n          fill: 'currentColor'\n        }\n      },\n      ml: 2\n    }, slots.LeadingVisual), /*#__PURE__*/React.isValidElement(slots.Label) && !slots.Label.props.visuallyHidden || slots.Caption ? /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      ml: 2\n    }, slots.Label, slots.Caption) : /*#__PURE__*/React.createElement(React.Fragment, null, slots.Label, slots.Caption)) : /*#__PURE__*/React.createElement(Box, {\n      ref: ref,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      sx: { ...(isLabelHidden ? {\n          '> *:not(label) + *': {\n            marginTop: 1\n          }\n        } : {\n          '> * + *': {\n            marginTop: 1\n          }\n        }),\n        ...sx\n      }\n    }, slots.Label, /*#__PURE__*/React.isValidElement(InputComponent) && /*#__PURE__*/React.cloneElement(InputComponent, {\n      id,\n      required,\n      disabled,\n      validationStatus,\n      ['aria-describedby']: [validationMessageId, captionId].filter(Boolean).join(' '),\n      ...InputComponent.props\n    }), React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && !expectedInputComponents.some(inputComponent => child.type === inputComponent)), validationChild && /*#__PURE__*/React.createElement(ValidationAnimationContainer, {\n      show: true\n    }, slots.Validation), slots.Caption);\n  });\n});\nFormControl.defaultProps = {\n  layout: 'vertical'\n};\nexport default Object.assign(FormControl, {\n  Caption: FormControlCaption,\n  Label: FormControlLabel,\n  LeadingVisual: FormControlLeadingVisual,\n  Validation: FormControlValidation\n});"]},"metadata":{},"sourceType":"module"}