{"ast":null,"code":"import React from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport defaultTheme from './theme';\nimport deepmerge from 'deepmerge';\nconst defaultColorMode = 'day';\nconst defaultDayScheme = 'light';\nconst defaultNightScheme = 'dark'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  setColorMode: () => null,\n  setDayScheme: () => null,\n  setNightScheme: () => null\n}); // inspired from __NEXT_DATA__, we use application/json to avoid CSRF policy with inline scripts\n\nconst getServerHandoff = () => {\n  try {\n    var _document$getElementB;\n\n    const serverData = (_document$getElementB = document.getElementById('__PRIMER_DATA__')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent;\n    if (serverData) return JSON.parse(serverData);\n  } catch (error) {// if document/element does not exist or JSON is invalid, supress error\n  }\n\n  return {};\n};\n\nexport const ThemeProvider = _ref8 => {\n  let {\n    children,\n    ...props\n  } = _ref8;\n\n  var _ref, _props$theme, _ref2, _props$colorMode, _ref3, _props$dayScheme, _ref4, _props$nightScheme; // Get fallback values from parent ThemeProvider (if exists)\n\n\n  const {\n    theme: fallbackTheme,\n    colorMode: fallbackColorMode,\n    dayScheme: fallbackDayScheme,\n    nightScheme: fallbackNightScheme\n  } = useTheme(); // Initialize state\n\n  const theme = (_ref = (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : fallbackTheme) !== null && _ref !== void 0 ? _ref : defaultTheme;\n  const {\n    resolvedServerColorMode\n  } = getServerHandoff();\n  const resolvedColorModePassthrough = React.useRef(resolvedServerColorMode);\n  const [colorMode, setColorMode] = React.useState((_ref2 = (_props$colorMode = props.colorMode) !== null && _props$colorMode !== void 0 ? _props$colorMode : fallbackColorMode) !== null && _ref2 !== void 0 ? _ref2 : defaultColorMode);\n  const [dayScheme, setDayScheme] = React.useState((_ref3 = (_props$dayScheme = props.dayScheme) !== null && _props$dayScheme !== void 0 ? _props$dayScheme : fallbackDayScheme) !== null && _ref3 !== void 0 ? _ref3 : defaultDayScheme);\n  const [nightScheme, setNightScheme] = React.useState((_ref4 = (_props$nightScheme = props.nightScheme) !== null && _props$nightScheme !== void 0 ? _props$nightScheme : fallbackNightScheme) !== null && _ref4 !== void 0 ? _ref4 : defaultNightScheme);\n  const systemColorMode = useSystemColorMode();\n  const resolvedColorMode = resolvedColorModePassthrough.current || resolveColorMode(colorMode, systemColorMode);\n  const colorScheme = chooseColorScheme(resolvedColorMode, dayScheme, nightScheme);\n  const {\n    resolvedTheme,\n    resolvedColorScheme\n  } = React.useMemo(() => applyColorScheme(theme, colorScheme), [theme, colorScheme]); // this effect will only run on client\n\n  React.useEffect(function updateColorModeAfterServerPassthrough() {\n    const resolvedColorModeOnClient = resolveColorMode(colorMode, systemColorMode);\n\n    if (resolvedColorModePassthrough.current) {\n      // if the resolved color mode passed on from the server is not the resolved color mode on client, change it!\n      if (resolvedColorModePassthrough.current !== resolvedColorModeOnClient) {\n        window.setTimeout(() => {\n          // override colorMode to whatever is resolved on the client to get a re-render\n          setColorMode(resolvedColorModeOnClient); // immediately after that, set the colorMode to what the user passed to respond to system color mode changes\n\n          setColorMode(colorMode);\n        });\n      }\n\n      resolvedColorModePassthrough.current = null;\n    }\n  }, [colorMode, systemColorMode]); // Update state if props change\n\n  React.useEffect(() => {\n    var _ref5, _props$colorMode2;\n\n    setColorMode((_ref5 = (_props$colorMode2 = props.colorMode) !== null && _props$colorMode2 !== void 0 ? _props$colorMode2 : fallbackColorMode) !== null && _ref5 !== void 0 ? _ref5 : defaultColorMode);\n  }, [props.colorMode, fallbackColorMode]);\n  React.useEffect(() => {\n    var _ref6, _props$dayScheme2;\n\n    setDayScheme((_ref6 = (_props$dayScheme2 = props.dayScheme) !== null && _props$dayScheme2 !== void 0 ? _props$dayScheme2 : fallbackDayScheme) !== null && _ref6 !== void 0 ? _ref6 : defaultDayScheme);\n  }, [props.dayScheme, fallbackDayScheme]);\n  React.useEffect(() => {\n    var _ref7, _props$nightScheme2;\n\n    setNightScheme((_ref7 = (_props$nightScheme2 = props.nightScheme) !== null && _props$nightScheme2 !== void 0 ? _props$nightScheme2 : fallbackNightScheme) !== null && _ref7 !== void 0 ? _ref7 : defaultNightScheme);\n  }, [props.nightScheme, fallbackNightScheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: resolvedTheme,\n      colorScheme,\n      colorMode,\n      resolvedColorMode,\n      resolvedColorScheme,\n      dayScheme,\n      nightScheme,\n      setColorMode,\n      setDayScheme,\n      setNightScheme\n    }\n  }, /*#__PURE__*/React.createElement(SCThemeProvider, {\n    theme: resolvedTheme\n  }, children, props.preventSSRMismatch ? /*#__PURE__*/React.createElement(\"script\", {\n    type: \"application/json\",\n    id: \"__PRIMER_DATA__\",\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        resolvedServerColorMode: resolvedColorMode\n      })\n    }\n  }) : null));\n};\nThemeProvider.displayName = \"ThemeProvider\";\nexport function useTheme() {\n  return React.useContext(ThemeContext);\n}\nexport function useColorSchemeVar(values, fallback) {\n  var _values$colorScheme;\n\n  const {\n    colorScheme = ''\n  } = useTheme();\n  return (_values$colorScheme = values[colorScheme]) !== null && _values$colorScheme !== void 0 ? _values$colorScheme : fallback;\n}\n\nfunction useSystemColorMode() {\n  const [systemColorMode, setSystemColorMode] = React.useState(getSystemColorMode);\n  React.useEffect(() => {\n    var _window, _window$matchMedia; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    const media = (_window = window) === null || _window === void 0 ? void 0 : (_window$matchMedia = _window.matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)');\n\n    function handleChange(event) {\n      const isNight = event.matches;\n      setSystemColorMode(isNight ? 'night' : 'day');\n    } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    if (media) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (media.addEventListener !== undefined) {\n        media.addEventListener('change', handleChange);\n        return function cleanup() {\n          media.removeEventListener('change', handleChange);\n        };\n      } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      else if (media.addListener !== undefined) {\n        media.addListener(handleChange);\n        return function cleanup() {\n          media.removeListener(handleChange);\n        };\n      }\n    }\n  }, []);\n  return systemColorMode;\n}\n\nfunction getSystemColorMode() {\n  var _window$matchMedia2, _window2, _window$matchMedia2$c; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n  if (typeof window !== 'undefined' && (_window$matchMedia2 = (_window2 = window).matchMedia) !== null && _window$matchMedia2 !== void 0 && (_window$matchMedia2$c = _window$matchMedia2.call(_window2, '(prefers-color-scheme: dark)')) !== null && _window$matchMedia2$c !== void 0 && _window$matchMedia2$c.matches) {\n    return 'night';\n  }\n\n  return 'day';\n}\n\nfunction resolveColorMode(colorMode, systemColorMode) {\n  switch (colorMode) {\n    case 'auto':\n      return systemColorMode;\n\n    default:\n      return colorMode;\n  }\n}\n\nfunction chooseColorScheme(colorMode, dayScheme, nightScheme) {\n  switch (colorMode) {\n    case 'day':\n      return dayScheme;\n\n    case 'night':\n      return nightScheme;\n  }\n}\n\nfunction applyColorScheme(theme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return {\n      resolvedTheme: theme,\n      resolvedColorScheme: undefined\n    };\n  }\n\n  if (!theme.colorSchemes[colorScheme]) {\n    // eslint-disable-next-line no-console\n    console.error(`\\`${colorScheme}\\` scheme not defined in \\`theme.colorSchemes\\``); // Apply the first defined color scheme\n\n    const defaultColorScheme = Object.keys(theme.colorSchemes)[0];\n    return {\n      resolvedTheme: deepmerge(theme, theme.colorSchemes[defaultColorScheme]),\n      resolvedColorScheme: defaultColorScheme\n    };\n  }\n\n  return {\n    resolvedTheme: deepmerge(theme, theme.colorSchemes[colorScheme]),\n    resolvedColorScheme: colorScheme\n  };\n}\n\nexport default ThemeProvider;","map":{"version":3,"sources":["/Users/steve/Documents/repos/notifications/node_modules/@primer/react/lib-esm/ThemeProvider.js"],"names":["React","ThemeProvider","SCThemeProvider","defaultTheme","deepmerge","defaultColorMode","defaultDayScheme","defaultNightScheme","ThemeContext","createContext","setColorMode","setDayScheme","setNightScheme","getServerHandoff","_document$getElementB","serverData","document","getElementById","textContent","JSON","parse","error","children","props","_ref","_props$theme","_ref2","_props$colorMode","_ref3","_props$dayScheme","_ref4","_props$nightScheme","theme","fallbackTheme","colorMode","fallbackColorMode","dayScheme","fallbackDayScheme","nightScheme","fallbackNightScheme","useTheme","resolvedServerColorMode","resolvedColorModePassthrough","useRef","useState","systemColorMode","useSystemColorMode","resolvedColorMode","current","resolveColorMode","colorScheme","chooseColorScheme","resolvedTheme","resolvedColorScheme","useMemo","applyColorScheme","useEffect","updateColorModeAfterServerPassthrough","resolvedColorModeOnClient","window","setTimeout","_ref5","_props$colorMode2","_ref6","_props$dayScheme2","_ref7","_props$nightScheme2","createElement","Provider","value","preventSSRMismatch","type","id","dangerouslySetInnerHTML","__html","stringify","displayName","useContext","useColorSchemeVar","values","fallback","_values$colorScheme","setSystemColorMode","getSystemColorMode","_window","_window$matchMedia","media","matchMedia","call","handleChange","event","isNight","matches","addEventListener","undefined","cleanup","removeEventListener","addListener","removeListener","_window$matchMedia2","_window2","_window$matchMedia2$c","colorSchemes","console","defaultColorScheme","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\nimport defaultTheme from './theme';\nimport deepmerge from 'deepmerge';\nconst defaultColorMode = 'day';\nconst defaultDayScheme = 'light';\nconst defaultNightScheme = 'dark'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  setColorMode: () => null,\n  setDayScheme: () => null,\n  setNightScheme: () => null\n}); // inspired from __NEXT_DATA__, we use application/json to avoid CSRF policy with inline scripts\n\nconst getServerHandoff = () => {\n  try {\n    var _document$getElementB;\n\n    const serverData = (_document$getElementB = document.getElementById('__PRIMER_DATA__')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent;\n    if (serverData) return JSON.parse(serverData);\n  } catch (error) {// if document/element does not exist or JSON is invalid, supress error\n  }\n\n  return {};\n};\n\nexport const ThemeProvider = ({\n  children,\n  ...props\n}) => {\n  var _ref, _props$theme, _ref2, _props$colorMode, _ref3, _props$dayScheme, _ref4, _props$nightScheme;\n\n  // Get fallback values from parent ThemeProvider (if exists)\n  const {\n    theme: fallbackTheme,\n    colorMode: fallbackColorMode,\n    dayScheme: fallbackDayScheme,\n    nightScheme: fallbackNightScheme\n  } = useTheme(); // Initialize state\n\n  const theme = (_ref = (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : fallbackTheme) !== null && _ref !== void 0 ? _ref : defaultTheme;\n  const {\n    resolvedServerColorMode\n  } = getServerHandoff();\n  const resolvedColorModePassthrough = React.useRef(resolvedServerColorMode);\n  const [colorMode, setColorMode] = React.useState((_ref2 = (_props$colorMode = props.colorMode) !== null && _props$colorMode !== void 0 ? _props$colorMode : fallbackColorMode) !== null && _ref2 !== void 0 ? _ref2 : defaultColorMode);\n  const [dayScheme, setDayScheme] = React.useState((_ref3 = (_props$dayScheme = props.dayScheme) !== null && _props$dayScheme !== void 0 ? _props$dayScheme : fallbackDayScheme) !== null && _ref3 !== void 0 ? _ref3 : defaultDayScheme);\n  const [nightScheme, setNightScheme] = React.useState((_ref4 = (_props$nightScheme = props.nightScheme) !== null && _props$nightScheme !== void 0 ? _props$nightScheme : fallbackNightScheme) !== null && _ref4 !== void 0 ? _ref4 : defaultNightScheme);\n  const systemColorMode = useSystemColorMode();\n  const resolvedColorMode = resolvedColorModePassthrough.current || resolveColorMode(colorMode, systemColorMode);\n  const colorScheme = chooseColorScheme(resolvedColorMode, dayScheme, nightScheme);\n  const {\n    resolvedTheme,\n    resolvedColorScheme\n  } = React.useMemo(() => applyColorScheme(theme, colorScheme), [theme, colorScheme]); // this effect will only run on client\n\n  React.useEffect(function updateColorModeAfterServerPassthrough() {\n    const resolvedColorModeOnClient = resolveColorMode(colorMode, systemColorMode);\n\n    if (resolvedColorModePassthrough.current) {\n      // if the resolved color mode passed on from the server is not the resolved color mode on client, change it!\n      if (resolvedColorModePassthrough.current !== resolvedColorModeOnClient) {\n        window.setTimeout(() => {\n          // override colorMode to whatever is resolved on the client to get a re-render\n          setColorMode(resolvedColorModeOnClient); // immediately after that, set the colorMode to what the user passed to respond to system color mode changes\n\n          setColorMode(colorMode);\n        });\n      }\n\n      resolvedColorModePassthrough.current = null;\n    }\n  }, [colorMode, systemColorMode]); // Update state if props change\n\n  React.useEffect(() => {\n    var _ref5, _props$colorMode2;\n\n    setColorMode((_ref5 = (_props$colorMode2 = props.colorMode) !== null && _props$colorMode2 !== void 0 ? _props$colorMode2 : fallbackColorMode) !== null && _ref5 !== void 0 ? _ref5 : defaultColorMode);\n  }, [props.colorMode, fallbackColorMode]);\n  React.useEffect(() => {\n    var _ref6, _props$dayScheme2;\n\n    setDayScheme((_ref6 = (_props$dayScheme2 = props.dayScheme) !== null && _props$dayScheme2 !== void 0 ? _props$dayScheme2 : fallbackDayScheme) !== null && _ref6 !== void 0 ? _ref6 : defaultDayScheme);\n  }, [props.dayScheme, fallbackDayScheme]);\n  React.useEffect(() => {\n    var _ref7, _props$nightScheme2;\n\n    setNightScheme((_ref7 = (_props$nightScheme2 = props.nightScheme) !== null && _props$nightScheme2 !== void 0 ? _props$nightScheme2 : fallbackNightScheme) !== null && _ref7 !== void 0 ? _ref7 : defaultNightScheme);\n  }, [props.nightScheme, fallbackNightScheme]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: resolvedTheme,\n      colorScheme,\n      colorMode,\n      resolvedColorMode,\n      resolvedColorScheme,\n      dayScheme,\n      nightScheme,\n      setColorMode,\n      setDayScheme,\n      setNightScheme\n    }\n  }, /*#__PURE__*/React.createElement(SCThemeProvider, {\n    theme: resolvedTheme\n  }, children, props.preventSSRMismatch ? /*#__PURE__*/React.createElement(\"script\", {\n    type: \"application/json\",\n    id: \"__PRIMER_DATA__\",\n    dangerouslySetInnerHTML: {\n      __html: JSON.stringify({\n        resolvedServerColorMode: resolvedColorMode\n      })\n    }\n  }) : null));\n};\nThemeProvider.displayName = \"ThemeProvider\";\nexport function useTheme() {\n  return React.useContext(ThemeContext);\n}\nexport function useColorSchemeVar(values, fallback) {\n  var _values$colorScheme;\n\n  const {\n    colorScheme = ''\n  } = useTheme();\n  return (_values$colorScheme = values[colorScheme]) !== null && _values$colorScheme !== void 0 ? _values$colorScheme : fallback;\n}\n\nfunction useSystemColorMode() {\n  const [systemColorMode, setSystemColorMode] = React.useState(getSystemColorMode);\n  React.useEffect(() => {\n    var _window, _window$matchMedia;\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const media = (_window = window) === null || _window === void 0 ? void 0 : (_window$matchMedia = _window.matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, '(prefers-color-scheme: dark)');\n\n    function handleChange(event) {\n      const isNight = event.matches;\n      setSystemColorMode(isNight ? 'night' : 'day');\n    } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    if (media) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (media.addEventListener !== undefined) {\n        media.addEventListener('change', handleChange);\n        return function cleanup() {\n          media.removeEventListener('change', handleChange);\n        };\n      } // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      else if (media.addListener !== undefined) {\n        media.addListener(handleChange);\n        return function cleanup() {\n          media.removeListener(handleChange);\n        };\n      }\n    }\n  }, []);\n  return systemColorMode;\n}\n\nfunction getSystemColorMode() {\n  var _window$matchMedia2, _window2, _window$matchMedia2$c;\n\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  if (typeof window !== 'undefined' && (_window$matchMedia2 = (_window2 = window).matchMedia) !== null && _window$matchMedia2 !== void 0 && (_window$matchMedia2$c = _window$matchMedia2.call(_window2, '(prefers-color-scheme: dark)')) !== null && _window$matchMedia2$c !== void 0 && _window$matchMedia2$c.matches) {\n    return 'night';\n  }\n\n  return 'day';\n}\n\nfunction resolveColorMode(colorMode, systemColorMode) {\n  switch (colorMode) {\n    case 'auto':\n      return systemColorMode;\n\n    default:\n      return colorMode;\n  }\n}\n\nfunction chooseColorScheme(colorMode, dayScheme, nightScheme) {\n  switch (colorMode) {\n    case 'day':\n      return dayScheme;\n\n    case 'night':\n      return nightScheme;\n  }\n}\n\nfunction applyColorScheme(theme, colorScheme) {\n  if (!theme.colorSchemes) {\n    return {\n      resolvedTheme: theme,\n      resolvedColorScheme: undefined\n    };\n  }\n\n  if (!theme.colorSchemes[colorScheme]) {\n    // eslint-disable-next-line no-console\n    console.error(`\\`${colorScheme}\\` scheme not defined in \\`theme.colorSchemes\\``); // Apply the first defined color scheme\n\n    const defaultColorScheme = Object.keys(theme.colorSchemes)[0];\n    return {\n      resolvedTheme: deepmerge(theme, theme.colorSchemes[defaultColorScheme]),\n      resolvedColorScheme: defaultColorScheme\n    };\n  }\n\n  return {\n    resolvedTheme: deepmerge(theme, theme.colorSchemes[colorScheme]),\n    resolvedColorScheme: colorScheme\n  };\n}\n\nexport default ThemeProvider;"]},"metadata":{},"sourceType":"module"}