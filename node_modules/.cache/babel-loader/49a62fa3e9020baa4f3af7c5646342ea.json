{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Documents/repos/github-notifications/src/ColorModeSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport { useTheme, ActionMenu, ActionList, Box } from '@primer/react';\nimport { SunIcon, MoonIcon } from '@primer/octicons-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorModeSwitcher() {\n  _s();\n\n  const {\n    setDayScheme,\n    setNightScheme,\n    colorScheme\n  } = useTheme();\n\n  const setScheme = schemeValue => {\n    setDayScheme(schemeValue);\n    setNightScheme(schemeValue);\n  };\n\n  const schemes = [{\n    name: 'Light',\n    value: 'light',\n    icon: SunIcon\n  }, {\n    name: 'Light colorblind',\n    value: 'light_colorblind',\n    icon: SunIcon\n  }, {\n    name: 'Dark',\n    value: 'dark',\n    icon: MoonIcon\n  }, {\n    name: 'Dark colorblind',\n    value: 'dark_colorblind',\n    icon: MoonIcon\n  }, {\n    name: 'Dark high contrast',\n    value: 'dark_high_contrast',\n    icon: MoonIcon\n  }, {\n    name: 'Dark Dimmed',\n    value: 'dark_dimmed',\n    icon: MoonIcon\n  }];\n  const current = schemes.find(scheme => scheme.value === colorScheme);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    p: 3,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      position: \"relative\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(ActionMenu, {\n        children: [/*#__PURE__*/_jsxDEV(ActionMenu.Button, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(current.icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"inline-block\",\n            ml: 2,\n            children: [' ', current.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActionMenu.Overlay, {\n          align: \"right\",\n          children: /*#__PURE__*/_jsxDEV(ActionList, {\n            showDividers: true,\n            children: /*#__PURE__*/_jsxDEV(ActionList.Group, {\n              selectionVariant: \"single\",\n              children: schemes.map(scheme => /*#__PURE__*/_jsxDEV(ActionList.Item, {\n                href: \"#\",\n                selected: scheme.value === colorScheme,\n                onClick: () => setScheme(scheme.value),\n                children: scheme.name\n              }, scheme.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorModeSwitcher, \"t4e9ky8Rc8GGhCYQdyMbU6M8y00=\", false, function () {\n  return [useTheme];\n});\n\n_c = ColorModeSwitcher;\nexport default ColorModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/src/ColorModeSwitcher.js"],"names":["useTheme","ActionMenu","ActionList","Box","SunIcon","MoonIcon","ColorModeSwitcher","setDayScheme","setNightScheme","colorScheme","setScheme","schemeValue","schemes","name","value","icon","current","find","scheme","map"],"mappings":"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","sourcesContent":["import { useTheme, ActionMenu, ActionList, Box } from '@primer/react'\nimport { SunIcon, MoonIcon } from '@primer/octicons-react'\n\nfunction ColorModeSwitcher() {\n    const { setDayScheme, setNightScheme, colorScheme } = useTheme()\n\n    const setScheme = (schemeValue) => {\n        setDayScheme(schemeValue)\n        setNightScheme(schemeValue)\n    }\n\n    const schemes = [\n        {\n            name: 'Light',\n            value: 'light',\n            icon: SunIcon,\n        },\n        {\n            name: 'Light colorblind',\n            value: 'light_colorblind',\n            icon: SunIcon,\n        },\n        {\n            name: 'Dark',\n            value: 'dark',\n            icon: MoonIcon,\n        },\n        {\n            name: 'Dark colorblind',\n            value: 'dark_colorblind',\n            icon: MoonIcon,\n        },\n        {\n            name: 'Dark high contrast',\n            value: 'dark_high_contrast',\n            icon: MoonIcon,\n        },\n        {\n            name: 'Dark Dimmed',\n            value: 'dark_dimmed',\n            icon: MoonIcon,\n        },\n    ]\n\n    const current = schemes.find((scheme) => scheme.value === colorScheme)\n\n    return (\n        <Box position=\"absolute\" top={0} right={0} p={3}>\n            <Box position=\"relative\" display=\"flex\" justifyContent=\"flex-end\">\n                <ActionMenu>\n                    <ActionMenu.Button size=\"small\">\n                        <current.icon />\n                        <Box display=\"inline-block\" ml={2}>\n                            {' '}\n                            {current.name}\n                        </Box>\n                    </ActionMenu.Button>\n                    <ActionMenu.Overlay align=\"right\">\n                        <ActionList showDividers>\n                            <ActionList.Group selectionVariant=\"single\">\n                                {schemes.map((scheme) => (\n                                    <ActionList.Item\n                                        key={scheme.value}\n                                        href=\"#\"\n                                        selected={scheme.value === colorScheme}\n                                        onClick={() => setScheme(scheme.value)}\n                                    >\n                                        {scheme.name}\n                                    </ActionList.Item>\n                                ))}\n                            </ActionList.Group>\n                        </ActionList>\n                    </ActionMenu.Overlay>\n                </ActionMenu>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorModeSwitcher\n"]},"metadata":{},"sourceType":"module"}