"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SettingsPage = exports.PullRequestPage = exports.Playground = void 0;

var _react = _interopRequireDefault(require("react"));

var _ = require("..");

var _NavList = require("../NavList");

var _Placeholder = require("../Placeholder");

var _PageLayout = require("./PageLayout");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const meta = {
  title: 'Layout/PageLayout',
  component: _PageLayout.PageLayout,
  parameters: {
    layout: 'fullscreen',
    controls: {
      expanded: true
    }
  }
};

const Playground = args => /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout, {
  containerWidth: args.containerWidth,
  padding: args.padding,
  rowGap: args.rowGap,
  columnGap: args.columnGap,
  sx: args.sx
}, args['Show header?'] ? /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Header, {
  divider: args['Header.divider'],
  dividerWhenNarrow: args['Header.dividerWhenNarrow']
}, /*#__PURE__*/_react.default.createElement(_Placeholder.Placeholder, {
  height: 64,
  label: "Header"
})) : null, /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Content, {
  width: args['Content.width']
}, /*#__PURE__*/_react.default.createElement(_Placeholder.Placeholder, {
  height: 400,
  label: "Content"
})), args['Show pane?'] ? /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Pane, {
  position: args['Pane.position'],
  positionWhenNarrow: args['Pane.positionWhenNarrow'],
  width: args['Pane.width'],
  divider: args['Pane.divider'],
  dividerWhenNarrow: args['Pane.dividerWhenNarrow']
}, /*#__PURE__*/_react.default.createElement(_Placeholder.Placeholder, {
  height: 200,
  label: "Pane"
})) : null, args['Show footer?'] ? /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Footer, {
  divider: args['Footer.divider'],
  dividerWhenNarrow: args['Footer.dividerWhenNarrow']
}, /*#__PURE__*/_react.default.createElement(_Placeholder.Placeholder, {
  height: 64,
  label: "Footer"
})) : null);

exports.Playground = Playground;
Playground.displayName = "Playground";
Playground.argTypes = {
  'Show header?': {
    type: 'boolean',
    defaultValue: true,
    table: {
      category: 'Header'
    }
  },
  'Header.divider': {
    type: {
      name: 'enum',
      value: ['none', 'line']
    },
    defaultValue: 'none',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Header',
      defaultValue: {
        summary: '"none"'
      }
    }
  },
  'Header.dividerWhenNarrow': {
    type: {
      name: 'enum',
      value: ['inherit', 'none', 'line', 'filled']
    },
    defaultValue: 'inherit',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Header',
      defaultValue: {
        summary: '"inherit"'
      }
    }
  },
  'Content.width': {
    type: {
      name: 'enum',
      value: ['full', 'medium', 'large', 'xlarge']
    },
    defaultValue: 'full',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Content',
      defaultValue: {
        summary: '"full"'
      }
    }
  },
  'Show pane?': {
    type: 'boolean',
    defaultValue: true,
    table: {
      category: 'Pane'
    }
  },
  'Pane.position': {
    type: {
      name: 'enum',
      value: ['start', 'end']
    },
    defaultValue: 'end',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Pane',
      defaultValue: {
        summary: '"end"'
      }
    }
  },
  'Pane.positionWhenNarrow': {
    type: {
      name: 'enum',
      value: ['inherit', 'start', 'end']
    },
    defaultValue: 'inherit',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Pane',
      defaultValue: {
        summary: '"inherit"'
      }
    }
  },
  'Pane.width': {
    type: {
      name: 'enum',
      value: ['small', 'medium', 'large']
    },
    defaultValue: 'medium',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Pane',
      defaultValue: {
        summary: '"medium"'
      }
    }
  },
  'Pane.divider': {
    type: {
      name: 'enum',
      value: ['none', 'line']
    },
    defaultValue: 'none',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Pane',
      defaultValue: {
        summary: '"none"'
      }
    }
  },
  'Pane.dividerWhenNarrow': {
    type: {
      name: 'enum',
      value: ['inherit', 'none', 'line', 'filled']
    },
    defaultValue: 'inherit',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Pane',
      defaultValue: {
        summary: '"inherit"'
      }
    }
  },
  'Show footer?': {
    type: 'boolean',
    defaultValue: true,
    table: {
      category: 'Footer'
    }
  },
  'Footer.divider': {
    type: {
      name: 'enum',
      value: ['none', 'line']
    },
    defaultValue: 'none',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Footer',
      defaultValue: {
        summary: '"none"'
      }
    }
  },
  'Footer.dividerWhenNarrow': {
    type: {
      name: 'enum',
      value: ['inherit', 'none', 'line', 'filled']
    },
    defaultValue: 'inherit',
    control: {
      type: 'radio'
    },
    table: {
      category: 'Footer',
      defaultValue: {
        summary: '"inherit"'
      }
    }
  }
};
Playground.args = {
  containerWidth: 'xlarge',
  padding: 'normal',
  rowGap: 'normal',
  columnGap: 'normal'
};

const PullRequestPage = () => /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout, null, /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Header, null, /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    display: 'flex',
    flexDirection: 'column',
    gap: 3
  }
}, /*#__PURE__*/_react.default.createElement(_.Box, null, /*#__PURE__*/_react.default.createElement(_.Heading, {
  as: "h1",
  sx: {
    fontWeight: 'normal'
  }
}, "Input validation styles ", /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    color: 'fg.muted',
    fontWeight: 'light'
  }
}, "#1831")), /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    display: 'flex',
    gap: 2,
    alignItems: 'center'
  }
}, /*#__PURE__*/_react.default.createElement(_.StateLabel, {
  status: "pullOpened"
}, "Open"), /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 1,
    color: 'fg.muted'
  }
}, /*#__PURE__*/_react.default.createElement(_.Link, {
  href: "#",
  muted: true,
  sx: {
    fontWeight: 'bold'
  }
}, "mperrotti"), ' ', "wants to merge 3 commits into ", /*#__PURE__*/_react.default.createElement(_.BranchName, {
  href: "#"
}, "main"), " from", ' ', /*#__PURE__*/_react.default.createElement(_.BranchName, {
  href: "#"
}, "mp/validation-styles")))), /*#__PURE__*/_react.default.createElement(_.TabNav, null, /*#__PURE__*/_react.default.createElement(_.TabNav.Link, {
  href: "#",
  selected: true
}, "Conversation"), /*#__PURE__*/_react.default.createElement(_.TabNav.Link, {
  href: "#"
}, "Commits"), /*#__PURE__*/_react.default.createElement(_.TabNav.Link, {
  href: "#"
}, "Checks"), /*#__PURE__*/_react.default.createElement(_.TabNav.Link, {
  href: "#"
}, "Files changed")))), /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Content, null, /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    border: '1px solid',
    borderRadius: 2,
    borderColor: 'border.default',
    height: 200
  }
}), /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    maxWidth: '100%',
    overflowX: 'auto',
    border: '1px solid',
    whiteSpace: 'nowrap',
    borderColor: 'border.default',
    mt: 3,
    p: 3,
    borderRadius: 2
  }
}, "This box has really long content. If it is too long, it will cause x overflow and should show a scrollbar. When this overflows, it should not break to overall page layout!")), /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Pane, null, /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    display: 'flex',
    flexDirection: 'column',
    gap: 3
  }
}, /*#__PURE__*/_react.default.createElement(_.Box, null, /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 0,
    fontWeight: 'bold',
    display: 'block',
    color: 'fg.muted'
  }
}, "Assignees"), /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 0,
    color: 'fg.muted',
    lineHeight: 'condensed'
  }
}, "No one \u2013", ' ', /*#__PURE__*/_react.default.createElement(_.Link, {
  href: "#",
  muted: true
}, "assign yourself"))), /*#__PURE__*/_react.default.createElement(_.Box, {
  role: "separator",
  sx: {
    width: '100%',
    height: 1,
    backgroundColor: 'border.default'
  }
}), /*#__PURE__*/_react.default.createElement(_.Box, null, /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 0,
    fontWeight: 'bold',
    display: 'block',
    color: 'fg.muted'
  }
}, "Labels"), /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 0,
    color: 'fg.muted',
    lineHeight: 'condensed'
  }
}, "None yet")))));

exports.PullRequestPage = PullRequestPage;
PullRequestPage.displayName = "PullRequestPage";

const SettingsPage = () => /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout, null, /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Pane, {
  position: "start"
}, /*#__PURE__*/_react.default.createElement(_NavList.NavList, {
  "aria-label": "main"
}, /*#__PURE__*/_react.default.createElement(_NavList.NavList.Item, {
  href: "#"
}, "Profile"), /*#__PURE__*/_react.default.createElement(_NavList.NavList.Item, {
  href: "#",
  "aria-current": "page"
}, "Account"), /*#__PURE__*/_react.default.createElement(_NavList.NavList.Item, {
  href: "#"
}, "Emails"), /*#__PURE__*/_react.default.createElement(_NavList.NavList.Item, {
  href: "#"
}, "Notifications"))), /*#__PURE__*/_react.default.createElement(_PageLayout.PageLayout.Content, null, /*#__PURE__*/_react.default.createElement(_.Heading, {
  as: "h2",
  sx: {
    fontSize: 4,
    fontWeight: 'normal',
    color: 'danger.fg',
    mb: 2
  }
}, "Danger zone"), /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    border: '1px solid',
    borderColor: 'danger.emphasis',
    borderRadius: 2,
    p: 3,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: 3
  }
}, /*#__PURE__*/_react.default.createElement(_.Box, {
  sx: {
    display: 'grid',
    gap: 1
  }
}, /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 1,
    fontWeight: 'bold',
    color: 'danger.fg'
  }
}, "Delete account"), /*#__PURE__*/_react.default.createElement(_.Text, {
  sx: {
    fontSize: 1,
    color: 'fg.muted'
  }
}, "Are you sure you don't want to just downgrade your account to a free account? We won't charge your credit card anymore.")), /*#__PURE__*/_react.default.createElement(_.Button, {
  variant: "danger"
}, "Delete account"))));

exports.SettingsPage = SettingsPage;
SettingsPage.displayName = "SettingsPage";
// TODO: discussions page example
var _default = meta;
exports.default = _default;