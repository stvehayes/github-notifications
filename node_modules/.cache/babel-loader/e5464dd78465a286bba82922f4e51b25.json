{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n/* eslint-disable no-use-before-define */\n\n/**\n * @module eventHandlers\n *\n */\n\n\nimport domHelpers from './lib/dom_helpers';\nimport listeners from './lib/listeners';\nimport * as store from './store';\n/**\n * private\n *\n */\n\n/**\n * _onClick\n *\n * @access private\n * @param {object} event The click event object\n * @param {object} event.target The DOM node from the click event\n */\n\nexport function _onClick(_ref) {\n  var target = _ref.target;\n  store.activate([].concat(_toConsumableArray(store.getInstances())).reduce(domHelpers.findContainerNodes(target), []).sort(domHelpers.sortByDOMPosition).map(function (item) {\n    return item.instance;\n  }));\n}\n/**\n * _onKeyDown: The keydown event callback\n *\n * @access private\n * @param {object} event The keydown event object\n * @param {number} event.which The key code (which) received from the keydown event\n */\n\nexport function _onKeyDown(event) {\n  var forceConsider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (forceConsider || _shouldConsider(event)) {\n    var _ref2 = store.findBindingForEvent(event) || {},\n        fn = _ref2.fn,\n        instance = _ref2.instance;\n\n    if (fn) {\n      fn.call(instance, event);\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * _shouldConsider: Conditions for proceeding with key event handling\n *\n * @access private\n * @param {object} event The keydown event object\n * @param {object} event.target The node origin of the event\n * @return {boolean} Whether to continue procesing the keydown event\n */\n\nexport function _shouldConsider(_ref3) {\n  var ctrlKey = _ref3.ctrlKey,\n      target = _ref3.target;\n  return ctrlKey || !~['INPUT', 'SELECT', 'TEXTAREA'].indexOf(target.tagName) && (!target.getAttribute || target.getAttribute('role') !== 'textbox');\n}\n/**\n * public\n *\n */\n\n/**\n * onMount\n *\n * @access public\n */\n\nfunction onMount(instance) {\n  store.activate(instance);\n  listeners.bindKeys(_onKeyDown);\n  listeners.bindClicks(_onClick);\n  domHelpers.bindFocusables(instance, store.activate);\n}\n/**\n * onUnmount\n *\n * @access public\n */\n\n\nfunction onUnmount(instance) {\n  store.deleteInstance(instance);\n\n  if (store.isEmpty()) {\n    listeners.unbindClicks(_onClick);\n    listeners.unbindKeys(_onKeyDown);\n  }\n}\n\nexport { onMount, onUnmount };","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/react-keydown/es/event_handlers.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","domHelpers","listeners","store","_onClick","_ref","target","activate","concat","getInstances","reduce","findContainerNodes","sort","sortByDOMPosition","map","item","instance","_onKeyDown","event","forceConsider","arguments","undefined","_shouldConsider","_ref2","findBindingForEvent","fn","call","_ref3","ctrlKey","indexOf","tagName","getAttribute","onMount","bindKeys","bindClicks","bindFocusables","onUnmount","deleteInstance","isEmpty","unbindClicks","unbindKeys"],"mappings":"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","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* eslint-disable no-use-before-define */\n/**\n * @module eventHandlers\n *\n */\nimport domHelpers from './lib/dom_helpers';\nimport listeners from './lib/listeners';\nimport * as store from './store';\n\n/**\n * private\n *\n */\n\n/**\n * _onClick\n *\n * @access private\n * @param {object} event The click event object\n * @param {object} event.target The DOM node from the click event\n */\nexport function _onClick(_ref) {\n  var target = _ref.target;\n\n  store.activate([].concat(_toConsumableArray(store.getInstances())).reduce(domHelpers.findContainerNodes(target), []).sort(domHelpers.sortByDOMPosition).map(function (item) {\n    return item.instance;\n  }));\n}\n\n/**\n * _onKeyDown: The keydown event callback\n *\n * @access private\n * @param {object} event The keydown event object\n * @param {number} event.which The key code (which) received from the keydown event\n */\nexport function _onKeyDown(event) {\n  var forceConsider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (forceConsider || _shouldConsider(event)) {\n    var _ref2 = store.findBindingForEvent(event) || {},\n        fn = _ref2.fn,\n        instance = _ref2.instance;\n\n    if (fn) {\n      fn.call(instance, event);\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * _shouldConsider: Conditions for proceeding with key event handling\n *\n * @access private\n * @param {object} event The keydown event object\n * @param {object} event.target The node origin of the event\n * @return {boolean} Whether to continue procesing the keydown event\n */\nexport function _shouldConsider(_ref3) {\n  var ctrlKey = _ref3.ctrlKey,\n      target = _ref3.target;\n\n  return ctrlKey || !~['INPUT', 'SELECT', 'TEXTAREA'].indexOf(target.tagName) && (!target.getAttribute || target.getAttribute('role') !== 'textbox');\n}\n\n/**\n * public\n *\n */\n\n/**\n * onMount\n *\n * @access public\n */\nfunction onMount(instance) {\n  store.activate(instance);\n  listeners.bindKeys(_onKeyDown);\n  listeners.bindClicks(_onClick);\n  domHelpers.bindFocusables(instance, store.activate);\n}\n\n/**\n * onUnmount\n *\n * @access public\n */\nfunction onUnmount(instance) {\n  store.deleteInstance(instance);\n  if (store.isEmpty()) {\n    listeners.unbindClicks(_onClick);\n    listeners.unbindKeys(_onKeyDown);\n  }\n}\n\nexport { onMount, onUnmount };"]},"metadata":{},"sourceType":"module"}