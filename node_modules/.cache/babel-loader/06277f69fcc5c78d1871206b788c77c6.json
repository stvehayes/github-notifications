{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport TextInputInnerVisualSlot from './_TextInputInnerVisualSlot';\nimport { useProvidedRefOrCreate } from './hooks';\nimport TextInputWrapper from './_TextInputWrapper';\nimport UnstyledTextInput from './_UnstyledTextInput';\nimport TextInputAction from './_TextInputInnerAction'; // using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input\n\nconst TextInput = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    icon: IconComponent,\n    leadingVisual: LeadingVisual,\n    trailingVisual: TrailingVisual,\n    trailingAction,\n    block,\n    className,\n    contrast,\n    disabled,\n    loading,\n    loaderPosition,\n    monospace,\n    validationStatus,\n    sx: sxProp,\n    size: sizeProp,\n    onFocus,\n    onBlur,\n    // start deprecated props\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    // end deprecated props\n    ...inputProps\n  } = _ref;\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const inputRef = useProvidedRefOrCreate(ref); // this class is necessary to style FilterSearch, plz no touchy!\n\n  const wrapperClasses = classnames(className, 'TextInput-wrapper');\n  const showLeadingLoadingIndicator = loading && (loaderPosition === 'leading' || Boolean(LeadingVisual && loaderPosition !== 'trailing'));\n  const showTrailingLoadingIndicator = loading && (loaderPosition === 'trailing' || Boolean(loaderPosition === 'auto' && !LeadingVisual));\n\n  const focusInput = () => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const handleInputFocus = useCallback(e => {\n    setIsInputFocused(true);\n    onFocus && onFocus(e);\n  }, [onFocus]);\n  const handleInputBlur = useCallback(e => {\n    setIsInputFocused(false);\n    onBlur && onBlur(e);\n  }, [onBlur]);\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    block: block,\n    className: wrapperClasses,\n    validationStatus: validationStatus,\n    contrast: contrast,\n    disabled: disabled,\n    monospace: monospace,\n    sx: sxProp,\n    size: sizeProp,\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    hasLeadingVisual: Boolean(LeadingVisual || showLeadingLoadingIndicator),\n    hasTrailingVisual: Boolean(TrailingVisual || showTrailingLoadingIndicator),\n    hasTrailingAction: Boolean(trailingAction),\n    isInputFocused: isInputFocused,\n    onClick: focusInput,\n    \"aria-live\": \"polite\",\n    \"aria-busy\": Boolean(loading)\n  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {\n    className: \"TextInput-icon\"\n  }), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"leading\",\n    showLoadingIndicator: showLeadingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({\n    ref: inputRef,\n    disabled: disabled,\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur\n  }, inputProps, {\n    \"data-component\": \"input\"\n  })), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"trailing\",\n    showLoadingIndicator: showTrailingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual), trailingAction);\n});\nTextInput.defaultProps = {\n  type: 'text',\n  loaderPosition: 'auto'\n};\nTextInput.displayName = 'TextInput';\nexport default Object.assign(TextInput, {\n  Action: TextInputAction\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/TextInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useCallback","useState","classnames","TextInputInnerVisualSlot","useProvidedRefOrCreate","TextInputWrapper","UnstyledTextInput","TextInputAction","TextInput","forwardRef","ref","icon","IconComponent","leadingVisual","LeadingVisual","trailingVisual","TrailingVisual","trailingAction","block","className","contrast","disabled","loading","loaderPosition","monospace","validationStatus","sx","sxProp","size","sizeProp","onFocus","onBlur","width","widthProp","minWidth","minWidthProp","maxWidth","maxWidthProp","variant","variantProp","inputProps","isInputFocused","setIsInputFocused","inputRef","wrapperClasses","showLeadingLoadingIndicator","Boolean","showTrailingLoadingIndicator","focusInput","_inputRef$current","current","focus","handleInputFocus","e","handleInputBlur","createElement","hasLeadingVisual","hasTrailingVisual","hasTrailingAction","onClick","visualPosition","showLoadingIndicator","hasLoadingIndicator","defaultProps","type","displayName","Action"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useState } from 'react';\nimport classnames from 'classnames';\nimport TextInputInnerVisualSlot from './_TextInputInnerVisualSlot';\nimport { useProvidedRefOrCreate } from './hooks';\nimport TextInputWrapper from './_TextInputWrapper';\nimport UnstyledTextInput from './_UnstyledTextInput';\nimport TextInputAction from './_TextInputInnerAction';\n// using forwardRef is important so that other components (ex. SelectMenu) can autofocus the input\nconst TextInput = /*#__PURE__*/React.forwardRef(({\n  icon: IconComponent,\n  leadingVisual: LeadingVisual,\n  trailingVisual: TrailingVisual,\n  trailingAction,\n  block,\n  className,\n  contrast,\n  disabled,\n  loading,\n  loaderPosition,\n  monospace,\n  validationStatus,\n  sx: sxProp,\n  size: sizeProp,\n  onFocus,\n  onBlur,\n  // start deprecated props\n  width: widthProp,\n  minWidth: minWidthProp,\n  maxWidth: maxWidthProp,\n  variant: variantProp,\n  // end deprecated props\n  ...inputProps\n}, ref) => {\n  const [isInputFocused, setIsInputFocused] = useState(false);\n  const inputRef = useProvidedRefOrCreate(ref); // this class is necessary to style FilterSearch, plz no touchy!\n\n  const wrapperClasses = classnames(className, 'TextInput-wrapper');\n  const showLeadingLoadingIndicator = loading && (loaderPosition === 'leading' || Boolean(LeadingVisual && loaderPosition !== 'trailing'));\n  const showTrailingLoadingIndicator = loading && (loaderPosition === 'trailing' || Boolean(loaderPosition === 'auto' && !LeadingVisual));\n\n  const focusInput = () => {\n    var _inputRef$current;\n\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const handleInputFocus = useCallback(e => {\n    setIsInputFocused(true);\n    onFocus && onFocus(e);\n  }, [onFocus]);\n  const handleInputBlur = useCallback(e => {\n    setIsInputFocused(false);\n    onBlur && onBlur(e);\n  }, [onBlur]);\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    block: block,\n    className: wrapperClasses,\n    validationStatus: validationStatus,\n    contrast: contrast,\n    disabled: disabled,\n    monospace: monospace,\n    sx: sxProp,\n    size: sizeProp,\n    width: widthProp,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    variant: variantProp,\n    hasLeadingVisual: Boolean(LeadingVisual || showLeadingLoadingIndicator),\n    hasTrailingVisual: Boolean(TrailingVisual || showTrailingLoadingIndicator),\n    hasTrailingAction: Boolean(trailingAction),\n    isInputFocused: isInputFocused,\n    onClick: focusInput,\n    \"aria-live\": \"polite\",\n    \"aria-busy\": Boolean(loading)\n  }, IconComponent && /*#__PURE__*/React.createElement(IconComponent, {\n    className: \"TextInput-icon\"\n  }), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"leading\",\n    showLoadingIndicator: showLeadingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof LeadingVisual === 'function' ? /*#__PURE__*/React.createElement(LeadingVisual, null) : LeadingVisual), /*#__PURE__*/React.createElement(UnstyledTextInput, _extends({\n    ref: inputRef,\n    disabled: disabled,\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur\n  }, inputProps, {\n    \"data-component\": \"input\"\n  })), /*#__PURE__*/React.createElement(TextInputInnerVisualSlot, {\n    visualPosition: \"trailing\",\n    showLoadingIndicator: showTrailingLoadingIndicator,\n    hasLoadingIndicator: typeof loading === 'boolean'\n  }, typeof TrailingVisual === 'function' ? /*#__PURE__*/React.createElement(TrailingVisual, null) : TrailingVisual), trailingAction);\n});\nTextInput.defaultProps = {\n  type: 'text',\n  loaderPosition: 'auto'\n};\nTextInput.displayName = 'TextInput';\nexport default Object.assign(TextInput, {\n  Action: TextInputAction\n});"]},"metadata":{},"sourceType":"module"}