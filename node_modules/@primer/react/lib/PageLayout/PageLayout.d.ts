import React from 'react';
import { SxProp } from '../sx';
declare const SPACING_MAP: {
    none: number;
    condensed: number;
    normal: (number | null)[];
};
export declare type PageLayoutProps = {
    /** The maximum width of the page container */
    containerWidth?: keyof typeof containerWidths;
    /** The spacing between the outer edges of the page container and the viewport */
    padding?: keyof typeof SPACING_MAP;
    rowGap?: keyof typeof SPACING_MAP;
    columnGap?: keyof typeof SPACING_MAP;
} & SxProp;
declare const containerWidths: {
    full: string;
    medium: string;
    large: string;
    xlarge: string;
};
export declare type PageLayoutHeaderProps = {
    divider?: 'none' | 'line';
    dividerWhenNarrow?: 'inherit' | 'none' | 'line' | 'filled';
} & SxProp;
export declare type PageLayoutContentProps = {
    width?: keyof typeof contentWidths;
} & SxProp;
declare const contentWidths: {
    full: string;
    medium: string;
    large: string;
    xlarge: string;
};
export declare type PageLayoutPaneProps = {
    position?: keyof typeof panePositions;
    positionWhenNarrow?: 'inherit' | keyof typeof panePositions;
    width?: keyof typeof paneWidths;
    divider?: 'none' | 'line';
    dividerWhenNarrow?: 'inherit' | 'none' | 'line' | 'filled';
} & SxProp;
declare const panePositions: {
    start: number;
    end: number;
};
declare const paneWidths: {
    small: (string | null)[];
    medium: (string | null)[];
    large: (string | null)[];
};
export declare type PageLayoutFooterProps = {
    divider?: 'none' | 'line';
    dividerWhenNarrow?: 'inherit' | 'none' | 'line' | 'filled';
} & SxProp;
export declare const PageLayout: React.FC<PageLayoutProps> & {
    Header: React.FC<PageLayoutHeaderProps>;
    Content: React.FC<PageLayoutContentProps>;
    Pane: React.FC<PageLayoutPaneProps>;
    Footer: React.FC<PageLayoutFooterProps>;
};
export {};
