{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport sx, { merge } from '../sx';\nimport { ActionListContainerContext } from './ActionListContainerContext';\nexport const ListContext = /*#__PURE__*/React.createContext({});\nconst ListBox = styled.ul.withConfig({\n  displayName: \"List__ListBox\",\n  componentId: \"sc-1x7olzq-0\"\n})(sx);\nexport const List = /*#__PURE__*/React.forwardRef((_ref, forwardedRef) => {\n  let {\n    variant = 'inset',\n    selectionVariant,\n    showDividers = false,\n    role,\n    sx: sxProp = {},\n    ...props\n  } = _ref;\n  const styles = {\n    margin: 0,\n    paddingInlineStart: 0,\n    // reset ul styles\n    paddingY: variant === 'inset' ? 2 : 0\n  };\n  /** if list is inside a Menu, it will get a role from the Menu */\n\n  const {\n    listRole,\n    listLabelledBy,\n    selectionVariant: containerSelectionVariant // TODO: Remove after DropdownMenu2 deprecation\n\n  } = React.useContext(ActionListContainerContext);\n  return /*#__PURE__*/React.createElement(ListBox, _extends({\n    sx: merge(styles, sxProp),\n    role: role || listRole,\n    \"aria-labelledby\": listLabelledBy\n  }, props, {\n    ref: forwardedRef\n  }), /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      variant,\n      selectionVariant: selectionVariant || containerSelectionVariant,\n      showDividers,\n      role: role || listRole\n    }\n  }, props.children));\n});\nList.displayName = 'ActionList';","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/ActionList/List.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","styled","sx","merge","ActionListContainerContext","ListContext","createContext","ListBox","ul","withConfig","displayName","componentId","List","forwardRef","forwardedRef","variant","selectionVariant","showDividers","role","sxProp","props","styles","margin","paddingInlineStart","paddingY","listRole","listLabelledBy","containerSelectionVariant","useContext","createElement","ref","Provider","value","children"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,OAAOQ,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,IAAaC,KAAb,QAA0B,OAA1B;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,OAAO,MAAMC,WAAW,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoB,EAApB,CAAjC;AACP,MAAMC,OAAO,GAAGN,MAAM,CAACO,EAAP,CAAUC,UAAV,CAAqB;AACnCC,EAAAA,WAAW,EAAE,eADsB;AAEnCC,EAAAA,WAAW,EAAE;AAFsB,CAArB,EAGbT,EAHa,CAAhB;AAIA,OAAO,MAAMU,IAAI,GAAG,aAAaZ,KAAK,CAACa,UAAN,CAAiB,OAO/CC,YAP+C,KAO9B;AAAA,MAP+B;AACjDC,IAAAA,OAAO,GAAG,OADuC;AAEjDC,IAAAA,gBAFiD;AAGjDC,IAAAA,YAAY,GAAG,KAHkC;AAIjDC,IAAAA,IAJiD;AAKjDhB,IAAAA,EAAE,EAAEiB,MAAM,GAAG,EALoC;AAMjD,OAAGC;AAN8C,GAO/B;AAClB,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,kBAAkB,EAAE,CAFP;AAGb;AACAC,IAAAA,QAAQ,EAAET,OAAO,KAAK,OAAZ,GAAsB,CAAtB,GAA0B;AAJvB,GAAf;AAMA;;AAEA,QAAM;AACJU,IAAAA,QADI;AAEJC,IAAAA,cAFI;AAGJV,IAAAA,gBAAgB,EAAEW,yBAHd,CAGwC;;AAHxC,MAKF3B,KAAK,CAAC4B,UAAN,CAAiBxB,0BAAjB,CALJ;AAMA,SAAO,aAAaJ,KAAK,CAAC6B,aAAN,CAAoBtB,OAApB,EAA6BpB,QAAQ,CAAC;AACxDe,IAAAA,EAAE,EAAEC,KAAK,CAACkB,MAAD,EAASF,MAAT,CAD+C;AAExDD,IAAAA,IAAI,EAAEA,IAAI,IAAIO,QAF0C;AAGxD,uBAAmBC;AAHqC,GAAD,EAItDN,KAJsD,EAI/C;AACRU,IAAAA,GAAG,EAAEhB;AADG,GAJ+C,CAArC,EAMhB,aAAad,KAAK,CAAC6B,aAAN,CAAoBxB,WAAW,CAAC0B,QAAhC,EAA0C;AACzDC,IAAAA,KAAK,EAAE;AACLjB,MAAAA,OADK;AAELC,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAIW,yBAFjC;AAGLV,MAAAA,YAHK;AAILC,MAAAA,IAAI,EAAEA,IAAI,IAAIO;AAJT;AADkD,GAA1C,EAOdL,KAAK,CAACa,QAPQ,CANG,CAApB;AAcD,CApCgC,CAA1B;AAqCPrB,IAAI,CAACF,WAAL,GAAmB,YAAnB","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport sx, { merge } from '../sx';\nimport { ActionListContainerContext } from './ActionListContainerContext';\nexport const ListContext = /*#__PURE__*/React.createContext({});\nconst ListBox = styled.ul.withConfig({\n  displayName: \"List__ListBox\",\n  componentId: \"sc-1x7olzq-0\"\n})(sx);\nexport const List = /*#__PURE__*/React.forwardRef(({\n  variant = 'inset',\n  selectionVariant,\n  showDividers = false,\n  role,\n  sx: sxProp = {},\n  ...props\n}, forwardedRef) => {\n  const styles = {\n    margin: 0,\n    paddingInlineStart: 0,\n    // reset ul styles\n    paddingY: variant === 'inset' ? 2 : 0\n  };\n  /** if list is inside a Menu, it will get a role from the Menu */\n\n  const {\n    listRole,\n    listLabelledBy,\n    selectionVariant: containerSelectionVariant // TODO: Remove after DropdownMenu2 deprecation\n\n  } = React.useContext(ActionListContainerContext);\n  return /*#__PURE__*/React.createElement(ListBox, _extends({\n    sx: merge(styles, sxProp),\n    role: role || listRole,\n    \"aria-labelledby\": listLabelledBy\n  }, props, {\n    ref: forwardedRef\n  }), /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      variant,\n      selectionVariant: selectionVariant || containerSelectionVariant,\n      showDividers,\n      role: role || listRole\n    }\n  }, props.children));\n});\nList.displayName = 'ActionList';"]},"metadata":{},"sourceType":"module"}