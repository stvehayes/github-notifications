"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DisabledButton = exports.blockButton = exports.caretButton = exports.WatchIconButton = exports.WatchCounterButton = exports.iconButton = exports.iconBeforeButton = exports.invisibleButton = exports.dangerButton = exports.primaryButton = exports.defaultButton = exports.default = void 0;

var _octiconsReact = require("@primer/octicons-react");

var _react = _interopRequireWildcard(require("react"));

var _ = require(".");

var _2 = require("..");

var _Box = _interopRequireDefault(require("../Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = {
  title: 'Composite components/Button',
  decorators: [Story => {
    return /*#__PURE__*/_react.default.createElement(_2.ThemeProvider, null, /*#__PURE__*/_react.default.createElement(_2.BaseStyles, null, /*#__PURE__*/_react.default.createElement(Story, null)));
  }],
  argTypes: {
    size: {
      control: {
        type: 'radio',
        options: ['small', 'medium', 'large']
      }
    },
    disabled: {
      control: {
        type: 'boolean',
        default: false
      }
    }
  }
};
exports.default = _default;

const defaultButton = args => {
  return /*#__PURE__*/_react.default.createElement(_.Button, args, "Default");
};

exports.defaultButton = defaultButton;
defaultButton.displayName = "defaultButton";

const primaryButton = args => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({}, args, {
    variant: "primary"
  }), "Primary");
};

exports.primaryButton = primaryButton;
primaryButton.displayName = "primaryButton";

const dangerButton = args => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({}, args, {
    variant: "danger"
  }), "Danger");
};

exports.dangerButton = dangerButton;
dangerButton.displayName = "dangerButton";

const invisibleButton = args => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({}, args, {
    variant: "invisible"
  }), "Invisible");
};

exports.invisibleButton = invisibleButton;
invisibleButton.displayName = "invisibleButton";

const iconBeforeButton = args => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    leadingIcon: _octiconsReact.SearchIcon
  }, args), "Before");
};

exports.iconBeforeButton = iconBeforeButton;
iconBeforeButton.displayName = "iconBeforeButton";

const iconButton = ({ ...args
}) => {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    icon: _octiconsReact.XIcon,
    "aria-label": "Close"
  }, args))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    icon: _octiconsReact.XIcon,
    "aria-label": "Close"
  }, args, {
    variant: "invisible",
    sx: {
      mt: 2
    }
  }))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    icon: _octiconsReact.XIcon,
    "aria-label": "Close"
  }, args, {
    variant: "danger"
  }))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    icon: _octiconsReact.XIcon,
    "aria-label": "Close"
  }, args, {
    variant: "primary"
  }))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    icon: _octiconsReact.XIcon,
    "aria-label": "Close"
  }, args, {
    variant: "outline"
  }))));
};

exports.iconButton = iconButton;

const WatchCounterButton = ({ ...args
}) => {
  const [count, setCount] = (0, _react.useState)(0);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setCount(count + 1)
  }, args), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setCount(count + 1)
  }, args, {
    variant: "primary"
  }), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setCount(count + 1)
  }, args, {
    variant: "invisible"
  }), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setCount(count + 1)
  }, args, {
    variant: "danger"
  }), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setCount(count + 1)
  }, args, {
    variant: "outline"
  }), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))));
};

exports.WatchCounterButton = WatchCounterButton;

const WatchIconButton = ({ ...args
}) => {
  const [watching, setWatching] = (0, _react.useState)(false);
  const icon = watching ? _octiconsReact.EyeClosedIcon : () => /*#__PURE__*/_react.default.createElement(_octiconsReact.EyeIcon, null);
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    onClick: () => setWatching(!watching),
    trailingIcon: icon
  }, args), "Watch");
};

exports.WatchIconButton = WatchIconButton;
WatchIconButton.displayName = "WatchIconButton";

const caretButton = ({ ...args
}) => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    trailingIcon: _octiconsReact.TriangleDownIcon
  }, args), "Dropdown");
};

exports.caretButton = caretButton;
caretButton.displayName = "caretButton";

const blockButton = ({ ...args
}) => {
  return /*#__PURE__*/_react.default.createElement(_.Button, _extends({}, args, {
    sx: {
      width: '100%'
    }
  }), "Block");
};

exports.blockButton = blockButton;
blockButton.displayName = "blockButton";

const DisabledButton = ({ ...args
}) => {
  const [count, setCount] = (0, _react.useState)(0);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true,
    onClick: () => setCount(count + 1)
  }, args), "Watch", /*#__PURE__*/_react.default.createElement(_.Button.Counter, null, count))), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true
  }, args), "Disabled")), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true,
    variant: "danger"
  }, args), "Disabled")), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true,
    variant: "invisible"
  }, args), "Disabled")), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true,
    variant: "primary"
  }, args), "Disabled")), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.Button, _extends({
    disabled: true,
    variant: "outline"
  }, args), "Disabled")), /*#__PURE__*/_react.default.createElement(_Box.default, {
    mb: 2
  }, /*#__PURE__*/_react.default.createElement(_.IconButton, _extends({
    disabled: true,
    icon: () => /*#__PURE__*/_react.default.createElement(_octiconsReact.XIcon, null),
    "aria-label": "Close"
  }, args))));
}; // type ReactRouterLikeLinkProps = {to: string; children: React.ReactNode}
// const ReactRouterLikeLink = forwardRef<HTMLAnchorElement, ReactRouterLikeLinkProps>(
//   ({to, ...props}: {to: string; children: React.ReactNode}, ref) => {
//     // eslint-disable-next-line jsx-a11y/anchor-has-content
//     return <a ref={ref} href={to} {...props} />
//   }
// )
// export const linkButton = ({...args}: ButtonProps) => {
//   return (
//     <>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" variant="danger" {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" variant="primary" {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" variant="outline" {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" variant="invisible" {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton href="https://primer.style/" variant="primary" trailingIcon={TriangleRightIcon} {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//       <Box mb={2} display="flex">
//         <LinkButton to="/dummy" as={ReactRouterLikeLink} variant="primary" trailingIcon={TriangleRightIcon} {...args}>
//           Link to Primer
//         </LinkButton>
//       </Box>
//     </>
//   )
// }


exports.DisabledButton = DisabledButton;