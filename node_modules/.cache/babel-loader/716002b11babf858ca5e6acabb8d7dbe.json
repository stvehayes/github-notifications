{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants';\nimport { defaultTokenSize, tokenSizes } from './TokenBase';\nimport Token from './Token';\nimport { Avatar } from '..'; // TODO: update props to only accept 'large' and 'xlarge' on the next breaking change\n\nconst AvatarContainer = styled.span.withConfig({\n  displayName: \"AvatarToken__AvatarContainer\",\n  componentId: \"sc-62sih1-0\"\n})([\"--spacing:calc(\", \" * 2);display:block;height:\", \";width:\", \";\"], get('space.1'), props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`, props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`);\nconst AvatarToken = /*#__PURE__*/forwardRef((_ref, forwardedRef) => {\n  let {\n    avatarSrc,\n    id,\n    size,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Token, _extends({\n    leadingVisual: () => /*#__PURE__*/React.createElement(AvatarContainer, {\n      avatarSize: size || defaultTokenSize\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarSrc,\n      size: parseInt(tokenSizes[size || defaultTokenSize], 10),\n      sx: {\n        width: '100%',\n        height: '100%'\n      }\n    })),\n    size: size,\n    id: id === null || id === void 0 ? void 0 : id.toString(),\n    sx: {\n      paddingLeft: get('space.1')\n    }\n  }, rest, {\n    ref: forwardedRef\n  }));\n});\nAvatarToken.defaultProps = {\n  size: defaultTokenSize\n};\nAvatarToken.displayName = 'AvatarToken';\nexport default AvatarToken;","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/Token/AvatarToken.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","forwardRef","styled","get","defaultTokenSize","tokenSizes","Token","Avatar","AvatarContainer","span","withConfig","displayName","componentId","props","avatarSize","AvatarToken","forwardedRef","avatarSrc","id","size","rest","createElement","leadingVisual","src","parseInt","sx","width","height","toString","paddingLeft","ref","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants';\nimport { defaultTokenSize, tokenSizes } from './TokenBase';\nimport Token from './Token';\nimport { Avatar } from '..'; // TODO: update props to only accept 'large' and 'xlarge' on the next breaking change\n\nconst AvatarContainer = styled.span.withConfig({\n  displayName: \"AvatarToken__AvatarContainer\",\n  componentId: \"sc-62sih1-0\"\n})([\"--spacing:calc(\", \" * 2);display:block;height:\", \";width:\", \";\"], get('space.1'), props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`, props => `calc(${tokenSizes[props.avatarSize]} - var(--spacing))`);\nconst AvatarToken = /*#__PURE__*/forwardRef(({\n  avatarSrc,\n  id,\n  size,\n  ...rest\n}, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(Token, _extends({\n    leadingVisual: () => /*#__PURE__*/React.createElement(AvatarContainer, {\n      avatarSize: size || defaultTokenSize\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: avatarSrc,\n      size: parseInt(tokenSizes[size || defaultTokenSize], 10),\n      sx: {\n        width: '100%',\n        height: '100%'\n      }\n    })),\n    size: size,\n    id: id === null || id === void 0 ? void 0 : id.toString(),\n    sx: {\n      paddingLeft: get('space.1')\n    }\n  }, rest, {\n    ref: forwardedRef\n  }));\n});\nAvatarToken.defaultProps = {\n  size: defaultTokenSize\n};\nAvatarToken.displayName = 'AvatarToken';\nexport default AvatarToken;"]},"metadata":{},"sourceType":"module"}