{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport classnames from 'classnames';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { get } from './constants';\nimport { FocusKeys, useFocusZone } from './hooks/useFocusZone';\nimport sx from './sx';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst ITEM_CLASS = 'TabNav-item';\nconst SELECTED_CLASS = 'selected';\nconst TabNavBase = styled.div.withConfig({\n  displayName: \"TabNav__TabNavBase\",\n  componentId: \"sc-1ab407u-0\"\n})([\"\", \"\"], sx);\nconst TabNavTabList = styled.div.withConfig({\n  displayName: \"TabNav__TabNavTabList\",\n  componentId: \"sc-1ab407u-1\"\n})([\"display:flex;margin-bottom:-1px;overflow:auto;\"]);\nconst TabNavNav = styled.nav.withConfig({\n  displayName: \"TabNav__TabNavNav\",\n  componentId: \"sc-1ab407u-2\"\n})([\"margin-top:0;border-bottom:1px solid \", \";\"], get('colors.border.default'));\n\nfunction TabNav(_ref) {\n  let {\n    children,\n    'aria-label': ariaLabel,\n    ...rest\n  } = _ref;\n  const customContainerRef = useRef(null);\n  const customStrategy = React.useCallback(() => {\n    if (customContainerRef.current) {\n      const tabs = Array.from(customContainerRef.current.querySelectorAll('[role=tab][aria-selected=true]'));\n      return tabs[0];\n    }\n  }, [customContainerRef]);\n  const {\n    containerRef: navRef\n  } = useFocusZone({\n    containerRef: customContainerRef,\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.HomeAndEnd,\n    focusOutBehavior: 'wrap',\n    focusInStrategy: customStrategy\n  });\n  return /*#__PURE__*/React.createElement(TabNavBase, _extends({}, rest, {\n    ref: navRef\n  }), /*#__PURE__*/React.createElement(TabNavNav, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(TabNavTabList, {\n    role: \"tablist\"\n  }, children)));\n}\n\nTabNav.displayName = \"TabNav\";\nconst TabNavLink = styled.a.attrs(props => ({\n  activeClassName: typeof props.to === 'string' ? 'selected' : '',\n  className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className),\n  role: 'tab',\n  'aria-selected': !!props.selected,\n  tabIndex: -1\n})).withConfig({\n  displayName: \"TabNav__TabNavLink\",\n  componentId: \"sc-1ab407u-3\"\n})([\"padding:8px 12px;font-size:\", \";line-height:20px;color:\", \";text-decoration:none;background-color:transparent;border:1px solid transparent;border-bottom:0;\", \";&:hover,&:focus{color:\", \";text-decoration:none;}&.selected{color:\", \";border-color:\", \";border-top-right-radius:\", \";border-top-left-radius:\", \";background-color:\", \";}\", \";\"], get('fontSizes.1'), get('colors.fg.default'), getGlobalFocusStyles('-6px'), get('colors.fg.default'), get('colors.fg.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.default'), sx);\nTabNavLink.displayName = 'TabNav.Link';\nexport default Object.assign(TabNav, {\n  Link: TabNavLink\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/notifications/node_modules/@primer/react/lib-esm/TabNav.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","classnames","React","useRef","styled","get","FocusKeys","useFocusZone","sx","getGlobalFocusStyles","ITEM_CLASS","SELECTED_CLASS","TabNavBase","div","withConfig","displayName","componentId","TabNavTabList","TabNavNav","nav","TabNav","children","ariaLabel","rest","customContainerRef","customStrategy","useCallback","current","tabs","Array","from","querySelectorAll","containerRef","navRef","bindKeys","ArrowHorizontal","HomeAndEnd","focusOutBehavior","focusInStrategy","createElement","ref","role","TabNavLink","a","attrs","props","activeClassName","to","className","selected","tabIndex","Link"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport classnames from 'classnames';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { get } from './constants';\nimport { FocusKeys, useFocusZone } from './hooks/useFocusZone';\nimport sx from './sx';\nimport getGlobalFocusStyles from './_getGlobalFocusStyles';\nconst ITEM_CLASS = 'TabNav-item';\nconst SELECTED_CLASS = 'selected';\nconst TabNavBase = styled.div.withConfig({\n  displayName: \"TabNav__TabNavBase\",\n  componentId: \"sc-1ab407u-0\"\n})([\"\", \"\"], sx);\nconst TabNavTabList = styled.div.withConfig({\n  displayName: \"TabNav__TabNavTabList\",\n  componentId: \"sc-1ab407u-1\"\n})([\"display:flex;margin-bottom:-1px;overflow:auto;\"]);\nconst TabNavNav = styled.nav.withConfig({\n  displayName: \"TabNav__TabNavNav\",\n  componentId: \"sc-1ab407u-2\"\n})([\"margin-top:0;border-bottom:1px solid \", \";\"], get('colors.border.default'));\n\nfunction TabNav({\n  children,\n  'aria-label': ariaLabel,\n  ...rest\n}) {\n  const customContainerRef = useRef(null);\n  const customStrategy = React.useCallback(() => {\n    if (customContainerRef.current) {\n      const tabs = Array.from(customContainerRef.current.querySelectorAll('[role=tab][aria-selected=true]'));\n      return tabs[0];\n    }\n  }, [customContainerRef]);\n  const {\n    containerRef: navRef\n  } = useFocusZone({\n    containerRef: customContainerRef,\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.HomeAndEnd,\n    focusOutBehavior: 'wrap',\n    focusInStrategy: customStrategy\n  });\n  return /*#__PURE__*/React.createElement(TabNavBase, _extends({}, rest, {\n    ref: navRef\n  }), /*#__PURE__*/React.createElement(TabNavNav, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(TabNavTabList, {\n    role: \"tablist\"\n  }, children)));\n}\n\nTabNav.displayName = \"TabNav\";\nconst TabNavLink = styled.a.attrs(props => ({\n  activeClassName: typeof props.to === 'string' ? 'selected' : '',\n  className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className),\n  role: 'tab',\n  'aria-selected': !!props.selected,\n  tabIndex: -1\n})).withConfig({\n  displayName: \"TabNav__TabNavLink\",\n  componentId: \"sc-1ab407u-3\"\n})([\"padding:8px 12px;font-size:\", \";line-height:20px;color:\", \";text-decoration:none;background-color:transparent;border:1px solid transparent;border-bottom:0;\", \";&:hover,&:focus{color:\", \";text-decoration:none;}&.selected{color:\", \";border-color:\", \";border-top-right-radius:\", \";border-top-left-radius:\", \";background-color:\", \";}\", \";\"], get('fontSizes.1'), get('colors.fg.default'), getGlobalFocusStyles('-6px'), get('colors.fg.default'), get('colors.fg.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.default'), sx);\nTabNavLink.displayName = 'TabNav.Link';\nexport default Object.assign(TabNav, {\n  Link: TabNavLink\n});"]},"metadata":{},"sourceType":"module"}