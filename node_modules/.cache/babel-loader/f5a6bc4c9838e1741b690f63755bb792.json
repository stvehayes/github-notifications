{"ast":null,"code":"/**\n * @module Listeners\n *\n */\n// flag for whether click listener has been bound to document\nvar _clicksBound = false; // flag for whether keydown listener has been bound to document\n\nvar _keysBound = false;\nvar Listeners = {\n  /**\n   * _bindKeys\n   *\n   * @access public\n   */\n  bindKeys: function bindKeys(callback) {\n    if (!_keysBound) {\n      document.addEventListener('keydown', callback);\n      _keysBound = true;\n    }\n  },\n\n  /**\n   * unbindKeys\n   *\n   * @access public\n   */\n  unbindKeys: function unbindKeys(callback) {\n    if (_keysBound) {\n      document.removeEventListener('keydown', callback);\n      _keysBound = false;\n    }\n  },\n\n  /**\n   * bindClicks\n   *\n   * @access public\n   */\n  bindClicks: function bindClicks(callback) {\n    if (!_clicksBound) {\n      document.addEventListener('click', callback, true);\n      _clicksBound = true;\n    }\n  },\n\n  /**\n   * unbindClicks\n   *\n   * @access public\n   */\n  unbindClicks: function unbindClicks(callback) {\n    if (_clicksBound) {\n      document.removeEventListener('click', callback, true);\n      _clicksBound = false;\n    }\n  }\n};\nexport default Listeners;","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/react-keydown/es/lib/listeners.js"],"names":["_clicksBound","_keysBound","Listeners","bindKeys","callback","document","addEventListener","unbindKeys","removeEventListener","bindClicks","unbindClicks"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA,IAAIA,YAAY,GAAG,KAAnB,C,CAEA;;AACA,IAAIC,UAAU,GAAG,KAAjB;AAEA,IAAIC,SAAS,GAAG;AACd;AACF;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AACpC,QAAI,CAACH,UAAL,EAAiB;AACfI,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCF,QAArC;AACAH,MAAAA,UAAU,GAAG,IAAb;AACD;AACF,GAXa;;AAcd;AACF;AACA;AACA;AACA;AACEM,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBH,QAApB,EAA8B;AACxC,QAAIH,UAAJ,EAAgB;AACdI,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,SAA7B,EAAwCJ,QAAxC;AACAH,MAAAA,UAAU,GAAG,KAAb;AACD;AACF,GAxBa;;AA2Bd;AACF;AACA;AACA;AACA;AACEQ,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBL,QAApB,EAA8B;AACxC,QAAI,CAACJ,YAAL,EAAmB;AACjBK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCF,QAAnC,EAA6C,IAA7C;AACAJ,MAAAA,YAAY,GAAG,IAAf;AACD;AACF,GArCa;;AAwCd;AACF;AACA;AACA;AACA;AACEU,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBN,QAAtB,EAAgC;AAC5C,QAAIJ,YAAJ,EAAkB;AAChBK,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCJ,QAAtC,EAAgD,IAAhD;AACAJ,MAAAA,YAAY,GAAG,KAAf;AACD;AACF;AAlDa,CAAhB;AAqDA,eAAeE,SAAf","sourcesContent":["/**\n * @module Listeners\n *\n */\n\n// flag for whether click listener has been bound to document\nvar _clicksBound = false;\n\n// flag for whether keydown listener has been bound to document\nvar _keysBound = false;\n\nvar Listeners = {\n  /**\n   * _bindKeys\n   *\n   * @access public\n   */\n  bindKeys: function bindKeys(callback) {\n    if (!_keysBound) {\n      document.addEventListener('keydown', callback);\n      _keysBound = true;\n    }\n  },\n\n\n  /**\n   * unbindKeys\n   *\n   * @access public\n   */\n  unbindKeys: function unbindKeys(callback) {\n    if (_keysBound) {\n      document.removeEventListener('keydown', callback);\n      _keysBound = false;\n    }\n  },\n\n\n  /**\n   * bindClicks\n   *\n   * @access public\n   */\n  bindClicks: function bindClicks(callback) {\n    if (!_clicksBound) {\n      document.addEventListener('click', callback, true);\n      _clicksBound = true;\n    }\n  },\n\n\n  /**\n   * unbindClicks\n   *\n   * @access public\n   */\n  unbindClicks: function unbindClicks(callback) {\n    if (_clicksBound) {\n      document.removeEventListener('click', callback, true);\n      _clicksBound = false;\n    }\n  }\n};\n\nexport default Listeners;"]},"metadata":{},"sourceType":"module"}