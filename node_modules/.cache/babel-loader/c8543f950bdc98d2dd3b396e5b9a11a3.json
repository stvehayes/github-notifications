{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport { TriangleDownIcon } from '@primer/octicons-react';\nimport { AnchoredOverlay } from './AnchoredOverlay';\nimport { useProvidedRefOrCreate, useProvidedStateOrCreate, useMenuInitialFocus, useMnemonics } from './hooks';\nimport { Divider } from './ActionList/Divider';\nimport { ActionListContainerContext } from './ActionList/ActionListContainerContext';\nimport { Button } from './Button';\nimport { merge } from './sx';\nconst MenuContext = /*#__PURE__*/React.createContext({\n  renderAnchor: null,\n  open: false\n});\n\nconst Menu = _ref => {\n  let {\n    anchorRef: externalAnchorRef,\n    open,\n    onOpenChange,\n    children\n  } = _ref;\n  const [combinedOpenState, setCombinedOpenState] = useProvidedStateOrCreate(open, onOpenChange, false);\n  const onOpen = React.useCallback(() => setCombinedOpenState(true), [setCombinedOpenState]);\n  const onClose = React.useCallback(() => setCombinedOpenState(false), [setCombinedOpenState]);\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const anchorId = useSSRSafeId();\n  let renderAnchor = null; // 🚨 Hack for good API!\n  // we strip out Anchor from children and pass it to AnchoredOverlay to render\n  // with additional props for accessibility\n\n  const contents = React.Children.map(children, child => {\n    if (child.type === MenuButton || child.type === Anchor) {\n      renderAnchor = anchorProps => /*#__PURE__*/React.cloneElement(child, anchorProps);\n\n      return null;\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: {\n      anchorRef,\n      renderAnchor,\n      anchorId,\n      open: combinedOpenState,\n      onOpen,\n      onClose\n    }\n  }, contents);\n};\n\nMenu.displayName = \"Menu\";\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref2, anchorRef) => {\n  let {\n    children,\n    ...anchorProps\n  } = _ref2;\n  return /*#__PURE__*/React.cloneElement(children, { ...anchorProps,\n    ref: anchorRef\n  });\n});\n/** this component is syntactical sugar 🍭 */\n\nconst MenuButton = /*#__PURE__*/React.forwardRef((_ref3, anchorRef) => {\n  let {\n    sx: sxProp = {},\n    ...props\n  } = _ref3;\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    type: \"button\",\n    trailingIcon: TriangleDownIcon,\n    sx: merge({\n      // override the margin on caret for optical alignment\n      '[data-component=trailingIcon]': {\n        marginX: -1\n      }\n    }, sxProp)\n  }, props)));\n});\n\nconst Overlay = _ref4 => {\n  let {\n    children,\n    align = 'start',\n    ...overlayProps\n  } = _ref4;\n  // we typecast anchorRef as required instead of optional\n  // because we know that we're setting it in context in Menu\n  const {\n    anchorRef,\n    renderAnchor,\n    anchorId,\n    open,\n    onOpen,\n    onClose\n  } = React.useContext(MenuContext);\n  const containerRef = /*#__PURE__*/React.createRef();\n  const {\n    openWithFocus\n  } = useMenuInitialFocus(open, onOpen, containerRef);\n  useMnemonics(open, containerRef);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    anchorRef: anchorRef,\n    renderAnchor: renderAnchor,\n    anchorId: anchorId,\n    open: open,\n    onOpen: openWithFocus,\n    onClose: onClose,\n    align: align,\n    overlayProps: overlayProps,\n    focusZoneSettings: {\n      focusOutBehavior: 'wrap'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ActionListContainerContext.Provider, {\n    value: {\n      container: 'ActionMenu',\n      listRole: 'menu',\n      listLabelledBy: anchorId,\n      selectionAttribute: 'aria-checked',\n      // Should this be here?\n      afterSelect: onClose\n    }\n  }, children)));\n};\n\nOverlay.displayName = \"Overlay\";\nMenu.displayName = 'ActionMenu';\nexport const ActionMenu = Object.assign(Menu, {\n  Button: MenuButton,\n  Anchor,\n  Overlay,\n  Divider\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/ActionMenu.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","useSSRSafeId","TriangleDownIcon","AnchoredOverlay","useProvidedRefOrCreate","useProvidedStateOrCreate","useMenuInitialFocus","useMnemonics","Divider","ActionListContainerContext","Button","merge","MenuContext","createContext","renderAnchor","open","Menu","anchorRef","externalAnchorRef","onOpenChange","children","combinedOpenState","setCombinedOpenState","onOpen","useCallback","onClose","anchorId","contents","Children","map","child","type","MenuButton","Anchor","anchorProps","cloneElement","createElement","Provider","value","displayName","forwardRef","ref","sx","sxProp","props","trailingIcon","marginX","Overlay","align","overlayProps","useContext","containerRef","createRef","openWithFocus","focusZoneSettings","focusOutBehavior","container","listRole","listLabelledBy","selectionAttribute","afterSelect","ActionMenu"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { useSSRSafeId } from '@react-aria/ssr';\nimport { TriangleDownIcon } from '@primer/octicons-react';\nimport { AnchoredOverlay } from './AnchoredOverlay';\nimport { useProvidedRefOrCreate, useProvidedStateOrCreate, useMenuInitialFocus, useMnemonics } from './hooks';\nimport { Divider } from './ActionList/Divider';\nimport { ActionListContainerContext } from './ActionList/ActionListContainerContext';\nimport { Button } from './Button';\nimport { merge } from './sx';\nconst MenuContext = /*#__PURE__*/React.createContext({\n  renderAnchor: null,\n  open: false\n});\n\nconst Menu = ({\n  anchorRef: externalAnchorRef,\n  open,\n  onOpenChange,\n  children\n}) => {\n  const [combinedOpenState, setCombinedOpenState] = useProvidedStateOrCreate(open, onOpenChange, false);\n  const onOpen = React.useCallback(() => setCombinedOpenState(true), [setCombinedOpenState]);\n  const onClose = React.useCallback(() => setCombinedOpenState(false), [setCombinedOpenState]);\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const anchorId = useSSRSafeId();\n  let renderAnchor = null; // 🚨 Hack for good API!\n  // we strip out Anchor from children and pass it to AnchoredOverlay to render\n  // with additional props for accessibility\n\n  const contents = React.Children.map(children, child => {\n    if (child.type === MenuButton || child.type === Anchor) {\n      renderAnchor = anchorProps => /*#__PURE__*/React.cloneElement(child, anchorProps);\n\n      return null;\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: {\n      anchorRef,\n      renderAnchor,\n      anchorId,\n      open: combinedOpenState,\n      onOpen,\n      onClose\n    }\n  }, contents);\n};\n\nMenu.displayName = \"Menu\";\nconst Anchor = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...anchorProps\n}, anchorRef) => {\n  return /*#__PURE__*/React.cloneElement(children, { ...anchorProps,\n    ref: anchorRef\n  });\n});\n/** this component is syntactical sugar 🍭 */\n\nconst MenuButton = /*#__PURE__*/React.forwardRef(({\n  sx: sxProp = {},\n  ...props\n}, anchorRef) => {\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: anchorRef\n  }, /*#__PURE__*/React.createElement(Button, _extends({\n    type: \"button\",\n    trailingIcon: TriangleDownIcon,\n    sx: merge({\n      // override the margin on caret for optical alignment\n      '[data-component=trailingIcon]': {\n        marginX: -1\n      }\n    }, sxProp)\n  }, props)));\n});\n\nconst Overlay = ({\n  children,\n  align = 'start',\n  ...overlayProps\n}) => {\n  // we typecast anchorRef as required instead of optional\n  // because we know that we're setting it in context in Menu\n  const {\n    anchorRef,\n    renderAnchor,\n    anchorId,\n    open,\n    onOpen,\n    onClose\n  } = React.useContext(MenuContext);\n  const containerRef = /*#__PURE__*/React.createRef();\n  const {\n    openWithFocus\n  } = useMenuInitialFocus(open, onOpen, containerRef);\n  useMnemonics(open, containerRef);\n  return /*#__PURE__*/React.createElement(AnchoredOverlay, {\n    anchorRef: anchorRef,\n    renderAnchor: renderAnchor,\n    anchorId: anchorId,\n    open: open,\n    onOpen: openWithFocus,\n    onClose: onClose,\n    align: align,\n    overlayProps: overlayProps,\n    focusZoneSettings: {\n      focusOutBehavior: 'wrap'\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef\n  }, /*#__PURE__*/React.createElement(ActionListContainerContext.Provider, {\n    value: {\n      container: 'ActionMenu',\n      listRole: 'menu',\n      listLabelledBy: anchorId,\n      selectionAttribute: 'aria-checked',\n      // Should this be here?\n      afterSelect: onClose\n    }\n  }, children)));\n};\n\nOverlay.displayName = \"Overlay\";\nMenu.displayName = 'ActionMenu';\nexport const ActionMenu = Object.assign(Menu, {\n  Button: MenuButton,\n  Anchor,\n  Overlay,\n  Divider\n});"]},"metadata":{},"sourceType":"module"}