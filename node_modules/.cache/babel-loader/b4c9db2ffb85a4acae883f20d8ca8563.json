{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Group } from './Group';\nimport { Item } from './Item';\nimport { Divider } from './Divider';\nimport styled from 'styled-components';\nimport { get } from '../../constants';\nimport { hasActiveDescendantAttribute } from '@primer/behaviors';\n/**\n * Asserts that the given value fulfills the `GroupedListProps` contract.\n * @param props A value which fulfills either the `ListPropsBase` or the `GroupedListProps` contract.\n */\n\nfunction isGroupedListProps(props) {\n  return 'groupMetadata' in props;\n}\n/**\n * Contract for props passed to the `List` component.\n */\n\n\nconst StyledList = styled.div.withConfig({\n  displayName: \"List__StyledList\",\n  componentId: \"sc-hkz3q0-0\"\n})([\"font-size:\", \";line-height:20px;&[\", \"],&:focus-within{--item-hover-bg-override:none;--item-hover-divider-border-color-override:\", \";}\"], get('fontSizes.1'), hasActiveDescendantAttribute, get('colors.border.muted'));\n/**\n * Returns `sx` prop values for `List` children matching the given `List` style variation.\n * @param variant `List` style variation.\n */\n\nfunction useListVariant() {\n  let variant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'inset';\n\n  switch (variant) {\n    case 'full':\n      return {\n        headerStyle: {\n          paddingX: get('space.2')\n        },\n        itemStyle: {\n          borderRadius: 0\n        }\n      };\n\n    default:\n      return {\n        firstGroupStyle: {\n          marginTop: get('space.2')\n        },\n        lastGroupStyle: {\n          marginBottom: get('space.2')\n        },\n        itemStyle: {\n          marginX: get('space.2')\n        }\n      };\n  }\n}\n/**\n * Lists `Item`s, either grouped or ungrouped, with a `Divider` between each `Group`.\n */\n\n\nexport const List = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  // Get `sx` prop values for `List` children matching the given `List` style variation.\n  const {\n    firstGroupStyle,\n    lastGroupStyle,\n    headerStyle,\n    itemStyle\n  } = useListVariant(props.variant);\n  /**\n   * Render a `Group` using the first of the following renderers that is defined:\n   * A `Group`-level or `List`-level custom `Group` renderer, or\n   * the default `Group` renderer.\n   */\n\n  const renderGroup = groupProps => {\n    var _ref;\n\n    const GroupComponent = ((_ref = 'renderGroup' in groupProps && groupProps.renderGroup) !== null && _ref !== void 0 ? _ref : props.renderGroup) || Group;\n    return /*#__PURE__*/React.createElement(GroupComponent, _extends({}, groupProps, {\n      key: groupProps.groupId\n    }));\n  };\n  /**\n   * Render an `Item` using the first of the following renderers that is defined:\n   * An `Item`-level, `Group`-level, or `List`-level custom `Item` renderer,\n   * or the default `Item` renderer.\n   */\n\n\n  const renderItem = (itemProps, item, itemIndex) => {\n    var _ref2, _ref3, _itemProps$id; // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n\n\n    const ItemComponent = 'renderItem' in itemProps && itemProps.renderItem || props.renderItem || Item;\n    const key = (_ref2 = (_ref3 = 'key' in itemProps ? itemProps.key : undefined) !== null && _ref3 !== void 0 ? _ref3 : (_itemProps$id = itemProps.id) === null || _itemProps$id === void 0 ? void 0 : _itemProps$id.toString()) !== null && _ref2 !== void 0 ? _ref2 : itemIndex.toString();\n    return /*#__PURE__*/React.createElement(ItemComponent, _extends({\n      showDivider: props.showItemDividers,\n      selectionVariant: props.selectionVariant\n    }, itemProps, {\n      key: key,\n      sx: { ...itemStyle,\n        ...itemProps.sx\n      },\n      item: item\n    }));\n  };\n  /**\n   * An array of `Group`s, each with an associated `Header` and with an array of `Item`s belonging to that `Group`.\n   */\n\n\n  let groups = []; // Collect rendered `Item`s into `Group`s, avoiding excess iteration over the lists of `items` and `groupMetadata`:\n\n  if (!isGroupedListProps(props)) {\n    // When no `groupMetadata`s is provided, collect rendered `Item`s into a single anonymous `Group`.\n    groups = [{\n      items: props.items.map((item, index) => renderItem(item, item, index)),\n      groupId: '0'\n    }];\n  } else {\n    // When `groupMetadata` is provided, collect rendered `Item`s into their associated `Group`s.\n\n    /**\n     * A map of group identifiers to `Group`s, each with an associated array of `Item`s belonging to that `Group`.\n     */\n    const groupMap = props.groupMetadata.reduce((groupAccumulator, groupMetadata) => groupAccumulator.set(groupMetadata.groupId, groupMetadata), new Map());\n\n    for (const itemProps of props.items) {\n      var _group$items$length, _group$items, _group$items2; // Look up the group associated with the current item.\n\n\n      const group = groupMap.get(itemProps.groupId);\n      const itemIndex = (_group$items$length = group === null || group === void 0 ? void 0 : (_group$items = group.items) === null || _group$items === void 0 ? void 0 : _group$items.length) !== null && _group$items$length !== void 0 ? _group$items$length : 0; // Upsert the group to include the current item (rendered).\n\n      groupMap.set(itemProps.groupId, { ...group,\n        items: [...((_group$items2 = group === null || group === void 0 ? void 0 : group.items) !== null && _group$items2 !== void 0 ? _group$items2 : []), renderItem({\n          showDivider: group === null || group === void 0 ? void 0 : group.showItemDividers,\n          ...(group && 'renderItem' in group && {\n            renderItem: group.renderItem\n          }),\n          ...itemProps\n        }, itemProps, itemIndex)]\n      });\n    }\n\n    groups = [...groupMap.values()];\n  }\n\n  return /*#__PURE__*/React.createElement(StyledList, _extends({}, props, {\n    ref: forwardedRef\n  }), groups.map((_ref4, index) => {\n    let {\n      header,\n      ...groupProps\n    } = _ref4;\n    const hasFilledHeader = (header === null || header === void 0 ? void 0 : header.variant) === 'filled';\n    const shouldShowDivider = index > 0 && !hasFilledHeader;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: groupProps.groupId\n    }, shouldShowDivider ? /*#__PURE__*/React.createElement(Divider, {\n      key: `${groupProps.groupId}-divider`\n    }) : null, renderGroup({\n      sx: { ...(index === 0 && firstGroupStyle),\n        ...(index === groups.length - 1 && lastGroupStyle),\n        ...(index > 0 && !shouldShowDivider && {\n          mt: 2\n        })\n      },\n      ...(header && {\n        header: { ...header,\n          sx: { ...headerStyle,\n            ...header.sx\n          }\n        }\n      }),\n      ...groupProps\n    }));\n  }));\n});\nList.displayName = 'ActionList';","map":{"version":3,"sources":["/Users/steve/Documents/repos/github-notifications/node_modules/@primer/react/lib-esm/deprecated/ActionList/List.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Group","Item","Divider","styled","get","hasActiveDescendantAttribute","isGroupedListProps","props","StyledList","div","withConfig","displayName","componentId","useListVariant","variant","headerStyle","paddingX","itemStyle","borderRadius","firstGroupStyle","marginTop","lastGroupStyle","marginBottom","marginX","List","forwardRef","forwardedRef","renderGroup","groupProps","_ref","GroupComponent","createElement","groupId","renderItem","itemProps","item","itemIndex","_ref2","_ref3","_itemProps$id","ItemComponent","undefined","id","toString","showDivider","showItemDividers","selectionVariant","sx","groups","items","map","index","groupMap","groupMetadata","reduce","groupAccumulator","set","Map","_group$items$length","_group$items","_group$items2","group","values","ref","header","hasFilledHeader","shouldShowDivider","Fragment","mt"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Group } from './Group';\nimport { Item } from './Item';\nimport { Divider } from './Divider';\nimport styled from 'styled-components';\nimport { get } from '../../constants';\nimport { hasActiveDescendantAttribute } from '@primer/behaviors';\n\n/**\n * Asserts that the given value fulfills the `GroupedListProps` contract.\n * @param props A value which fulfills either the `ListPropsBase` or the `GroupedListProps` contract.\n */\nfunction isGroupedListProps(props) {\n  return 'groupMetadata' in props;\n}\n/**\n * Contract for props passed to the `List` component.\n */\n\n\nconst StyledList = styled.div.withConfig({\n  displayName: \"List__StyledList\",\n  componentId: \"sc-hkz3q0-0\"\n})([\"font-size:\", \";line-height:20px;&[\", \"],&:focus-within{--item-hover-bg-override:none;--item-hover-divider-border-color-override:\", \";}\"], get('fontSizes.1'), hasActiveDescendantAttribute, get('colors.border.muted'));\n/**\n * Returns `sx` prop values for `List` children matching the given `List` style variation.\n * @param variant `List` style variation.\n */\n\nfunction useListVariant(variant = 'inset') {\n  switch (variant) {\n    case 'full':\n      return {\n        headerStyle: {\n          paddingX: get('space.2')\n        },\n        itemStyle: {\n          borderRadius: 0\n        }\n      };\n\n    default:\n      return {\n        firstGroupStyle: {\n          marginTop: get('space.2')\n        },\n        lastGroupStyle: {\n          marginBottom: get('space.2')\n        },\n        itemStyle: {\n          marginX: get('space.2')\n        }\n      };\n  }\n}\n/**\n * Lists `Item`s, either grouped or ungrouped, with a `Divider` between each `Group`.\n */\n\n\nexport const List = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  // Get `sx` prop values for `List` children matching the given `List` style variation.\n  const {\n    firstGroupStyle,\n    lastGroupStyle,\n    headerStyle,\n    itemStyle\n  } = useListVariant(props.variant);\n  /**\n   * Render a `Group` using the first of the following renderers that is defined:\n   * A `Group`-level or `List`-level custom `Group` renderer, or\n   * the default `Group` renderer.\n   */\n\n  const renderGroup = groupProps => {\n    var _ref;\n\n    const GroupComponent = ((_ref = 'renderGroup' in groupProps && groupProps.renderGroup) !== null && _ref !== void 0 ? _ref : props.renderGroup) || Group;\n    return /*#__PURE__*/React.createElement(GroupComponent, _extends({}, groupProps, {\n      key: groupProps.groupId\n    }));\n  };\n  /**\n   * Render an `Item` using the first of the following renderers that is defined:\n   * An `Item`-level, `Group`-level, or `List`-level custom `Item` renderer,\n   * or the default `Item` renderer.\n   */\n\n\n  const renderItem = (itemProps, item, itemIndex) => {\n    var _ref2, _ref3, _itemProps$id;\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    const ItemComponent = 'renderItem' in itemProps && itemProps.renderItem || props.renderItem || Item;\n    const key = (_ref2 = (_ref3 = 'key' in itemProps ? itemProps.key : undefined) !== null && _ref3 !== void 0 ? _ref3 : (_itemProps$id = itemProps.id) === null || _itemProps$id === void 0 ? void 0 : _itemProps$id.toString()) !== null && _ref2 !== void 0 ? _ref2 : itemIndex.toString();\n    return /*#__PURE__*/React.createElement(ItemComponent, _extends({\n      showDivider: props.showItemDividers,\n      selectionVariant: props.selectionVariant\n    }, itemProps, {\n      key: key,\n      sx: { ...itemStyle,\n        ...itemProps.sx\n      },\n      item: item\n    }));\n  };\n  /**\n   * An array of `Group`s, each with an associated `Header` and with an array of `Item`s belonging to that `Group`.\n   */\n\n\n  let groups = []; // Collect rendered `Item`s into `Group`s, avoiding excess iteration over the lists of `items` and `groupMetadata`:\n\n  if (!isGroupedListProps(props)) {\n    // When no `groupMetadata`s is provided, collect rendered `Item`s into a single anonymous `Group`.\n    groups = [{\n      items: props.items.map((item, index) => renderItem(item, item, index)),\n      groupId: '0'\n    }];\n  } else {\n    // When `groupMetadata` is provided, collect rendered `Item`s into their associated `Group`s.\n\n    /**\n     * A map of group identifiers to `Group`s, each with an associated array of `Item`s belonging to that `Group`.\n     */\n    const groupMap = props.groupMetadata.reduce((groupAccumulator, groupMetadata) => groupAccumulator.set(groupMetadata.groupId, groupMetadata), new Map());\n\n    for (const itemProps of props.items) {\n      var _group$items$length, _group$items, _group$items2;\n\n      // Look up the group associated with the current item.\n      const group = groupMap.get(itemProps.groupId);\n      const itemIndex = (_group$items$length = group === null || group === void 0 ? void 0 : (_group$items = group.items) === null || _group$items === void 0 ? void 0 : _group$items.length) !== null && _group$items$length !== void 0 ? _group$items$length : 0; // Upsert the group to include the current item (rendered).\n\n      groupMap.set(itemProps.groupId, { ...group,\n        items: [...((_group$items2 = group === null || group === void 0 ? void 0 : group.items) !== null && _group$items2 !== void 0 ? _group$items2 : []), renderItem({\n          showDivider: group === null || group === void 0 ? void 0 : group.showItemDividers,\n          ...(group && 'renderItem' in group && {\n            renderItem: group.renderItem\n          }),\n          ...itemProps\n        }, itemProps, itemIndex)]\n      });\n    }\n\n    groups = [...groupMap.values()];\n  }\n\n  return /*#__PURE__*/React.createElement(StyledList, _extends({}, props, {\n    ref: forwardedRef\n  }), groups.map(({\n    header,\n    ...groupProps\n  }, index) => {\n    const hasFilledHeader = (header === null || header === void 0 ? void 0 : header.variant) === 'filled';\n    const shouldShowDivider = index > 0 && !hasFilledHeader;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: groupProps.groupId\n    }, shouldShowDivider ? /*#__PURE__*/React.createElement(Divider, {\n      key: `${groupProps.groupId}-divider`\n    }) : null, renderGroup({\n      sx: { ...(index === 0 && firstGroupStyle),\n        ...(index === groups.length - 1 && lastGroupStyle),\n        ...(index > 0 && !shouldShowDivider && {\n          mt: 2\n        })\n      },\n      ...(header && {\n        header: { ...header,\n          sx: { ...headerStyle,\n            ...header.sx\n          }\n        }\n      }),\n      ...groupProps\n    }));\n  }));\n});\nList.displayName = 'ActionList';"]},"metadata":{},"sourceType":"module"}