{"ast":null,"code":"import styled from 'styled-components';\nimport { get } from './constants';\nimport StyledOcticon from './StyledOcticon';\nimport sx from './sx';\nimport isNumeric from './utils/isNumeric';\nconst variantSizes = {\n  small: 56,\n  medium: 96,\n  large: 128\n};\n\nconst sizeStyles = _ref => {\n  let {\n    size,\n    variant = 'medium'\n  } = _ref;\n  const calc = isNumeric(size) ? size : variantSizes[variant];\n  return {\n    width: calc,\n    height: calc\n  };\n};\n\nconst CircleBadge = styled.div.withConfig({\n  displayName: \"CircleBadge\",\n  componentId: \"sc-1ej09kx-0\"\n})([\"display:\", \";align-items:center;justify-content:center;background-color:\", \";border-radius:50%;box-shadow:\", \";\", \";\", \";\"], props => props.inline ? 'inline-flex' : 'flex', get('colors.canvas.default'), get('shadows.shadow.medium'), sizeStyles, sx);\nconst CircleBadgeIcon = styled(StyledOcticon).withConfig({\n  displayName: \"CircleBadge__CircleBadgeIcon\",\n  componentId: \"sc-1ej09kx-1\"\n})([\"height:auto;max-width:60%;max-height:55%;\"]);\nCircleBadge.defaultProps = {\n  inline: false\n};\nCircleBadgeIcon.displayName = 'CircleBadge.Icon';\nexport default Object.assign(CircleBadge, {\n  Icon: CircleBadgeIcon\n});","map":{"version":3,"sources":["/Users/steve/Documents/repos/notifications/node_modules/@primer/react/lib-esm/CircleBadge.js"],"names":["styled","get","StyledOcticon","sx","isNumeric","variantSizes","small","medium","large","sizeStyles","size","variant","calc","width","height","CircleBadge","div","withConfig","displayName","componentId","props","inline","CircleBadgeIcon","defaultProps","Object","assign","Icon"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,UAAU,GAAG,QAGb;AAAA,MAHc;AAClBC,IAAAA,IADkB;AAElBC,IAAAA,OAAO,GAAG;AAFQ,GAGd;AACJ,QAAMC,IAAI,GAAGR,SAAS,CAACM,IAAD,CAAT,GAAkBA,IAAlB,GAAyBL,YAAY,CAACM,OAAD,CAAlD;AACA,SAAO;AACLE,IAAAA,KAAK,EAAED,IADF;AAELE,IAAAA,MAAM,EAAEF;AAFH,GAAP;AAID,CATD;;AAWA,MAAMG,WAAW,GAAGf,MAAM,CAACgB,GAAP,CAAWC,UAAX,CAAsB;AACxCC,EAAAA,WAAW,EAAE,aAD2B;AAExCC,EAAAA,WAAW,EAAE;AAF2B,CAAtB,EAGjB,CAAC,UAAD,EAAa,8DAAb,EAA6E,gCAA7E,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,GAAzH,CAHiB,EAG8GC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,aAAf,GAA+B,MAHtJ,EAG8JpB,GAAG,CAAC,uBAAD,CAHjK,EAG4LA,GAAG,CAAC,uBAAD,CAH/L,EAG0NQ,UAH1N,EAGsON,EAHtO,CAApB;AAIA,MAAMmB,eAAe,GAAGtB,MAAM,CAACE,aAAD,CAAN,CAAsBe,UAAtB,CAAiC;AACvDC,EAAAA,WAAW,EAAE,8BAD0C;AAEvDC,EAAAA,WAAW,EAAE;AAF0C,CAAjC,EAGrB,CAAC,2CAAD,CAHqB,CAAxB;AAIAJ,WAAW,CAACQ,YAAZ,GAA2B;AACzBF,EAAAA,MAAM,EAAE;AADiB,CAA3B;AAGAC,eAAe,CAACJ,WAAhB,GAA8B,kBAA9B;AACA,eAAeM,MAAM,CAACC,MAAP,CAAcV,WAAd,EAA2B;AACxCW,EAAAA,IAAI,EAAEJ;AADkC,CAA3B,CAAf","sourcesContent":["import styled from 'styled-components';\nimport { get } from './constants';\nimport StyledOcticon from './StyledOcticon';\nimport sx from './sx';\nimport isNumeric from './utils/isNumeric';\nconst variantSizes = {\n  small: 56,\n  medium: 96,\n  large: 128\n};\n\nconst sizeStyles = ({\n  size,\n  variant = 'medium'\n}) => {\n  const calc = isNumeric(size) ? size : variantSizes[variant];\n  return {\n    width: calc,\n    height: calc\n  };\n};\n\nconst CircleBadge = styled.div.withConfig({\n  displayName: \"CircleBadge\",\n  componentId: \"sc-1ej09kx-0\"\n})([\"display:\", \";align-items:center;justify-content:center;background-color:\", \";border-radius:50%;box-shadow:\", \";\", \";\", \";\"], props => props.inline ? 'inline-flex' : 'flex', get('colors.canvas.default'), get('shadows.shadow.medium'), sizeStyles, sx);\nconst CircleBadgeIcon = styled(StyledOcticon).withConfig({\n  displayName: \"CircleBadge__CircleBadgeIcon\",\n  componentId: \"sc-1ej09kx-1\"\n})([\"height:auto;max-width:60%;max-height:55%;\"]);\nCircleBadge.defaultProps = {\n  inline: false\n};\nCircleBadgeIcon.displayName = 'CircleBadge.Icon';\nexport default Object.assign(CircleBadge, {\n  Icon: CircleBadgeIcon\n});"]},"metadata":{},"sourceType":"module"}